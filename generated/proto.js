/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.sajari = (function() {

    /**
     * Namespace sajari.
     * @exports sajari
     * @namespace
     */
    var sajari = {};

    sajari.pipeline = (function() {

        /**
         * Namespace pipeline.
         * @memberof sajari
         * @namespace
         */
        var pipeline = {};

        pipeline.v2 = (function() {

            /**
             * Namespace v2.
             * @memberof sajari.pipeline
             * @namespace
             */
            var v2 = {};

            v2.PipelineAdmin = (function() {

                /**
                 * Constructs a new PipelineAdmin service.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a PipelineAdmin
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function PipelineAdmin(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (PipelineAdmin.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = PipelineAdmin;

                /**
                 * Creates new PipelineAdmin service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {PipelineAdmin} RPC service. Useful where requests and/or responses are streamed.
                 */
                PipelineAdmin.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#createPipeline}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef CreatePipelineCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.CreatePipelineResponse} [response] CreatePipelineResponse
                 */

                /**
                 * Calls CreatePipeline.
                 * @function createPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest} request CreatePipelineRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.CreatePipelineCallback} callback Node-style callback called with the error, if any, and CreatePipelineResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.createPipeline = function createPipeline(request, callback) {
                    return this.rpcCall(createPipeline, $root.sajari.pipeline.v2.CreatePipelineRequest, $root.sajari.pipeline.v2.CreatePipelineResponse, request, callback);
                }, "name", { value: "CreatePipeline" });

                /**
                 * Calls CreatePipeline.
                 * @function createPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest} request CreatePipelineRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.CreatePipelineResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#listPipelines}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef ListPipelinesCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.ListPipelinesResponse} [response] ListPipelinesResponse
                 */

                /**
                 * Calls ListPipelines.
                 * @function listPipelines
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IListPipelinesRequest} request ListPipelinesRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.ListPipelinesCallback} callback Node-style callback called with the error, if any, and ListPipelinesResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.listPipelines = function listPipelines(request, callback) {
                    return this.rpcCall(listPipelines, $root.sajari.pipeline.v2.ListPipelinesRequest, $root.sajari.pipeline.v2.ListPipelinesResponse, request, callback);
                }, "name", { value: "ListPipelines" });

                /**
                 * Calls ListPipelines.
                 * @function listPipelines
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IListPipelinesRequest} request ListPipelinesRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.ListPipelinesResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#getPipeline}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef GetPipelineCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.GetPipelineResponse} [response] GetPipelineResponse
                 */

                /**
                 * Calls GetPipeline.
                 * @function getPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IGetPipelineRequest} request GetPipelineRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.GetPipelineCallback} callback Node-style callback called with the error, if any, and GetPipelineResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.getPipeline = function getPipeline(request, callback) {
                    return this.rpcCall(getPipeline, $root.sajari.pipeline.v2.GetPipelineRequest, $root.sajari.pipeline.v2.GetPipelineResponse, request, callback);
                }, "name", { value: "GetPipeline" });

                /**
                 * Calls GetPipeline.
                 * @function getPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IGetPipelineRequest} request GetPipelineRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.GetPipelineResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#setDefaultPipeline}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef SetDefaultPipelineCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.SetDefaultPipelineResponse} [response] SetDefaultPipelineResponse
                 */

                /**
                 * Calls SetDefaultPipeline.
                 * @function setDefaultPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest} request SetDefaultPipelineRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.SetDefaultPipelineCallback} callback Node-style callback called with the error, if any, and SetDefaultPipelineResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.setDefaultPipeline = function setDefaultPipeline(request, callback) {
                    return this.rpcCall(setDefaultPipeline, $root.sajari.pipeline.v2.SetDefaultPipelineRequest, $root.sajari.pipeline.v2.SetDefaultPipelineResponse, request, callback);
                }, "name", { value: "SetDefaultPipeline" });

                /**
                 * Calls SetDefaultPipeline.
                 * @function setDefaultPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest} request SetDefaultPipelineRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.SetDefaultPipelineResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#getDefaultPipeline}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef GetDefaultPipelineCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.GetDefaultPipelineResponse} [response] GetDefaultPipelineResponse
                 */

                /**
                 * Calls GetDefaultPipeline.
                 * @function getDefaultPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest} request GetDefaultPipelineRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.GetDefaultPipelineCallback} callback Node-style callback called with the error, if any, and GetDefaultPipelineResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.getDefaultPipeline = function getDefaultPipeline(request, callback) {
                    return this.rpcCall(getDefaultPipeline, $root.sajari.pipeline.v2.GetDefaultPipelineRequest, $root.sajari.pipeline.v2.GetDefaultPipelineResponse, request, callback);
                }, "name", { value: "GetDefaultPipeline" });

                /**
                 * Calls GetDefaultPipeline.
                 * @function getDefaultPipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest} request GetDefaultPipelineRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.GetDefaultPipelineResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.PipelineAdmin#deletePipeline}.
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @typedef DeletePipelineCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.DeletePipelineResponse} [response] DeletePipelineResponse
                 */

                /**
                 * Calls DeletePipeline.
                 * @function deletePipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest} request DeletePipelineRequest message or plain object
                 * @param {sajari.pipeline.v2.PipelineAdmin.DeletePipelineCallback} callback Node-style callback called with the error, if any, and DeletePipelineResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(PipelineAdmin.prototype.deletePipeline = function deletePipeline(request, callback) {
                    return this.rpcCall(deletePipeline, $root.sajari.pipeline.v2.DeletePipelineRequest, $root.sajari.pipeline.v2.DeletePipelineResponse, request, callback);
                }, "name", { value: "DeletePipeline" });

                /**
                 * Calls DeletePipeline.
                 * @function deletePipeline
                 * @memberof sajari.pipeline.v2.PipelineAdmin
                 * @instance
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest} request DeletePipelineRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.DeletePipelineResponse>} Promise
                 * @variation 2
                 */

                return PipelineAdmin;
            })();

            v2.GetPipelineRequest = (function() {

                /**
                 * Properties of a GetPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetPipelineRequest
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] GetPipelineRequest pipeline
                 */

                /**
                 * Constructs a new GetPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetPipelineRequest.
                 * @implements IGetPipelineRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetPipelineRequest=} [properties] Properties to set
                 */
                function GetPipelineRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetPipelineRequest pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @instance
                 */
                GetPipelineRequest.prototype.pipeline = null;

                /**
                 * Creates a new GetPipelineRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetPipelineRequest} GetPipelineRequest instance
                 */
                GetPipelineRequest.create = function create(properties) {
                    return new GetPipelineRequest(properties);
                };

                /**
                 * Encodes the specified GetPipelineRequest message. Does not implicitly {@link sajari.pipeline.v2.GetPipelineRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineRequest} message GetPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetPipelineRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetPipelineRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineRequest} message GetPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetPipelineRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetPipelineRequest} GetPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetPipelineRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetPipelineRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetPipelineRequest} GetPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetPipelineRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetPipelineRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetPipelineRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetPipelineRequest} GetPipelineRequest
                 */
                GetPipelineRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetPipelineRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetPipelineRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetPipelineRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetPipelineRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.GetPipelineRequest} message GetPipelineRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetPipelineRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this GetPipelineRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetPipelineRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetPipelineRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetPipelineRequest;
            })();

            v2.GetPipelineResponse = (function() {

                /**
                 * Properties of a GetPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetPipelineResponse
                 * @property {sajari.pipeline.v2.IPipeline|null} [pipeline] GetPipelineResponse pipeline
                 */

                /**
                 * Constructs a new GetPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetPipelineResponse.
                 * @implements IGetPipelineResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetPipelineResponse=} [properties] Properties to set
                 */
                function GetPipelineResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetPipelineResponse pipeline.
                 * @member {sajari.pipeline.v2.IPipeline|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @instance
                 */
                GetPipelineResponse.prototype.pipeline = null;

                /**
                 * Creates a new GetPipelineResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetPipelineResponse} GetPipelineResponse instance
                 */
                GetPipelineResponse.create = function create(properties) {
                    return new GetPipelineResponse(properties);
                };

                /**
                 * Encodes the specified GetPipelineResponse message. Does not implicitly {@link sajari.pipeline.v2.GetPipelineResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineResponse} message GetPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Pipeline.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetPipelineResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetPipelineResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineResponse} message GetPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetPipelineResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetPipelineResponse} GetPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetPipelineResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Pipeline.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetPipelineResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetPipelineResponse} GetPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetPipelineResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetPipelineResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Pipeline.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetPipelineResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetPipelineResponse} GetPipelineResponse
                 */
                GetPipelineResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetPipelineResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetPipelineResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetPipelineResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Pipeline.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetPipelineResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.GetPipelineResponse} message GetPipelineResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetPipelineResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Pipeline.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this GetPipelineResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetPipelineResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetPipelineResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetPipelineResponse;
            })();

            v2.SetDefaultPipelineRequest = (function() {

                /**
                 * Properties of a SetDefaultPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface ISetDefaultPipelineRequest
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] SetDefaultPipelineRequest pipeline
                 */

                /**
                 * Constructs a new SetDefaultPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a SetDefaultPipelineRequest.
                 * @implements ISetDefaultPipelineRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest=} [properties] Properties to set
                 */
                function SetDefaultPipelineRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SetDefaultPipelineRequest pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @instance
                 */
                SetDefaultPipelineRequest.prototype.pipeline = null;

                /**
                 * Creates a new SetDefaultPipelineRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineRequest} SetDefaultPipelineRequest instance
                 */
                SetDefaultPipelineRequest.create = function create(properties) {
                    return new SetDefaultPipelineRequest(properties);
                };

                /**
                 * Encodes the specified SetDefaultPipelineRequest message. Does not implicitly {@link sajari.pipeline.v2.SetDefaultPipelineRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest} message SetDefaultPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SetDefaultPipelineRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified SetDefaultPipelineRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.SetDefaultPipelineRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineRequest} message SetDefaultPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SetDefaultPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SetDefaultPipelineRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineRequest} SetDefaultPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SetDefaultPipelineRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.SetDefaultPipelineRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a SetDefaultPipelineRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineRequest} SetDefaultPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SetDefaultPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SetDefaultPipelineRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SetDefaultPipelineRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a SetDefaultPipelineRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineRequest} SetDefaultPipelineRequest
                 */
                SetDefaultPipelineRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.SetDefaultPipelineRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.SetDefaultPipelineRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.SetDefaultPipelineRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a SetDefaultPipelineRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.SetDefaultPipelineRequest} message SetDefaultPipelineRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SetDefaultPipelineRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this SetDefaultPipelineRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SetDefaultPipelineRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return SetDefaultPipelineRequest;
            })();

            v2.SetDefaultPipelineResponse = (function() {

                /**
                 * Properties of a SetDefaultPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface ISetDefaultPipelineResponse
                 */

                /**
                 * Constructs a new SetDefaultPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a SetDefaultPipelineResponse.
                 * @implements ISetDefaultPipelineResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineResponse=} [properties] Properties to set
                 */
                function SetDefaultPipelineResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new SetDefaultPipelineResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineResponse} SetDefaultPipelineResponse instance
                 */
                SetDefaultPipelineResponse.create = function create(properties) {
                    return new SetDefaultPipelineResponse(properties);
                };

                /**
                 * Encodes the specified SetDefaultPipelineResponse message. Does not implicitly {@link sajari.pipeline.v2.SetDefaultPipelineResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineResponse} message SetDefaultPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SetDefaultPipelineResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified SetDefaultPipelineResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.SetDefaultPipelineResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISetDefaultPipelineResponse} message SetDefaultPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SetDefaultPipelineResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SetDefaultPipelineResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineResponse} SetDefaultPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SetDefaultPipelineResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.SetDefaultPipelineResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a SetDefaultPipelineResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineResponse} SetDefaultPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SetDefaultPipelineResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SetDefaultPipelineResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SetDefaultPipelineResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a SetDefaultPipelineResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.SetDefaultPipelineResponse} SetDefaultPipelineResponse
                 */
                SetDefaultPipelineResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.SetDefaultPipelineResponse)
                        return object;
                    return new $root.sajari.pipeline.v2.SetDefaultPipelineResponse();
                };

                /**
                 * Creates a plain object from a SetDefaultPipelineResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.SetDefaultPipelineResponse} message SetDefaultPipelineResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SetDefaultPipelineResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this SetDefaultPipelineResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.SetDefaultPipelineResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SetDefaultPipelineResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return SetDefaultPipelineResponse;
            })();

            v2.GetDefaultPipelineRequest = (function() {

                /**
                 * Properties of a GetDefaultPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetDefaultPipelineRequest
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] GetDefaultPipelineRequest pipeline
                 */

                /**
                 * Constructs a new GetDefaultPipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetDefaultPipelineRequest.
                 * @implements IGetDefaultPipelineRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest=} [properties] Properties to set
                 */
                function GetDefaultPipelineRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetDefaultPipelineRequest pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @instance
                 */
                GetDefaultPipelineRequest.prototype.pipeline = null;

                /**
                 * Creates a new GetDefaultPipelineRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineRequest} GetDefaultPipelineRequest instance
                 */
                GetDefaultPipelineRequest.create = function create(properties) {
                    return new GetDefaultPipelineRequest(properties);
                };

                /**
                 * Encodes the specified GetDefaultPipelineRequest message. Does not implicitly {@link sajari.pipeline.v2.GetDefaultPipelineRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest} message GetDefaultPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetDefaultPipelineRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetDefaultPipelineRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetDefaultPipelineRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineRequest} message GetDefaultPipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetDefaultPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetDefaultPipelineRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineRequest} GetDefaultPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetDefaultPipelineRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetDefaultPipelineRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetDefaultPipelineRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineRequest} GetDefaultPipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetDefaultPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetDefaultPipelineRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetDefaultPipelineRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetDefaultPipelineRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineRequest} GetDefaultPipelineRequest
                 */
                GetDefaultPipelineRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetDefaultPipelineRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetDefaultPipelineRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetDefaultPipelineRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetDefaultPipelineRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.GetDefaultPipelineRequest} message GetDefaultPipelineRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetDefaultPipelineRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this GetDefaultPipelineRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetDefaultPipelineRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetDefaultPipelineRequest;
            })();

            v2.GetDefaultPipelineResponse = (function() {

                /**
                 * Properties of a GetDefaultPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetDefaultPipelineResponse
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] GetDefaultPipelineResponse pipeline
                 * @property {google.protobuf.ITimestamp|null} [createTime] GetDefaultPipelineResponse createTime
                 */

                /**
                 * Constructs a new GetDefaultPipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetDefaultPipelineResponse.
                 * @implements IGetDefaultPipelineResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineResponse=} [properties] Properties to set
                 */
                function GetDefaultPipelineResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetDefaultPipelineResponse pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @instance
                 */
                GetDefaultPipelineResponse.prototype.pipeline = null;

                /**
                 * GetDefaultPipelineResponse createTime.
                 * @member {google.protobuf.ITimestamp|null|undefined} createTime
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @instance
                 */
                GetDefaultPipelineResponse.prototype.createTime = null;

                /**
                 * Creates a new GetDefaultPipelineResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineResponse} GetDefaultPipelineResponse instance
                 */
                GetDefaultPipelineResponse.create = function create(properties) {
                    return new GetDefaultPipelineResponse(properties);
                };

                /**
                 * Encodes the specified GetDefaultPipelineResponse message. Does not implicitly {@link sajari.pipeline.v2.GetDefaultPipelineResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineResponse} message GetDefaultPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetDefaultPipelineResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetDefaultPipelineResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetDefaultPipelineResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetDefaultPipelineResponse} message GetDefaultPipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetDefaultPipelineResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetDefaultPipelineResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineResponse} GetDefaultPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetDefaultPipelineResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetDefaultPipelineResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetDefaultPipelineResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineResponse} GetDefaultPipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetDefaultPipelineResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetDefaultPipelineResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetDefaultPipelineResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.createTime != null && message.hasOwnProperty("createTime")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                        if (error)
                            return "createTime." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetDefaultPipelineResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetDefaultPipelineResponse} GetDefaultPipelineResponse
                 */
                GetDefaultPipelineResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetDefaultPipelineResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetDefaultPipelineResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetDefaultPipelineResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    if (object.createTime != null) {
                        if (typeof object.createTime !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetDefaultPipelineResponse.createTime: object expected");
                        message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetDefaultPipelineResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.GetDefaultPipelineResponse} message GetDefaultPipelineResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetDefaultPipelineResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.createTime = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                    return object;
                };

                /**
                 * Converts this GetDefaultPipelineResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetDefaultPipelineResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetDefaultPipelineResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetDefaultPipelineResponse;
            })();

            v2.ListPipelinesRequest = (function() {

                /**
                 * Properties of a ListPipelinesRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IListPipelinesRequest
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] ListPipelinesRequest pipeline
                 * @property {number|null} [pageSize] ListPipelinesRequest pageSize
                 * @property {string|null} [pageToken] ListPipelinesRequest pageToken
                 */

                /**
                 * Constructs a new ListPipelinesRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ListPipelinesRequest.
                 * @implements IListPipelinesRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IListPipelinesRequest=} [properties] Properties to set
                 */
                function ListPipelinesRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListPipelinesRequest pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @instance
                 */
                ListPipelinesRequest.prototype.pipeline = null;

                /**
                 * ListPipelinesRequest pageSize.
                 * @member {number} pageSize
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @instance
                 */
                ListPipelinesRequest.prototype.pageSize = 0;

                /**
                 * ListPipelinesRequest pageToken.
                 * @member {string} pageToken
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @instance
                 */
                ListPipelinesRequest.prototype.pageToken = "";

                /**
                 * Creates a new ListPipelinesRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ListPipelinesRequest} ListPipelinesRequest instance
                 */
                ListPipelinesRequest.create = function create(properties) {
                    return new ListPipelinesRequest(properties);
                };

                /**
                 * Encodes the specified ListPipelinesRequest message. Does not implicitly {@link sajari.pipeline.v2.ListPipelinesRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesRequest} message ListPipelinesRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListPipelinesRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListPipelinesRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ListPipelinesRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesRequest} message ListPipelinesRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListPipelinesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListPipelinesRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ListPipelinesRequest} ListPipelinesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListPipelinesRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ListPipelinesRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.pageSize = reader.int32();
                            break;
                        case 3:
                            message.pageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListPipelinesRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ListPipelinesRequest} ListPipelinesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListPipelinesRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListPipelinesRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListPipelinesRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListPipelinesRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ListPipelinesRequest} ListPipelinesRequest
                 */
                ListPipelinesRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ListPipelinesRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ListPipelinesRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.ListPipelinesRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListPipelinesRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @static
                 * @param {sajari.pipeline.v2.ListPipelinesRequest} message ListPipelinesRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListPipelinesRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.pageSize = 0;
                        object.pageToken = "";
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    return object;
                };

                /**
                 * Converts this ListPipelinesRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ListPipelinesRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListPipelinesRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ListPipelinesRequest;
            })();

            v2.ListPipelinesResponse = (function() {

                /**
                 * Properties of a ListPipelinesResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IListPipelinesResponse
                 * @property {Array.<sajari.pipeline.v2.IPipeline>|null} [pipelines] ListPipelinesResponse pipelines
                 * @property {string|null} [nextPageToken] ListPipelinesResponse nextPageToken
                 */

                /**
                 * Constructs a new ListPipelinesResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ListPipelinesResponse.
                 * @implements IListPipelinesResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IListPipelinesResponse=} [properties] Properties to set
                 */
                function ListPipelinesResponse(properties) {
                    this.pipelines = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListPipelinesResponse pipelines.
                 * @member {Array.<sajari.pipeline.v2.IPipeline>} pipelines
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @instance
                 */
                ListPipelinesResponse.prototype.pipelines = $util.emptyArray;

                /**
                 * ListPipelinesResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @instance
                 */
                ListPipelinesResponse.prototype.nextPageToken = "";

                /**
                 * Creates a new ListPipelinesResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ListPipelinesResponse} ListPipelinesResponse instance
                 */
                ListPipelinesResponse.create = function create(properties) {
                    return new ListPipelinesResponse(properties);
                };

                /**
                 * Encodes the specified ListPipelinesResponse message. Does not implicitly {@link sajari.pipeline.v2.ListPipelinesResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesResponse} message ListPipelinesResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListPipelinesResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipelines != null && message.pipelines.length)
                        for (var i = 0; i < message.pipelines.length; ++i)
                            $root.sajari.pipeline.v2.Pipeline.encode(message.pipelines[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListPipelinesResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ListPipelinesResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListPipelinesResponse} message ListPipelinesResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListPipelinesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListPipelinesResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ListPipelinesResponse} ListPipelinesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListPipelinesResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ListPipelinesResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.pipelines && message.pipelines.length))
                                message.pipelines = [];
                            message.pipelines.push($root.sajari.pipeline.v2.Pipeline.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.nextPageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListPipelinesResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ListPipelinesResponse} ListPipelinesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListPipelinesResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListPipelinesResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListPipelinesResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipelines != null && message.hasOwnProperty("pipelines")) {
                        if (!Array.isArray(message.pipelines))
                            return "pipelines: array expected";
                        for (var i = 0; i < message.pipelines.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Pipeline.verify(message.pipelines[i]);
                            if (error)
                                return "pipelines." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListPipelinesResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ListPipelinesResponse} ListPipelinesResponse
                 */
                ListPipelinesResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ListPipelinesResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ListPipelinesResponse();
                    if (object.pipelines) {
                        if (!Array.isArray(object.pipelines))
                            throw TypeError(".sajari.pipeline.v2.ListPipelinesResponse.pipelines: array expected");
                        message.pipelines = [];
                        for (var i = 0; i < object.pipelines.length; ++i) {
                            if (typeof object.pipelines[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.ListPipelinesResponse.pipelines: object expected");
                            message.pipelines[i] = $root.sajari.pipeline.v2.Pipeline.fromObject(object.pipelines[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListPipelinesResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @static
                 * @param {sajari.pipeline.v2.ListPipelinesResponse} message ListPipelinesResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListPipelinesResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.pipelines = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.pipelines && message.pipelines.length) {
                        object.pipelines = [];
                        for (var j = 0; j < message.pipelines.length; ++j)
                            object.pipelines[j] = $root.sajari.pipeline.v2.Pipeline.toObject(message.pipelines[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };

                /**
                 * Converts this ListPipelinesResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ListPipelinesResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListPipelinesResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ListPipelinesResponse;
            })();

            v2.CreatePipelineRequest = (function() {

                /**
                 * Properties of a CreatePipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface ICreatePipelineRequest
                 * @property {sajari.pipeline.v2.IPipeline|null} [pipeline] CreatePipelineRequest pipeline
                 */

                /**
                 * Constructs a new CreatePipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a CreatePipelineRequest.
                 * @implements ICreatePipelineRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest=} [properties] Properties to set
                 */
                function CreatePipelineRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CreatePipelineRequest pipeline.
                 * @member {sajari.pipeline.v2.IPipeline|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @instance
                 */
                CreatePipelineRequest.prototype.pipeline = null;

                /**
                 * Creates a new CreatePipelineRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.CreatePipelineRequest} CreatePipelineRequest instance
                 */
                CreatePipelineRequest.create = function create(properties) {
                    return new CreatePipelineRequest(properties);
                };

                /**
                 * Encodes the specified CreatePipelineRequest message. Does not implicitly {@link sajari.pipeline.v2.CreatePipelineRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest} message CreatePipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatePipelineRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Pipeline.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CreatePipelineRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.CreatePipelineRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineRequest} message CreatePipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatePipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreatePipelineRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.CreatePipelineRequest} CreatePipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatePipelineRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.CreatePipelineRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Pipeline.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreatePipelineRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.CreatePipelineRequest} CreatePipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatePipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreatePipelineRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreatePipelineRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Pipeline.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a CreatePipelineRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.CreatePipelineRequest} CreatePipelineRequest
                 */
                CreatePipelineRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.CreatePipelineRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.CreatePipelineRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreatePipelineRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Pipeline.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CreatePipelineRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.CreatePipelineRequest} message CreatePipelineRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreatePipelineRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Pipeline.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this CreatePipelineRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.CreatePipelineRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreatePipelineRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreatePipelineRequest;
            })();

            v2.Pipeline = (function() {

                /**
                 * Properties of a Pipeline.
                 * @memberof sajari.pipeline.v2
                 * @interface IPipeline
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] Pipeline pipeline
                 * @property {string|null} [Title] Pipeline Title
                 * @property {string|null} [Description] Pipeline Description
                 * @property {Array.<sajari.pipeline.v2.IStepConfigs>|null} [steps] Pipeline steps
                 * @property {google.protobuf.ITimestamp|null} [createTime] Pipeline createTime
                 */

                /**
                 * Constructs a new Pipeline.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Pipeline.
                 * @implements IPipeline
                 * @constructor
                 * @param {sajari.pipeline.v2.IPipeline=} [properties] Properties to set
                 */
                function Pipeline(properties) {
                    this.steps = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Pipeline pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 */
                Pipeline.prototype.pipeline = null;

                /**
                 * Pipeline Title.
                 * @member {string} Title
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 */
                Pipeline.prototype.Title = "";

                /**
                 * Pipeline Description.
                 * @member {string} Description
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 */
                Pipeline.prototype.Description = "";

                /**
                 * Pipeline steps.
                 * @member {Array.<sajari.pipeline.v2.IStepConfigs>} steps
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 */
                Pipeline.prototype.steps = $util.emptyArray;

                /**
                 * Pipeline createTime.
                 * @member {google.protobuf.ITimestamp|null|undefined} createTime
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 */
                Pipeline.prototype.createTime = null;

                /**
                 * Creates a new Pipeline instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {sajari.pipeline.v2.IPipeline=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Pipeline} Pipeline instance
                 */
                Pipeline.create = function create(properties) {
                    return new Pipeline(properties);
                };

                /**
                 * Encodes the specified Pipeline message. Does not implicitly {@link sajari.pipeline.v2.Pipeline.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {sajari.pipeline.v2.IPipeline} message Pipeline message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Pipeline.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.Title != null && message.hasOwnProperty("Title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.Title);
                    if (message.Description != null && message.hasOwnProperty("Description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.Description);
                    if (message.steps != null && message.steps.length)
                        for (var i = 0; i < message.steps.length; ++i)
                            $root.sajari.pipeline.v2.StepConfigs.encode(message.steps[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Pipeline message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Pipeline.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {sajari.pipeline.v2.IPipeline} message Pipeline message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Pipeline.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Pipeline message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Pipeline} Pipeline
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Pipeline.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Pipeline();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.Title = reader.string();
                            break;
                        case 3:
                            message.Description = reader.string();
                            break;
                        case 4:
                            if (!(message.steps && message.steps.length))
                                message.steps = [];
                            message.steps.push($root.sajari.pipeline.v2.StepConfigs.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Pipeline message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Pipeline} Pipeline
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Pipeline.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Pipeline message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Pipeline.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.Title != null && message.hasOwnProperty("Title"))
                        if (!$util.isString(message.Title))
                            return "Title: string expected";
                    if (message.Description != null && message.hasOwnProperty("Description"))
                        if (!$util.isString(message.Description))
                            return "Description: string expected";
                    if (message.steps != null && message.hasOwnProperty("steps")) {
                        if (!Array.isArray(message.steps))
                            return "steps: array expected";
                        for (var i = 0; i < message.steps.length; ++i) {
                            var error = $root.sajari.pipeline.v2.StepConfigs.verify(message.steps[i]);
                            if (error)
                                return "steps." + error;
                        }
                    }
                    if (message.createTime != null && message.hasOwnProperty("createTime")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                        if (error)
                            return "createTime." + error;
                    }
                    return null;
                };

                /**
                 * Creates a Pipeline message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Pipeline} Pipeline
                 */
                Pipeline.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Pipeline)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Pipeline();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.Pipeline.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    if (object.Title != null)
                        message.Title = String(object.Title);
                    if (object.Description != null)
                        message.Description = String(object.Description);
                    if (object.steps) {
                        if (!Array.isArray(object.steps))
                            throw TypeError(".sajari.pipeline.v2.Pipeline.steps: array expected");
                        message.steps = [];
                        for (var i = 0; i < object.steps.length; ++i) {
                            if (typeof object.steps[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.Pipeline.steps: object expected");
                            message.steps[i] = $root.sajari.pipeline.v2.StepConfigs.fromObject(object.steps[i]);
                        }
                    }
                    if (object.createTime != null) {
                        if (typeof object.createTime !== "object")
                            throw TypeError(".sajari.pipeline.v2.Pipeline.createTime: object expected");
                        message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Pipeline message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @static
                 * @param {sajari.pipeline.v2.Pipeline} message Pipeline
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Pipeline.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.steps = [];
                    if (options.defaults) {
                        object.pipeline = null;
                        object.Title = "";
                        object.Description = "";
                        object.createTime = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    if (message.Title != null && message.hasOwnProperty("Title"))
                        object.Title = message.Title;
                    if (message.Description != null && message.hasOwnProperty("Description"))
                        object.Description = message.Description;
                    if (message.steps && message.steps.length) {
                        object.steps = [];
                        for (var j = 0; j < message.steps.length; ++j)
                            object.steps[j] = $root.sajari.pipeline.v2.StepConfigs.toObject(message.steps[j], options);
                    }
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                    return object;
                };

                /**
                 * Converts this Pipeline to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Pipeline
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Pipeline.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Pipeline;
            })();

            v2.StepConfigs = (function() {

                /**
                 * Properties of a StepConfigs.
                 * @memberof sajari.pipeline.v2
                 * @interface IStepConfigs
                 * @property {sajari.pipeline.v2.StepType|null} [stepType] StepConfigs stepType
                 * @property {Array.<sajari.pipeline.v2.IStepConfig>|null} [steps] StepConfigs steps
                 */

                /**
                 * Constructs a new StepConfigs.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a StepConfigs.
                 * @implements IStepConfigs
                 * @constructor
                 * @param {sajari.pipeline.v2.IStepConfigs=} [properties] Properties to set
                 */
                function StepConfigs(properties) {
                    this.steps = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * StepConfigs stepType.
                 * @member {sajari.pipeline.v2.StepType} stepType
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @instance
                 */
                StepConfigs.prototype.stepType = 0;

                /**
                 * StepConfigs steps.
                 * @member {Array.<sajari.pipeline.v2.IStepConfig>} steps
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @instance
                 */
                StepConfigs.prototype.steps = $util.emptyArray;

                /**
                 * Creates a new StepConfigs instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfigs=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.StepConfigs} StepConfigs instance
                 */
                StepConfigs.create = function create(properties) {
                    return new StepConfigs(properties);
                };

                /**
                 * Encodes the specified StepConfigs message. Does not implicitly {@link sajari.pipeline.v2.StepConfigs.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfigs} message StepConfigs message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StepConfigs.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.stepType);
                    if (message.steps != null && message.steps.length)
                        for (var i = 0; i < message.steps.length; ++i)
                            $root.sajari.pipeline.v2.StepConfig.encode(message.steps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified StepConfigs message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfigs.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfigs} message StepConfigs message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StepConfigs.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a StepConfigs message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.StepConfigs} StepConfigs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StepConfigs.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfigs();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.stepType = reader.int32();
                            break;
                        case 2:
                            if (!(message.steps && message.steps.length))
                                message.steps = [];
                            message.steps.push($root.sajari.pipeline.v2.StepConfig.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a StepConfigs message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.StepConfigs} StepConfigs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StepConfigs.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a StepConfigs message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StepConfigs.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        switch (message.stepType) {
                        default:
                            return "stepType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.steps != null && message.hasOwnProperty("steps")) {
                        if (!Array.isArray(message.steps))
                            return "steps: array expected";
                        for (var i = 0; i < message.steps.length; ++i) {
                            var error = $root.sajari.pipeline.v2.StepConfig.verify(message.steps[i]);
                            if (error)
                                return "steps." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a StepConfigs message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.StepConfigs} StepConfigs
                 */
                StepConfigs.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.StepConfigs)
                        return object;
                    var message = new $root.sajari.pipeline.v2.StepConfigs();
                    switch (object.stepType) {
                    case "STEP_TYPE_UNSPECIFIED":
                    case 0:
                        message.stepType = 0;
                        break;
                    case "PRE_STEP":
                    case 1:
                        message.stepType = 1;
                        break;
                    case "POST_STEP":
                    case 2:
                        message.stepType = 2;
                        break;
                    }
                    if (object.steps) {
                        if (!Array.isArray(object.steps))
                            throw TypeError(".sajari.pipeline.v2.StepConfigs.steps: array expected");
                        message.steps = [];
                        for (var i = 0; i < object.steps.length; ++i) {
                            if (typeof object.steps[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.StepConfigs.steps: object expected");
                            message.steps[i] = $root.sajari.pipeline.v2.StepConfig.fromObject(object.steps[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a StepConfigs message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @static
                 * @param {sajari.pipeline.v2.StepConfigs} message StepConfigs
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StepConfigs.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.steps = [];
                    if (options.defaults)
                        object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                    if (message.steps && message.steps.length) {
                        object.steps = [];
                        for (var j = 0; j < message.steps.length; ++j)
                            object.steps[j] = $root.sajari.pipeline.v2.StepConfig.toObject(message.steps[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this StepConfigs to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.StepConfigs
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StepConfigs.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return StepConfigs;
            })();

            v2.StepConfig = (function() {

                /**
                 * Properties of a StepConfig.
                 * @memberof sajari.pipeline.v2
                 * @interface IStepConfig
                 * @property {string|null} [identifier] StepConfig identifier
                 * @property {string|null} [title] StepConfig title
                 * @property {string|null} [description] StepConfig description
                 * @property {Object.<string,sajari.pipeline.v2.StepConfig.IParameterConfigs>|null} [parameterConfigs] StepConfig parameterConfigs
                 * @property {Object.<string,sajari.pipeline.v2.StepConfig.IConstantConfigs>|null} [constantConfigs] StepConfig constantConfigs
                 */

                /**
                 * Constructs a new StepConfig.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a StepConfig.
                 * @implements IStepConfig
                 * @constructor
                 * @param {sajari.pipeline.v2.IStepConfig=} [properties] Properties to set
                 */
                function StepConfig(properties) {
                    this.parameterConfigs = {};
                    this.constantConfigs = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * StepConfig identifier.
                 * @member {string} identifier
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 */
                StepConfig.prototype.identifier = "";

                /**
                 * StepConfig title.
                 * @member {string} title
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 */
                StepConfig.prototype.title = "";

                /**
                 * StepConfig description.
                 * @member {string} description
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 */
                StepConfig.prototype.description = "";

                /**
                 * StepConfig parameterConfigs.
                 * @member {Object.<string,sajari.pipeline.v2.StepConfig.IParameterConfigs>} parameterConfigs
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 */
                StepConfig.prototype.parameterConfigs = $util.emptyObject;

                /**
                 * StepConfig constantConfigs.
                 * @member {Object.<string,sajari.pipeline.v2.StepConfig.IConstantConfigs>} constantConfigs
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 */
                StepConfig.prototype.constantConfigs = $util.emptyObject;

                /**
                 * Creates a new StepConfig instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfig=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.StepConfig} StepConfig instance
                 */
                StepConfig.create = function create(properties) {
                    return new StepConfig(properties);
                };

                /**
                 * Encodes the specified StepConfig message. Does not implicitly {@link sajari.pipeline.v2.StepConfig.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfig} message StepConfig message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StepConfig.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.identifier);
                    if (message.title != null && message.hasOwnProperty("title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.parameterConfigs != null && message.hasOwnProperty("parameterConfigs"))
                        for (var keys = Object.keys(message.parameterConfigs), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.encode(message.parameterConfigs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    if (message.constantConfigs != null && message.hasOwnProperty("constantConfigs"))
                        for (var keys = Object.keys(message.constantConfigs), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.encode(message.constantConfigs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };

                /**
                 * Encodes the specified StepConfig message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfig.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {sajari.pipeline.v2.IStepConfig} message StepConfig message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StepConfig.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a StepConfig message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.StepConfig} StepConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StepConfig.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfig(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.identifier = reader.string();
                            break;
                        case 2:
                            message.title = reader.string();
                            break;
                        case 3:
                            message.description = reader.string();
                            break;
                        case 4:
                            reader.skip().pos++;
                            if (message.parameterConfigs === $util.emptyObject)
                                message.parameterConfigs = {};
                            key = reader.string();
                            reader.pos++;
                            message.parameterConfigs[key] = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.decode(reader, reader.uint32());
                            break;
                        case 5:
                            reader.skip().pos++;
                            if (message.constantConfigs === $util.emptyObject)
                                message.constantConfigs = {};
                            key = reader.string();
                            reader.pos++;
                            message.constantConfigs[key] = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a StepConfig message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.StepConfig} StepConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StepConfig.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a StepConfig message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StepConfig.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        if (!$util.isString(message.identifier))
                            return "identifier: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.parameterConfigs != null && message.hasOwnProperty("parameterConfigs")) {
                        if (!$util.isObject(message.parameterConfigs))
                            return "parameterConfigs: object expected";
                        var key = Object.keys(message.parameterConfigs);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.verify(message.parameterConfigs[key[i]]);
                            if (error)
                                return "parameterConfigs." + error;
                        }
                    }
                    if (message.constantConfigs != null && message.hasOwnProperty("constantConfigs")) {
                        if (!$util.isObject(message.constantConfigs))
                            return "constantConfigs: object expected";
                        var key = Object.keys(message.constantConfigs);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.verify(message.constantConfigs[key[i]]);
                            if (error)
                                return "constantConfigs." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a StepConfig message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.StepConfig} StepConfig
                 */
                StepConfig.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.StepConfig)
                        return object;
                    var message = new $root.sajari.pipeline.v2.StepConfig();
                    if (object.identifier != null)
                        message.identifier = String(object.identifier);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.parameterConfigs) {
                        if (typeof object.parameterConfigs !== "object")
                            throw TypeError(".sajari.pipeline.v2.StepConfig.parameterConfigs: object expected");
                        message.parameterConfigs = {};
                        for (var keys = Object.keys(object.parameterConfigs), i = 0; i < keys.length; ++i) {
                            if (typeof object.parameterConfigs[keys[i]] !== "object")
                                throw TypeError(".sajari.pipeline.v2.StepConfig.parameterConfigs: object expected");
                            message.parameterConfigs[keys[i]] = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.fromObject(object.parameterConfigs[keys[i]]);
                        }
                    }
                    if (object.constantConfigs) {
                        if (typeof object.constantConfigs !== "object")
                            throw TypeError(".sajari.pipeline.v2.StepConfig.constantConfigs: object expected");
                        message.constantConfigs = {};
                        for (var keys = Object.keys(object.constantConfigs), i = 0; i < keys.length; ++i) {
                            if (typeof object.constantConfigs[keys[i]] !== "object")
                                throw TypeError(".sajari.pipeline.v2.StepConfig.constantConfigs: object expected");
                            message.constantConfigs[keys[i]] = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.fromObject(object.constantConfigs[keys[i]]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a StepConfig message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @static
                 * @param {sajari.pipeline.v2.StepConfig} message StepConfig
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StepConfig.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults) {
                        object.parameterConfigs = {};
                        object.constantConfigs = {};
                    }
                    if (options.defaults) {
                        object.identifier = "";
                        object.title = "";
                        object.description = "";
                    }
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = message.identifier;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    var keys2;
                    if (message.parameterConfigs && (keys2 = Object.keys(message.parameterConfigs)).length) {
                        object.parameterConfigs = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.parameterConfigs[keys2[j]] = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.toObject(message.parameterConfigs[keys2[j]], options);
                    }
                    if (message.constantConfigs && (keys2 = Object.keys(message.constantConfigs)).length) {
                        object.constantConfigs = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.constantConfigs[keys2[j]] = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.toObject(message.constantConfigs[keys2[j]], options);
                    }
                    return object;
                };

                /**
                 * Converts this StepConfig to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.StepConfig
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StepConfig.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                StepConfig.ParameterConfigs = (function() {

                    /**
                     * Properties of a ParameterConfigs.
                     * @memberof sajari.pipeline.v2.StepConfig
                     * @interface IParameterConfigs
                     * @property {Array.<sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig>|null} [configs] ParameterConfigs configs
                     */

                    /**
                     * Constructs a new ParameterConfigs.
                     * @memberof sajari.pipeline.v2.StepConfig
                     * @classdesc Represents a ParameterConfigs.
                     * @implements IParameterConfigs
                     * @constructor
                     * @param {sajari.pipeline.v2.StepConfig.IParameterConfigs=} [properties] Properties to set
                     */
                    function ParameterConfigs(properties) {
                        this.configs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * ParameterConfigs configs.
                     * @member {Array.<sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig>} configs
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @instance
                     */
                    ParameterConfigs.prototype.configs = $util.emptyArray;

                    /**
                     * Creates a new ParameterConfigs instance using the specified properties.
                     * @function create
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IParameterConfigs=} [properties] Properties to set
                     * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs} ParameterConfigs instance
                     */
                    ParameterConfigs.create = function create(properties) {
                        return new ParameterConfigs(properties);
                    };

                    /**
                     * Encodes the specified ParameterConfigs message. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ParameterConfigs.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IParameterConfigs} message ParameterConfigs message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ParameterConfigs.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.configs != null && message.configs.length)
                            for (var i = 0; i < message.configs.length; ++i)
                                $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.encode(message.configs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified ParameterConfigs message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ParameterConfigs.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IParameterConfigs} message ParameterConfigs message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ParameterConfigs.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a ParameterConfigs message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs} ParameterConfigs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ParameterConfigs.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfig.ParameterConfigs();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.configs && message.configs.length))
                                    message.configs = [];
                                message.configs.push($root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a ParameterConfigs message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs} ParameterConfigs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ParameterConfigs.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a ParameterConfigs message.
                     * @function verify
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ParameterConfigs.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.configs != null && message.hasOwnProperty("configs")) {
                            if (!Array.isArray(message.configs))
                                return "configs: array expected";
                            for (var i = 0; i < message.configs.length; ++i) {
                                var error = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.verify(message.configs[i]);
                                if (error)
                                    return "configs." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a ParameterConfigs message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs} ParameterConfigs
                     */
                    ParameterConfigs.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.pipeline.v2.StepConfig.ParameterConfigs)
                            return object;
                        var message = new $root.sajari.pipeline.v2.StepConfig.ParameterConfigs();
                        if (object.configs) {
                            if (!Array.isArray(object.configs))
                                throw TypeError(".sajari.pipeline.v2.StepConfig.ParameterConfigs.configs: array expected");
                            message.configs = [];
                            for (var i = 0; i < object.configs.length; ++i) {
                                if (typeof object.configs[i] !== "object")
                                    throw TypeError(".sajari.pipeline.v2.StepConfig.ParameterConfigs.configs: object expected");
                                message.configs[i] = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.fromObject(object.configs[i]);
                            }
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a ParameterConfigs message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs} message ParameterConfigs
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ParameterConfigs.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.configs = [];
                        if (message.configs && message.configs.length) {
                            object.configs = [];
                            for (var j = 0; j < message.configs.length; ++j)
                                object.configs[j] = $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.toObject(message.configs[j], options);
                        }
                        return object;
                    };

                    /**
                     * Converts this ParameterConfigs to JSON.
                     * @function toJSON
                     * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ParameterConfigs.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    ParameterConfigs.ParameterConfig = (function() {

                        /**
                         * Properties of a ParameterConfig.
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                         * @interface IParameterConfig
                         * @property {string|null} [setName] ParameterConfig setName
                         * @property {string|null} [setDescription] ParameterConfig setDescription
                         * @property {string|null} [setDefaultValue] ParameterConfig setDefaultValue
                         */

                        /**
                         * Constructs a new ParameterConfig.
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs
                         * @classdesc Represents a ParameterConfig.
                         * @implements IParameterConfig
                         * @constructor
                         * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig=} [properties] Properties to set
                         */
                        function ParameterConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * ParameterConfig setName.
                         * @member {string} setName
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @instance
                         */
                        ParameterConfig.prototype.setName = "";

                        /**
                         * ParameterConfig setDescription.
                         * @member {string} setDescription
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @instance
                         */
                        ParameterConfig.prototype.setDescription = "";

                        /**
                         * ParameterConfig setDefaultValue.
                         * @member {string} setDefaultValue
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @instance
                         */
                        ParameterConfig.prototype.setDefaultValue = "";

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * ParameterConfig config.
                         * @member {"setName"|"setDescription"|"setDefaultValue"|undefined} config
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @instance
                         */
                        Object.defineProperty(ParameterConfig.prototype, "config", {
                            get: $util.oneOfGetter($oneOfFields = ["setName", "setDescription", "setDefaultValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new ParameterConfig instance using the specified properties.
                         * @function create
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig=} [properties] Properties to set
                         * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig} ParameterConfig instance
                         */
                        ParameterConfig.create = function create(properties) {
                            return new ParameterConfig(properties);
                        };

                        /**
                         * Encodes the specified ParameterConfig message. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig} message ParameterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.setName != null && message.hasOwnProperty("setName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.setName);
                            if (message.setDescription != null && message.hasOwnProperty("setDescription"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.setDescription);
                            if (message.setDefaultValue != null && message.hasOwnProperty("setDefaultValue"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.setDefaultValue);
                            return writer;
                        };

                        /**
                         * Encodes the specified ParameterConfig message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs.IParameterConfig} message ParameterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a ParameterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig} ParameterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.setName = reader.string();
                                    break;
                                case 2:
                                    message.setDescription = reader.string();
                                    break;
                                case 3:
                                    message.setDefaultValue = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a ParameterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig} ParameterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a ParameterConfig message.
                         * @function verify
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ParameterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.setName != null && message.hasOwnProperty("setName")) {
                                properties.config = 1;
                                if (!$util.isString(message.setName))
                                    return "setName: string expected";
                            }
                            if (message.setDescription != null && message.hasOwnProperty("setDescription")) {
                                if (properties.config === 1)
                                    return "config: multiple values";
                                properties.config = 1;
                                if (!$util.isString(message.setDescription))
                                    return "setDescription: string expected";
                            }
                            if (message.setDefaultValue != null && message.hasOwnProperty("setDefaultValue")) {
                                if (properties.config === 1)
                                    return "config: multiple values";
                                properties.config = 1;
                                if (!$util.isString(message.setDefaultValue))
                                    return "setDefaultValue: string expected";
                            }
                            return null;
                        };

                        /**
                         * Creates a ParameterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig} ParameterConfig
                         */
                        ParameterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig)
                                return object;
                            var message = new $root.sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig();
                            if (object.setName != null)
                                message.setName = String(object.setName);
                            if (object.setDescription != null)
                                message.setDescription = String(object.setDescription);
                            if (object.setDefaultValue != null)
                                message.setDefaultValue = String(object.setDefaultValue);
                            return message;
                        };

                        /**
                         * Creates a plain object from a ParameterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig} message ParameterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ParameterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.setName != null && message.hasOwnProperty("setName")) {
                                object.setName = message.setName;
                                if (options.oneofs)
                                    object.config = "setName";
                            }
                            if (message.setDescription != null && message.hasOwnProperty("setDescription")) {
                                object.setDescription = message.setDescription;
                                if (options.oneofs)
                                    object.config = "setDescription";
                            }
                            if (message.setDefaultValue != null && message.hasOwnProperty("setDefaultValue")) {
                                object.setDefaultValue = message.setDefaultValue;
                                if (options.oneofs)
                                    object.config = "setDefaultValue";
                            }
                            return object;
                        };

                        /**
                         * Converts this ParameterConfig to JSON.
                         * @function toJSON
                         * @memberof sajari.pipeline.v2.StepConfig.ParameterConfigs.ParameterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ParameterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        return ParameterConfig;
                    })();

                    return ParameterConfigs;
                })();

                StepConfig.ConstantConfigs = (function() {

                    /**
                     * Properties of a ConstantConfigs.
                     * @memberof sajari.pipeline.v2.StepConfig
                     * @interface IConstantConfigs
                     * @property {Array.<sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig>|null} [configs] ConstantConfigs configs
                     */

                    /**
                     * Constructs a new ConstantConfigs.
                     * @memberof sajari.pipeline.v2.StepConfig
                     * @classdesc Represents a ConstantConfigs.
                     * @implements IConstantConfigs
                     * @constructor
                     * @param {sajari.pipeline.v2.StepConfig.IConstantConfigs=} [properties] Properties to set
                     */
                    function ConstantConfigs(properties) {
                        this.configs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * ConstantConfigs configs.
                     * @member {Array.<sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig>} configs
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @instance
                     */
                    ConstantConfigs.prototype.configs = $util.emptyArray;

                    /**
                     * Creates a new ConstantConfigs instance using the specified properties.
                     * @function create
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IConstantConfigs=} [properties] Properties to set
                     * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs} ConstantConfigs instance
                     */
                    ConstantConfigs.create = function create(properties) {
                        return new ConstantConfigs(properties);
                    };

                    /**
                     * Encodes the specified ConstantConfigs message. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ConstantConfigs.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IConstantConfigs} message ConstantConfigs message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConstantConfigs.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.configs != null && message.configs.length)
                            for (var i = 0; i < message.configs.length; ++i)
                                $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.encode(message.configs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified ConstantConfigs message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ConstantConfigs.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.IConstantConfigs} message ConstantConfigs message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ConstantConfigs.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a ConstantConfigs message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs} ConstantConfigs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConstantConfigs.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfig.ConstantConfigs();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.configs && message.configs.length))
                                    message.configs = [];
                                message.configs.push($root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a ConstantConfigs message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs} ConstantConfigs
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ConstantConfigs.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a ConstantConfigs message.
                     * @function verify
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ConstantConfigs.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.configs != null && message.hasOwnProperty("configs")) {
                            if (!Array.isArray(message.configs))
                                return "configs: array expected";
                            for (var i = 0; i < message.configs.length; ++i) {
                                var error = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.verify(message.configs[i]);
                                if (error)
                                    return "configs." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a ConstantConfigs message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs} ConstantConfigs
                     */
                    ConstantConfigs.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.pipeline.v2.StepConfig.ConstantConfigs)
                            return object;
                        var message = new $root.sajari.pipeline.v2.StepConfig.ConstantConfigs();
                        if (object.configs) {
                            if (!Array.isArray(object.configs))
                                throw TypeError(".sajari.pipeline.v2.StepConfig.ConstantConfigs.configs: array expected");
                            message.configs = [];
                            for (var i = 0; i < object.configs.length; ++i) {
                                if (typeof object.configs[i] !== "object")
                                    throw TypeError(".sajari.pipeline.v2.StepConfig.ConstantConfigs.configs: object expected");
                                message.configs[i] = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.fromObject(object.configs[i]);
                            }
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a ConstantConfigs message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @static
                     * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs} message ConstantConfigs
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ConstantConfigs.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.configs = [];
                        if (message.configs && message.configs.length) {
                            object.configs = [];
                            for (var j = 0; j < message.configs.length; ++j)
                                object.configs[j] = $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.toObject(message.configs[j], options);
                        }
                        return object;
                    };

                    /**
                     * Converts this ConstantConfigs to JSON.
                     * @function toJSON
                     * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ConstantConfigs.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    ConstantConfigs.ConstantConfig = (function() {

                        /**
                         * Properties of a ConstantConfig.
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                         * @interface IConstantConfig
                         * @property {string|null} [setValue] ConstantConfig setValue
                         */

                        /**
                         * Constructs a new ConstantConfig.
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs
                         * @classdesc Represents a ConstantConfig.
                         * @implements IConstantConfig
                         * @constructor
                         * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig=} [properties] Properties to set
                         */
                        function ConstantConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * ConstantConfig setValue.
                         * @member {string} setValue
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @instance
                         */
                        ConstantConfig.prototype.setValue = "";

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * ConstantConfig config.
                         * @member {"setValue"|undefined} config
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @instance
                         */
                        Object.defineProperty(ConstantConfig.prototype, "config", {
                            get: $util.oneOfGetter($oneOfFields = ["setValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new ConstantConfig instance using the specified properties.
                         * @function create
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig=} [properties] Properties to set
                         * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig} ConstantConfig instance
                         */
                        ConstantConfig.create = function create(properties) {
                            return new ConstantConfig(properties);
                        };

                        /**
                         * Encodes the specified ConstantConfig message. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.verify|verify} messages.
                         * @function encode
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig} message ConstantConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConstantConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.setValue != null && message.hasOwnProperty("setValue"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.setValue);
                            return writer;
                        };

                        /**
                         * Encodes the specified ConstantConfig message, length delimited. Does not implicitly {@link sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs.IConstantConfig} message ConstantConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConstantConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a ConstantConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig} ConstantConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConstantConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.setValue = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a ConstantConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig} ConstantConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConstantConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a ConstantConfig message.
                         * @function verify
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConstantConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.setValue != null && message.hasOwnProperty("setValue")) {
                                properties.config = 1;
                                if (!$util.isString(message.setValue))
                                    return "setValue: string expected";
                            }
                            return null;
                        };

                        /**
                         * Creates a ConstantConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig} ConstantConfig
                         */
                        ConstantConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig)
                                return object;
                            var message = new $root.sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig();
                            if (object.setValue != null)
                                message.setValue = String(object.setValue);
                            return message;
                        };

                        /**
                         * Creates a plain object from a ConstantConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @static
                         * @param {sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig} message ConstantConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConstantConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.setValue != null && message.hasOwnProperty("setValue")) {
                                object.setValue = message.setValue;
                                if (options.oneofs)
                                    object.config = "setValue";
                            }
                            return object;
                        };

                        /**
                         * Converts this ConstantConfig to JSON.
                         * @function toJSON
                         * @memberof sajari.pipeline.v2.StepConfig.ConstantConfigs.ConstantConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConstantConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        return ConstantConfig;
                    })();

                    return ConstantConfigs;
                })();

                return StepConfig;
            })();

            v2.CreatePipelineResponse = (function() {

                /**
                 * Properties of a CreatePipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface ICreatePipelineResponse
                 */

                /**
                 * Constructs a new CreatePipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a CreatePipelineResponse.
                 * @implements ICreatePipelineResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.ICreatePipelineResponse=} [properties] Properties to set
                 */
                function CreatePipelineResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new CreatePipelineResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.CreatePipelineResponse} CreatePipelineResponse instance
                 */
                CreatePipelineResponse.create = function create(properties) {
                    return new CreatePipelineResponse(properties);
                };

                /**
                 * Encodes the specified CreatePipelineResponse message. Does not implicitly {@link sajari.pipeline.v2.CreatePipelineResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineResponse} message CreatePipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatePipelineResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified CreatePipelineResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.CreatePipelineResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreatePipelineResponse} message CreatePipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatePipelineResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreatePipelineResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.CreatePipelineResponse} CreatePipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatePipelineResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.CreatePipelineResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreatePipelineResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.CreatePipelineResponse} CreatePipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatePipelineResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreatePipelineResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreatePipelineResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a CreatePipelineResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.CreatePipelineResponse} CreatePipelineResponse
                 */
                CreatePipelineResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.CreatePipelineResponse)
                        return object;
                    return new $root.sajari.pipeline.v2.CreatePipelineResponse();
                };

                /**
                 * Creates a plain object from a CreatePipelineResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.CreatePipelineResponse} message CreatePipelineResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreatePipelineResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this CreatePipelineResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.CreatePipelineResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreatePipelineResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreatePipelineResponse;
            })();

            v2.DeletePipelineRequest = (function() {

                /**
                 * Properties of a DeletePipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IDeletePipelineRequest
                 * @property {sajari.pipeline.v2.Type|null} [type] DeletePipelineRequest type
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] DeletePipelineRequest pipeline
                 */

                /**
                 * Constructs a new DeletePipelineRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a DeletePipelineRequest.
                 * @implements IDeletePipelineRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest=} [properties] Properties to set
                 */
                function DeletePipelineRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * DeletePipelineRequest type.
                 * @member {sajari.pipeline.v2.Type} type
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @instance
                 */
                DeletePipelineRequest.prototype.type = 0;

                /**
                 * DeletePipelineRequest pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @instance
                 */
                DeletePipelineRequest.prototype.pipeline = null;

                /**
                 * Creates a new DeletePipelineRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.DeletePipelineRequest} DeletePipelineRequest instance
                 */
                DeletePipelineRequest.create = function create(properties) {
                    return new DeletePipelineRequest(properties);
                };

                /**
                 * Encodes the specified DeletePipelineRequest message. Does not implicitly {@link sajari.pipeline.v2.DeletePipelineRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest} message DeletePipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeletePipelineRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified DeletePipelineRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.DeletePipelineRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineRequest} message DeletePipelineRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeletePipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DeletePipelineRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.DeletePipelineRequest} DeletePipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeletePipelineRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.DeletePipelineRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DeletePipelineRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.DeletePipelineRequest} DeletePipelineRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeletePipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DeletePipelineRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeletePipelineRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a DeletePipelineRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.DeletePipelineRequest} DeletePipelineRequest
                 */
                DeletePipelineRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.DeletePipelineRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.DeletePipelineRequest();
                    switch (object.type) {
                    case "TYPE_UNSPECIFIED":
                    case 0:
                        message.type = 0;
                        break;
                    case "QUERY_PIPELINE":
                    case 1:
                        message.type = 1;
                        break;
                    case "RECORD_PIPELINE":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.DeletePipelineRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a DeletePipelineRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @static
                 * @param {sajari.pipeline.v2.DeletePipelineRequest} message DeletePipelineRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeletePipelineRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                        object.pipeline = null;
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this DeletePipelineRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.DeletePipelineRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeletePipelineRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DeletePipelineRequest;
            })();

            v2.DeletePipelineResponse = (function() {

                /**
                 * Properties of a DeletePipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IDeletePipelineResponse
                 */

                /**
                 * Constructs a new DeletePipelineResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a DeletePipelineResponse.
                 * @implements IDeletePipelineResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IDeletePipelineResponse=} [properties] Properties to set
                 */
                function DeletePipelineResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new DeletePipelineResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.DeletePipelineResponse} DeletePipelineResponse instance
                 */
                DeletePipelineResponse.create = function create(properties) {
                    return new DeletePipelineResponse(properties);
                };

                /**
                 * Encodes the specified DeletePipelineResponse message. Does not implicitly {@link sajari.pipeline.v2.DeletePipelineResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineResponse} message DeletePipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeletePipelineResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified DeletePipelineResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.DeletePipelineResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.IDeletePipelineResponse} message DeletePipelineResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeletePipelineResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DeletePipelineResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.DeletePipelineResponse} DeletePipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeletePipelineResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.DeletePipelineResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DeletePipelineResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.DeletePipelineResponse} DeletePipelineResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeletePipelineResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DeletePipelineResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeletePipelineResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a DeletePipelineResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.DeletePipelineResponse} DeletePipelineResponse
                 */
                DeletePipelineResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.DeletePipelineResponse)
                        return object;
                    return new $root.sajari.pipeline.v2.DeletePipelineResponse();
                };

                /**
                 * Creates a plain object from a DeletePipelineResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @static
                 * @param {sajari.pipeline.v2.DeletePipelineResponse} message DeletePipelineResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeletePipelineResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this DeletePipelineResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.DeletePipelineResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeletePipelineResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DeletePipelineResponse;
            })();

            /**
             * Type enum.
             * @name sajari.pipeline.v2.Type
             * @enum {string}
             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
             * @property {number} QUERY_PIPELINE=1 QUERY_PIPELINE value
             * @property {number} RECORD_PIPELINE=2 RECORD_PIPELINE value
             */
            v2.Type = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                values[valuesById[1] = "QUERY_PIPELINE"] = 1;
                values[valuesById[2] = "RECORD_PIPELINE"] = 2;
                return values;
            })();

            /**
             * StepType enum.
             * @name sajari.pipeline.v2.StepType
             * @enum {string}
             * @property {number} STEP_TYPE_UNSPECIFIED=0 STEP_TYPE_UNSPECIFIED value
             * @property {number} PRE_STEP=1 PRE_STEP value
             * @property {number} POST_STEP=2 POST_STEP value
             */
            v2.StepType = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "STEP_TYPE_UNSPECIFIED"] = 0;
                values[valuesById[1] = "PRE_STEP"] = 1;
                values[valuesById[2] = "POST_STEP"] = 2;
                return values;
            })();

            v2.TypeIdentifier = (function() {

                /**
                 * Properties of a TypeIdentifier.
                 * @memberof sajari.pipeline.v2
                 * @interface ITypeIdentifier
                 * @property {sajari.pipeline.v2.Type|null} [type] TypeIdentifier type
                 * @property {sajari.pipeline.v2.IIdentifier|null} [identifier] TypeIdentifier identifier
                 */

                /**
                 * Constructs a new TypeIdentifier.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a TypeIdentifier.
                 * @implements ITypeIdentifier
                 * @constructor
                 * @param {sajari.pipeline.v2.ITypeIdentifier=} [properties] Properties to set
                 */
                function TypeIdentifier(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TypeIdentifier type.
                 * @member {sajari.pipeline.v2.Type} type
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @instance
                 */
                TypeIdentifier.prototype.type = 0;

                /**
                 * TypeIdentifier identifier.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} identifier
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @instance
                 */
                TypeIdentifier.prototype.identifier = null;

                /**
                 * Creates a new TypeIdentifier instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {sajari.pipeline.v2.ITypeIdentifier=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.TypeIdentifier} TypeIdentifier instance
                 */
                TypeIdentifier.create = function create(properties) {
                    return new TypeIdentifier(properties);
                };

                /**
                 * Encodes the specified TypeIdentifier message. Does not implicitly {@link sajari.pipeline.v2.TypeIdentifier.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {sajari.pipeline.v2.ITypeIdentifier} message TypeIdentifier message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TypeIdentifier.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.identifier, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified TypeIdentifier message, length delimited. Does not implicitly {@link sajari.pipeline.v2.TypeIdentifier.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {sajari.pipeline.v2.ITypeIdentifier} message TypeIdentifier message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TypeIdentifier.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TypeIdentifier message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.TypeIdentifier} TypeIdentifier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TypeIdentifier.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.TypeIdentifier();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.identifier = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a TypeIdentifier message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.TypeIdentifier} TypeIdentifier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TypeIdentifier.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TypeIdentifier message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TypeIdentifier.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.identifier != null && message.hasOwnProperty("identifier")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.identifier);
                        if (error)
                            return "identifier." + error;
                    }
                    return null;
                };

                /**
                 * Creates a TypeIdentifier message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.TypeIdentifier} TypeIdentifier
                 */
                TypeIdentifier.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.TypeIdentifier)
                        return object;
                    var message = new $root.sajari.pipeline.v2.TypeIdentifier();
                    switch (object.type) {
                    case "TYPE_UNSPECIFIED":
                    case 0:
                        message.type = 0;
                        break;
                    case "QUERY_PIPELINE":
                    case 1:
                        message.type = 1;
                        break;
                    case "RECORD_PIPELINE":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    if (object.identifier != null) {
                        if (typeof object.identifier !== "object")
                            throw TypeError(".sajari.pipeline.v2.TypeIdentifier.identifier: object expected");
                        message.identifier = $root.sajari.pipeline.v2.Identifier.fromObject(object.identifier);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a TypeIdentifier message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @static
                 * @param {sajari.pipeline.v2.TypeIdentifier} message TypeIdentifier
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TypeIdentifier.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                        object.identifier = null;
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = $root.sajari.pipeline.v2.Identifier.toObject(message.identifier, options);
                    return object;
                };

                /**
                 * Converts this TypeIdentifier to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.TypeIdentifier
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TypeIdentifier.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return TypeIdentifier;
            })();

            v2.Identifier = (function() {

                /**
                 * Properties of an Identifier.
                 * @memberof sajari.pipeline.v2
                 * @interface IIdentifier
                 * @property {string|null} [name] Identifier name
                 * @property {string|null} [version] Identifier version
                 */

                /**
                 * Constructs a new Identifier.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents an Identifier.
                 * @implements IIdentifier
                 * @constructor
                 * @param {sajari.pipeline.v2.IIdentifier=} [properties] Properties to set
                 */
                function Identifier(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Identifier name.
                 * @member {string} name
                 * @memberof sajari.pipeline.v2.Identifier
                 * @instance
                 */
                Identifier.prototype.name = "";

                /**
                 * Identifier version.
                 * @member {string} version
                 * @memberof sajari.pipeline.v2.Identifier
                 * @instance
                 */
                Identifier.prototype.version = "";

                /**
                 * Creates a new Identifier instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {sajari.pipeline.v2.IIdentifier=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Identifier} Identifier instance
                 */
                Identifier.create = function create(properties) {
                    return new Identifier(properties);
                };

                /**
                 * Encodes the specified Identifier message. Does not implicitly {@link sajari.pipeline.v2.Identifier.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {sajari.pipeline.v2.IIdentifier} message Identifier message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Identifier.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.version != null && message.hasOwnProperty("version"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                    return writer;
                };

                /**
                 * Encodes the specified Identifier message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Identifier.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {sajari.pipeline.v2.IIdentifier} message Identifier message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Identifier.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Identifier message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Identifier} Identifier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Identifier.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Identifier();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.version = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an Identifier message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Identifier} Identifier
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Identifier.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Identifier message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Identifier.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    return null;
                };

                /**
                 * Creates an Identifier message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Identifier} Identifier
                 */
                Identifier.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Identifier)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Identifier();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.version != null)
                        message.version = String(object.version);
                    return message;
                };

                /**
                 * Creates a plain object from an Identifier message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Identifier
                 * @static
                 * @param {sajari.pipeline.v2.Identifier} message Identifier
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Identifier.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.version = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    return object;
                };

                /**
                 * Converts this Identifier to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Identifier
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Identifier.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Identifier;
            })();

            v2.Documentation = (function() {

                /**
                 * Constructs a new Documentation service.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Documentation
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Documentation(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Documentation.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Documentation;

                /**
                 * Creates new Documentation service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.pipeline.v2.Documentation
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Documentation} RPC service. Useful where requests and/or responses are streamed.
                 */
                Documentation.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Documentation#getPipelineDocumentation}.
                 * @memberof sajari.pipeline.v2.Documentation
                 * @typedef GetPipelineDocumentationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.GetPipelineDocumentationResponse} [response] GetPipelineDocumentationResponse
                 */

                /**
                 * Calls GetPipelineDocumentation.
                 * @function getPipelineDocumentation
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest} request GetPipelineDocumentationRequest message or plain object
                 * @param {sajari.pipeline.v2.Documentation.GetPipelineDocumentationCallback} callback Node-style callback called with the error, if any, and GetPipelineDocumentationResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Documentation.prototype.getPipelineDocumentation = function getPipelineDocumentation(request, callback) {
                    return this.rpcCall(getPipelineDocumentation, $root.sajari.pipeline.v2.GetPipelineDocumentationRequest, $root.sajari.pipeline.v2.GetPipelineDocumentationResponse, request, callback);
                }, "name", { value: "GetPipelineDocumentation" });

                /**
                 * Calls GetPipelineDocumentation.
                 * @function getPipelineDocumentation
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest} request GetPipelineDocumentationRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.GetPipelineDocumentationResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Documentation#listStepTemplates}.
                 * @memberof sajari.pipeline.v2.Documentation
                 * @typedef ListStepTemplatesCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.ListStepTemplatesResponse} [response] ListStepTemplatesResponse
                 */

                /**
                 * Calls ListStepTemplates.
                 * @function listStepTemplates
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest} request ListStepTemplatesRequest message or plain object
                 * @param {sajari.pipeline.v2.Documentation.ListStepTemplatesCallback} callback Node-style callback called with the error, if any, and ListStepTemplatesResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Documentation.prototype.listStepTemplates = function listStepTemplates(request, callback) {
                    return this.rpcCall(listStepTemplates, $root.sajari.pipeline.v2.ListStepTemplatesRequest, $root.sajari.pipeline.v2.ListStepTemplatesResponse, request, callback);
                }, "name", { value: "ListStepTemplates" });

                /**
                 * Calls ListStepTemplates.
                 * @function listStepTemplates
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest} request ListStepTemplatesRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.ListStepTemplatesResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Documentation#getStepTemplateDocumentation}.
                 * @memberof sajari.pipeline.v2.Documentation
                 * @typedef GetStepTemplateDocumentationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} [response] GetStepTemplateDocumentationResponse
                 */

                /**
                 * Calls GetStepTemplateDocumentation.
                 * @function getStepTemplateDocumentation
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest} request GetStepTemplateDocumentationRequest message or plain object
                 * @param {sajari.pipeline.v2.Documentation.GetStepTemplateDocumentationCallback} callback Node-style callback called with the error, if any, and GetStepTemplateDocumentationResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Documentation.prototype.getStepTemplateDocumentation = function getStepTemplateDocumentation(request, callback) {
                    return this.rpcCall(getStepTemplateDocumentation, $root.sajari.pipeline.v2.GetStepTemplateDocumentationRequest, $root.sajari.pipeline.v2.GetStepTemplateDocumentationResponse, request, callback);
                }, "name", { value: "GetStepTemplateDocumentation" });

                /**
                 * Calls GetStepTemplateDocumentation.
                 * @function getStepTemplateDocumentation
                 * @memberof sajari.pipeline.v2.Documentation
                 * @instance
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest} request GetStepTemplateDocumentationRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.GetStepTemplateDocumentationResponse>} Promise
                 * @variation 2
                 */

                return Documentation;
            })();

            v2.GetPipelineDocumentationRequest = (function() {

                /**
                 * Properties of a GetPipelineDocumentationRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetPipelineDocumentationRequest
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] GetPipelineDocumentationRequest pipeline
                 */

                /**
                 * Constructs a new GetPipelineDocumentationRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetPipelineDocumentationRequest.
                 * @implements IGetPipelineDocumentationRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest=} [properties] Properties to set
                 */
                function GetPipelineDocumentationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetPipelineDocumentationRequest pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @instance
                 */
                GetPipelineDocumentationRequest.prototype.pipeline = null;

                /**
                 * Creates a new GetPipelineDocumentationRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationRequest} GetPipelineDocumentationRequest instance
                 */
                GetPipelineDocumentationRequest.create = function create(properties) {
                    return new GetPipelineDocumentationRequest(properties);
                };

                /**
                 * Encodes the specified GetPipelineDocumentationRequest message. Does not implicitly {@link sajari.pipeline.v2.GetPipelineDocumentationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest} message GetPipelineDocumentationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineDocumentationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetPipelineDocumentationRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetPipelineDocumentationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationRequest} message GetPipelineDocumentationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineDocumentationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetPipelineDocumentationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationRequest} GetPipelineDocumentationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineDocumentationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetPipelineDocumentationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetPipelineDocumentationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationRequest} GetPipelineDocumentationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineDocumentationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetPipelineDocumentationRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetPipelineDocumentationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetPipelineDocumentationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationRequest} GetPipelineDocumentationRequest
                 */
                GetPipelineDocumentationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetPipelineDocumentationRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetPipelineDocumentationRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetPipelineDocumentationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.GetPipelineDocumentationRequest} message GetPipelineDocumentationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetPipelineDocumentationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.pipeline = null;
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    return object;
                };

                /**
                 * Converts this GetPipelineDocumentationRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetPipelineDocumentationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetPipelineDocumentationRequest;
            })();

            v2.GetPipelineDocumentationResponse = (function() {

                /**
                 * Properties of a GetPipelineDocumentationResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetPipelineDocumentationResponse
                 * @property {sajari.pipeline.v2.ITypeIdentifier|null} [pipeline] GetPipelineDocumentationResponse pipeline
                 * @property {string|null} [title] GetPipelineDocumentationResponse title
                 * @property {string|null} [description] GetPipelineDocumentationResponse description
                 * @property {Array.<sajari.pipeline.v2.ISteps>|null} [steps] GetPipelineDocumentationResponse steps
                 * @property {Array.<sajari.pipeline.v2.IParameter>|null} [inputs] GetPipelineDocumentationResponse inputs
                 * @property {Array.<sajari.pipeline.v2.IParameter>|null} [outputs] GetPipelineDocumentationResponse outputs
                 * @property {google.protobuf.ITimestamp|null} [createTime] GetPipelineDocumentationResponse createTime
                 */

                /**
                 * Constructs a new GetPipelineDocumentationResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetPipelineDocumentationResponse.
                 * @implements IGetPipelineDocumentationResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationResponse=} [properties] Properties to set
                 */
                function GetPipelineDocumentationResponse(properties) {
                    this.steps = [];
                    this.inputs = [];
                    this.outputs = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetPipelineDocumentationResponse pipeline.
                 * @member {sajari.pipeline.v2.ITypeIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.pipeline = null;

                /**
                 * GetPipelineDocumentationResponse title.
                 * @member {string} title
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.title = "";

                /**
                 * GetPipelineDocumentationResponse description.
                 * @member {string} description
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.description = "";

                /**
                 * GetPipelineDocumentationResponse steps.
                 * @member {Array.<sajari.pipeline.v2.ISteps>} steps
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.steps = $util.emptyArray;

                /**
                 * GetPipelineDocumentationResponse inputs.
                 * @member {Array.<sajari.pipeline.v2.IParameter>} inputs
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.inputs = $util.emptyArray;

                /**
                 * GetPipelineDocumentationResponse outputs.
                 * @member {Array.<sajari.pipeline.v2.IParameter>} outputs
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.outputs = $util.emptyArray;

                /**
                 * GetPipelineDocumentationResponse createTime.
                 * @member {google.protobuf.ITimestamp|null|undefined} createTime
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 */
                GetPipelineDocumentationResponse.prototype.createTime = null;

                /**
                 * Creates a new GetPipelineDocumentationResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationResponse} GetPipelineDocumentationResponse instance
                 */
                GetPipelineDocumentationResponse.create = function create(properties) {
                    return new GetPipelineDocumentationResponse(properties);
                };

                /**
                 * Encodes the specified GetPipelineDocumentationResponse message. Does not implicitly {@link sajari.pipeline.v2.GetPipelineDocumentationResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationResponse} message GetPipelineDocumentationResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineDocumentationResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.TypeIdentifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.title != null && message.hasOwnProperty("title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.steps != null && message.steps.length)
                        for (var i = 0; i < message.steps.length; ++i)
                            $root.sajari.pipeline.v2.Steps.encode(message.steps[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.inputs != null && message.inputs.length)
                        for (var i = 0; i < message.inputs.length; ++i)
                            $root.sajari.pipeline.v2.Parameter.encode(message.inputs[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.outputs != null && message.outputs.length)
                        for (var i = 0; i < message.outputs.length; ++i)
                            $root.sajari.pipeline.v2.Parameter.encode(message.outputs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetPipelineDocumentationResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetPipelineDocumentationResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetPipelineDocumentationResponse} message GetPipelineDocumentationResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetPipelineDocumentationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetPipelineDocumentationResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationResponse} GetPipelineDocumentationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineDocumentationResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetPipelineDocumentationResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.title = reader.string();
                            break;
                        case 3:
                            message.description = reader.string();
                            break;
                        case 4:
                            if (!(message.steps && message.steps.length))
                                message.steps = [];
                            message.steps.push($root.sajari.pipeline.v2.Steps.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.inputs && message.inputs.length))
                                message.inputs = [];
                            message.inputs.push($root.sajari.pipeline.v2.Parameter.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.outputs && message.outputs.length))
                                message.outputs = [];
                            message.outputs.push($root.sajari.pipeline.v2.Parameter.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetPipelineDocumentationResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationResponse} GetPipelineDocumentationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetPipelineDocumentationResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetPipelineDocumentationResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetPipelineDocumentationResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.TypeIdentifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.steps != null && message.hasOwnProperty("steps")) {
                        if (!Array.isArray(message.steps))
                            return "steps: array expected";
                        for (var i = 0; i < message.steps.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Steps.verify(message.steps[i]);
                            if (error)
                                return "steps." + error;
                        }
                    }
                    if (message.inputs != null && message.hasOwnProperty("inputs")) {
                        if (!Array.isArray(message.inputs))
                            return "inputs: array expected";
                        for (var i = 0; i < message.inputs.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Parameter.verify(message.inputs[i]);
                            if (error)
                                return "inputs." + error;
                        }
                    }
                    if (message.outputs != null && message.hasOwnProperty("outputs")) {
                        if (!Array.isArray(message.outputs))
                            return "outputs: array expected";
                        for (var i = 0; i < message.outputs.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Parameter.verify(message.outputs[i]);
                            if (error)
                                return "outputs." + error;
                        }
                    }
                    if (message.createTime != null && message.hasOwnProperty("createTime")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                        if (error)
                            return "createTime." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetPipelineDocumentationResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetPipelineDocumentationResponse} GetPipelineDocumentationResponse
                 */
                GetPipelineDocumentationResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetPipelineDocumentationResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetPipelineDocumentationResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.fromObject(object.pipeline);
                    }
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.steps) {
                        if (!Array.isArray(object.steps))
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.steps: array expected");
                        message.steps = [];
                        for (var i = 0; i < object.steps.length; ++i) {
                            if (typeof object.steps[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.steps: object expected");
                            message.steps[i] = $root.sajari.pipeline.v2.Steps.fromObject(object.steps[i]);
                        }
                    }
                    if (object.inputs) {
                        if (!Array.isArray(object.inputs))
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.inputs: array expected");
                        message.inputs = [];
                        for (var i = 0; i < object.inputs.length; ++i) {
                            if (typeof object.inputs[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.inputs: object expected");
                            message.inputs[i] = $root.sajari.pipeline.v2.Parameter.fromObject(object.inputs[i]);
                        }
                    }
                    if (object.outputs) {
                        if (!Array.isArray(object.outputs))
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.outputs: array expected");
                        message.outputs = [];
                        for (var i = 0; i < object.outputs.length; ++i) {
                            if (typeof object.outputs[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.outputs: object expected");
                            message.outputs[i] = $root.sajari.pipeline.v2.Parameter.fromObject(object.outputs[i]);
                        }
                    }
                    if (object.createTime != null) {
                        if (typeof object.createTime !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetPipelineDocumentationResponse.createTime: object expected");
                        message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetPipelineDocumentationResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.GetPipelineDocumentationResponse} message GetPipelineDocumentationResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetPipelineDocumentationResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.steps = [];
                        object.inputs = [];
                        object.outputs = [];
                    }
                    if (options.defaults) {
                        object.pipeline = null;
                        object.title = "";
                        object.description = "";
                        object.createTime = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.TypeIdentifier.toObject(message.pipeline, options);
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.steps && message.steps.length) {
                        object.steps = [];
                        for (var j = 0; j < message.steps.length; ++j)
                            object.steps[j] = $root.sajari.pipeline.v2.Steps.toObject(message.steps[j], options);
                    }
                    if (message.inputs && message.inputs.length) {
                        object.inputs = [];
                        for (var j = 0; j < message.inputs.length; ++j)
                            object.inputs[j] = $root.sajari.pipeline.v2.Parameter.toObject(message.inputs[j], options);
                    }
                    if (message.outputs && message.outputs.length) {
                        object.outputs = [];
                        for (var j = 0; j < message.outputs.length; ++j)
                            object.outputs[j] = $root.sajari.pipeline.v2.Parameter.toObject(message.outputs[j], options);
                    }
                    if (message.createTime != null && message.hasOwnProperty("createTime"))
                        object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                    return object;
                };

                /**
                 * Converts this GetPipelineDocumentationResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetPipelineDocumentationResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetPipelineDocumentationResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetPipelineDocumentationResponse;
            })();

            v2.Steps = (function() {

                /**
                 * Properties of a Steps.
                 * @memberof sajari.pipeline.v2
                 * @interface ISteps
                 * @property {sajari.pipeline.v2.StepType|null} [stepType] Steps stepType
                 * @property {Array.<sajari.pipeline.v2.IStep>|null} [steps] Steps steps
                 */

                /**
                 * Constructs a new Steps.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Steps.
                 * @implements ISteps
                 * @constructor
                 * @param {sajari.pipeline.v2.ISteps=} [properties] Properties to set
                 */
                function Steps(properties) {
                    this.steps = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Steps stepType.
                 * @member {sajari.pipeline.v2.StepType} stepType
                 * @memberof sajari.pipeline.v2.Steps
                 * @instance
                 */
                Steps.prototype.stepType = 0;

                /**
                 * Steps steps.
                 * @member {Array.<sajari.pipeline.v2.IStep>} steps
                 * @memberof sajari.pipeline.v2.Steps
                 * @instance
                 */
                Steps.prototype.steps = $util.emptyArray;

                /**
                 * Creates a new Steps instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {sajari.pipeline.v2.ISteps=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Steps} Steps instance
                 */
                Steps.create = function create(properties) {
                    return new Steps(properties);
                };

                /**
                 * Encodes the specified Steps message. Does not implicitly {@link sajari.pipeline.v2.Steps.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {sajari.pipeline.v2.ISteps} message Steps message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Steps.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.stepType);
                    if (message.steps != null && message.steps.length)
                        for (var i = 0; i < message.steps.length; ++i)
                            $root.sajari.pipeline.v2.Step.encode(message.steps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Steps message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Steps.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {sajari.pipeline.v2.ISteps} message Steps message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Steps.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Steps message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Steps} Steps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Steps.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Steps();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.stepType = reader.int32();
                            break;
                        case 2:
                            if (!(message.steps && message.steps.length))
                                message.steps = [];
                            message.steps.push($root.sajari.pipeline.v2.Step.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Steps message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Steps} Steps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Steps.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Steps message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Steps.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        switch (message.stepType) {
                        default:
                            return "stepType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.steps != null && message.hasOwnProperty("steps")) {
                        if (!Array.isArray(message.steps))
                            return "steps: array expected";
                        for (var i = 0; i < message.steps.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Step.verify(message.steps[i]);
                            if (error)
                                return "steps." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Steps message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Steps} Steps
                 */
                Steps.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Steps)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Steps();
                    switch (object.stepType) {
                    case "STEP_TYPE_UNSPECIFIED":
                    case 0:
                        message.stepType = 0;
                        break;
                    case "PRE_STEP":
                    case 1:
                        message.stepType = 1;
                        break;
                    case "POST_STEP":
                    case 2:
                        message.stepType = 2;
                        break;
                    }
                    if (object.steps) {
                        if (!Array.isArray(object.steps))
                            throw TypeError(".sajari.pipeline.v2.Steps.steps: array expected");
                        message.steps = [];
                        for (var i = 0; i < object.steps.length; ++i) {
                            if (typeof object.steps[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.Steps.steps: object expected");
                            message.steps[i] = $root.sajari.pipeline.v2.Step.fromObject(object.steps[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Steps message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Steps
                 * @static
                 * @param {sajari.pipeline.v2.Steps} message Steps
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Steps.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.steps = [];
                    if (options.defaults)
                        object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                    if (message.steps && message.steps.length) {
                        object.steps = [];
                        for (var j = 0; j < message.steps.length; ++j)
                            object.steps[j] = $root.sajari.pipeline.v2.Step.toObject(message.steps[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this Steps to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Steps
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Steps.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Steps;
            })();

            v2.Parameter = (function() {

                /**
                 * Properties of a Parameter.
                 * @memberof sajari.pipeline.v2
                 * @interface IParameter
                 * @property {string|null} [identifier] Parameter identifier
                 * @property {string|null} [name] Parameter name
                 * @property {string|null} [type] Parameter type
                 * @property {string|null} [description] Parameter description
                 * @property {string|null} [defaultValue] Parameter defaultValue
                 */

                /**
                 * Constructs a new Parameter.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Parameter.
                 * @implements IParameter
                 * @constructor
                 * @param {sajari.pipeline.v2.IParameter=} [properties] Properties to set
                 */
                function Parameter(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Parameter identifier.
                 * @member {string} identifier
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 */
                Parameter.prototype.identifier = "";

                /**
                 * Parameter name.
                 * @member {string} name
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 */
                Parameter.prototype.name = "";

                /**
                 * Parameter type.
                 * @member {string} type
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 */
                Parameter.prototype.type = "";

                /**
                 * Parameter description.
                 * @member {string} description
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 */
                Parameter.prototype.description = "";

                /**
                 * Parameter defaultValue.
                 * @member {string} defaultValue
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 */
                Parameter.prototype.defaultValue = "";

                /**
                 * Creates a new Parameter instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {sajari.pipeline.v2.IParameter=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Parameter} Parameter instance
                 */
                Parameter.create = function create(properties) {
                    return new Parameter(properties);
                };

                /**
                 * Encodes the specified Parameter message. Does not implicitly {@link sajari.pipeline.v2.Parameter.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {sajari.pipeline.v2.IParameter} message Parameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Parameter.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.identifier);
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.defaultValue);
                    return writer;
                };

                /**
                 * Encodes the specified Parameter message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Parameter.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {sajari.pipeline.v2.IParameter} message Parameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Parameter.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Parameter message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Parameter} Parameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Parameter.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Parameter();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.identifier = reader.string();
                            break;
                        case 2:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.type = reader.string();
                            break;
                        case 4:
                            message.description = reader.string();
                            break;
                        case 5:
                            message.defaultValue = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Parameter message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Parameter} Parameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Parameter.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Parameter message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Parameter.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        if (!$util.isString(message.identifier))
                            return "identifier: string expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    return null;
                };

                /**
                 * Creates a Parameter message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Parameter} Parameter
                 */
                Parameter.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Parameter)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Parameter();
                    if (object.identifier != null)
                        message.identifier = String(object.identifier);
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    return message;
                };

                /**
                 * Creates a plain object from a Parameter message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Parameter
                 * @static
                 * @param {sajari.pipeline.v2.Parameter} message Parameter
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Parameter.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.identifier = "";
                        object.name = "";
                        object.type = "";
                        object.description = "";
                        object.defaultValue = "";
                    }
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = message.identifier;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    return object;
                };

                /**
                 * Converts this Parameter to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Parameter
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Parameter.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Parameter;
            })();

            v2.Constant = (function() {

                /**
                 * Properties of a Constant.
                 * @memberof sajari.pipeline.v2
                 * @interface IConstant
                 * @property {string|null} [name] Constant name
                 * @property {string|null} [type] Constant type
                 * @property {string|null} [description] Constant description
                 * @property {string|null} [value] Constant value
                 */

                /**
                 * Constructs a new Constant.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Constant.
                 * @implements IConstant
                 * @constructor
                 * @param {sajari.pipeline.v2.IConstant=} [properties] Properties to set
                 */
                function Constant(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Constant name.
                 * @member {string} name
                 * @memberof sajari.pipeline.v2.Constant
                 * @instance
                 */
                Constant.prototype.name = "";

                /**
                 * Constant type.
                 * @member {string} type
                 * @memberof sajari.pipeline.v2.Constant
                 * @instance
                 */
                Constant.prototype.type = "";

                /**
                 * Constant description.
                 * @member {string} description
                 * @memberof sajari.pipeline.v2.Constant
                 * @instance
                 */
                Constant.prototype.description = "";

                /**
                 * Constant value.
                 * @member {string} value
                 * @memberof sajari.pipeline.v2.Constant
                 * @instance
                 */
                Constant.prototype.value = "";

                /**
                 * Creates a new Constant instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {sajari.pipeline.v2.IConstant=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Constant} Constant instance
                 */
                Constant.create = function create(properties) {
                    return new Constant(properties);
                };

                /**
                 * Encodes the specified Constant message. Does not implicitly {@link sajari.pipeline.v2.Constant.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {sajari.pipeline.v2.IConstant} message Constant message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Constant.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.value != null && message.hasOwnProperty("value"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.value);
                    return writer;
                };

                /**
                 * Encodes the specified Constant message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Constant.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {sajari.pipeline.v2.IConstant} message Constant message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Constant.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Constant message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Constant} Constant
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Constant.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Constant();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.type = reader.string();
                            break;
                        case 3:
                            message.description = reader.string();
                            break;
                        case 4:
                            message.value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Constant message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Constant} Constant
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Constant.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Constant message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Constant.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };

                /**
                 * Creates a Constant message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Constant} Constant
                 */
                Constant.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Constant)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Constant();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };

                /**
                 * Creates a plain object from a Constant message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Constant
                 * @static
                 * @param {sajari.pipeline.v2.Constant} message Constant
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Constant.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.type = "";
                        object.description = "";
                        object.value = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };

                /**
                 * Converts this Constant to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Constant
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Constant.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Constant;
            })();

            v2.Step = (function() {

                /**
                 * Properties of a Step.
                 * @memberof sajari.pipeline.v2
                 * @interface IStep
                 * @property {sajari.pipeline.v2.Type|null} [type] Step type
                 * @property {sajari.pipeline.v2.StepType|null} [stepType] Step stepType
                 * @property {string|null} [identifier] Step identifier
                 * @property {string|null} [title] Step title
                 * @property {string|null} [description] Step description
                 * @property {Array.<sajari.pipeline.v2.IParameter>|null} [inputs] Step inputs
                 * @property {Array.<sajari.pipeline.v2.IParameter>|null} [outputs] Step outputs
                 * @property {Array.<sajari.pipeline.v2.IConstant>|null} [constants] Step constants
                 */

                /**
                 * Constructs a new Step.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Step.
                 * @implements IStep
                 * @constructor
                 * @param {sajari.pipeline.v2.IStep=} [properties] Properties to set
                 */
                function Step(properties) {
                    this.inputs = [];
                    this.outputs = [];
                    this.constants = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Step type.
                 * @member {sajari.pipeline.v2.Type} type
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.type = 0;

                /**
                 * Step stepType.
                 * @member {sajari.pipeline.v2.StepType} stepType
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.stepType = 0;

                /**
                 * Step identifier.
                 * @member {string} identifier
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.identifier = "";

                /**
                 * Step title.
                 * @member {string} title
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.title = "";

                /**
                 * Step description.
                 * @member {string} description
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.description = "";

                /**
                 * Step inputs.
                 * @member {Array.<sajari.pipeline.v2.IParameter>} inputs
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.inputs = $util.emptyArray;

                /**
                 * Step outputs.
                 * @member {Array.<sajari.pipeline.v2.IParameter>} outputs
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.outputs = $util.emptyArray;

                /**
                 * Step constants.
                 * @member {Array.<sajari.pipeline.v2.IConstant>} constants
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 */
                Step.prototype.constants = $util.emptyArray;

                /**
                 * Creates a new Step instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {sajari.pipeline.v2.IStep=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Step} Step instance
                 */
                Step.create = function create(properties) {
                    return new Step(properties);
                };

                /**
                 * Encodes the specified Step message. Does not implicitly {@link sajari.pipeline.v2.Step.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {sajari.pipeline.v2.IStep} message Step message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Step.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepType);
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier);
                    if (message.title != null && message.hasOwnProperty("title"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.title);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                    if (message.inputs != null && message.inputs.length)
                        for (var i = 0; i < message.inputs.length; ++i)
                            $root.sajari.pipeline.v2.Parameter.encode(message.inputs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.outputs != null && message.outputs.length)
                        for (var i = 0; i < message.outputs.length; ++i)
                            $root.sajari.pipeline.v2.Parameter.encode(message.outputs[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.constants != null && message.constants.length)
                        for (var i = 0; i < message.constants.length; ++i)
                            $root.sajari.pipeline.v2.Constant.encode(message.constants[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Step message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Step.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {sajari.pipeline.v2.IStep} message Step message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Step.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Step message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Step} Step
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Step.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Step();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.stepType = reader.int32();
                            break;
                        case 3:
                            message.identifier = reader.string();
                            break;
                        case 4:
                            message.title = reader.string();
                            break;
                        case 5:
                            message.description = reader.string();
                            break;
                        case 6:
                            if (!(message.inputs && message.inputs.length))
                                message.inputs = [];
                            message.inputs.push($root.sajari.pipeline.v2.Parameter.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.outputs && message.outputs.length))
                                message.outputs = [];
                            message.outputs.push($root.sajari.pipeline.v2.Parameter.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.constants && message.constants.length))
                                message.constants = [];
                            message.constants.push($root.sajari.pipeline.v2.Constant.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Step message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Step} Step
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Step.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Step message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Step.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        switch (message.stepType) {
                        default:
                            return "stepType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        if (!$util.isString(message.identifier))
                            return "identifier: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.inputs != null && message.hasOwnProperty("inputs")) {
                        if (!Array.isArray(message.inputs))
                            return "inputs: array expected";
                        for (var i = 0; i < message.inputs.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Parameter.verify(message.inputs[i]);
                            if (error)
                                return "inputs." + error;
                        }
                    }
                    if (message.outputs != null && message.hasOwnProperty("outputs")) {
                        if (!Array.isArray(message.outputs))
                            return "outputs: array expected";
                        for (var i = 0; i < message.outputs.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Parameter.verify(message.outputs[i]);
                            if (error)
                                return "outputs." + error;
                        }
                    }
                    if (message.constants != null && message.hasOwnProperty("constants")) {
                        if (!Array.isArray(message.constants))
                            return "constants: array expected";
                        for (var i = 0; i < message.constants.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Constant.verify(message.constants[i]);
                            if (error)
                                return "constants." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Step message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Step} Step
                 */
                Step.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Step)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Step();
                    switch (object.type) {
                    case "TYPE_UNSPECIFIED":
                    case 0:
                        message.type = 0;
                        break;
                    case "QUERY_PIPELINE":
                    case 1:
                        message.type = 1;
                        break;
                    case "RECORD_PIPELINE":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    switch (object.stepType) {
                    case "STEP_TYPE_UNSPECIFIED":
                    case 0:
                        message.stepType = 0;
                        break;
                    case "PRE_STEP":
                    case 1:
                        message.stepType = 1;
                        break;
                    case "POST_STEP":
                    case 2:
                        message.stepType = 2;
                        break;
                    }
                    if (object.identifier != null)
                        message.identifier = String(object.identifier);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.inputs) {
                        if (!Array.isArray(object.inputs))
                            throw TypeError(".sajari.pipeline.v2.Step.inputs: array expected");
                        message.inputs = [];
                        for (var i = 0; i < object.inputs.length; ++i) {
                            if (typeof object.inputs[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.Step.inputs: object expected");
                            message.inputs[i] = $root.sajari.pipeline.v2.Parameter.fromObject(object.inputs[i]);
                        }
                    }
                    if (object.outputs) {
                        if (!Array.isArray(object.outputs))
                            throw TypeError(".sajari.pipeline.v2.Step.outputs: array expected");
                        message.outputs = [];
                        for (var i = 0; i < object.outputs.length; ++i) {
                            if (typeof object.outputs[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.Step.outputs: object expected");
                            message.outputs[i] = $root.sajari.pipeline.v2.Parameter.fromObject(object.outputs[i]);
                        }
                    }
                    if (object.constants) {
                        if (!Array.isArray(object.constants))
                            throw TypeError(".sajari.pipeline.v2.Step.constants: array expected");
                        message.constants = [];
                        for (var i = 0; i < object.constants.length; ++i) {
                            if (typeof object.constants[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.Step.constants: object expected");
                            message.constants[i] = $root.sajari.pipeline.v2.Constant.fromObject(object.constants[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Step message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Step
                 * @static
                 * @param {sajari.pipeline.v2.Step} message Step
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Step.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.inputs = [];
                        object.outputs = [];
                        object.constants = [];
                    }
                    if (options.defaults) {
                        object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                        object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                        object.identifier = "";
                        object.title = "";
                        object.description = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = message.identifier;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.inputs && message.inputs.length) {
                        object.inputs = [];
                        for (var j = 0; j < message.inputs.length; ++j)
                            object.inputs[j] = $root.sajari.pipeline.v2.Parameter.toObject(message.inputs[j], options);
                    }
                    if (message.outputs && message.outputs.length) {
                        object.outputs = [];
                        for (var j = 0; j < message.outputs.length; ++j)
                            object.outputs[j] = $root.sajari.pipeline.v2.Parameter.toObject(message.outputs[j], options);
                    }
                    if (message.constants && message.constants.length) {
                        object.constants = [];
                        for (var j = 0; j < message.constants.length; ++j)
                            object.constants[j] = $root.sajari.pipeline.v2.Constant.toObject(message.constants[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this Step to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Step
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Step.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Step;
            })();

            v2.ListStepTemplatesRequest = (function() {

                /**
                 * Properties of a ListStepTemplatesRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IListStepTemplatesRequest
                 * @property {sajari.pipeline.v2.Type|null} [type] ListStepTemplatesRequest type
                 * @property {sajari.pipeline.v2.StepType|null} [stepType] ListStepTemplatesRequest stepType
                 * @property {number|null} [pageSize] ListStepTemplatesRequest pageSize
                 * @property {string|null} [pageToken] ListStepTemplatesRequest pageToken
                 */

                /**
                 * Constructs a new ListStepTemplatesRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ListStepTemplatesRequest.
                 * @implements IListStepTemplatesRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest=} [properties] Properties to set
                 */
                function ListStepTemplatesRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListStepTemplatesRequest type.
                 * @member {sajari.pipeline.v2.Type} type
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @instance
                 */
                ListStepTemplatesRequest.prototype.type = 0;

                /**
                 * ListStepTemplatesRequest stepType.
                 * @member {sajari.pipeline.v2.StepType} stepType
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @instance
                 */
                ListStepTemplatesRequest.prototype.stepType = 0;

                /**
                 * ListStepTemplatesRequest pageSize.
                 * @member {number} pageSize
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @instance
                 */
                ListStepTemplatesRequest.prototype.pageSize = 0;

                /**
                 * ListStepTemplatesRequest pageToken.
                 * @member {string} pageToken
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @instance
                 */
                ListStepTemplatesRequest.prototype.pageToken = "";

                /**
                 * Creates a new ListStepTemplatesRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ListStepTemplatesRequest} ListStepTemplatesRequest instance
                 */
                ListStepTemplatesRequest.create = function create(properties) {
                    return new ListStepTemplatesRequest(properties);
                };

                /**
                 * Encodes the specified ListStepTemplatesRequest message. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest} message ListStepTemplatesRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListStepTemplatesRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepType);
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListStepTemplatesRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesRequest} message ListStepTemplatesRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListStepTemplatesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListStepTemplatesRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ListStepTemplatesRequest} ListStepTemplatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListStepTemplatesRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ListStepTemplatesRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.stepType = reader.int32();
                            break;
                        case 3:
                            message.pageSize = reader.int32();
                            break;
                        case 4:
                            message.pageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListStepTemplatesRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ListStepTemplatesRequest} ListStepTemplatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListStepTemplatesRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListStepTemplatesRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListStepTemplatesRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        switch (message.stepType) {
                        default:
                            return "stepType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListStepTemplatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ListStepTemplatesRequest} ListStepTemplatesRequest
                 */
                ListStepTemplatesRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ListStepTemplatesRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ListStepTemplatesRequest();
                    switch (object.type) {
                    case "TYPE_UNSPECIFIED":
                    case 0:
                        message.type = 0;
                        break;
                    case "QUERY_PIPELINE":
                    case 1:
                        message.type = 1;
                        break;
                    case "RECORD_PIPELINE":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    switch (object.stepType) {
                    case "STEP_TYPE_UNSPECIFIED":
                    case 0:
                        message.stepType = 0;
                        break;
                    case "PRE_STEP":
                    case 1:
                        message.stepType = 1;
                        break;
                    case "POST_STEP":
                    case 2:
                        message.stepType = 2;
                        break;
                    }
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListStepTemplatesRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @static
                 * @param {sajari.pipeline.v2.ListStepTemplatesRequest} message ListStepTemplatesRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListStepTemplatesRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                        object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                        object.pageSize = 0;
                        object.pageToken = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    return object;
                };

                /**
                 * Converts this ListStepTemplatesRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ListStepTemplatesRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListStepTemplatesRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ListStepTemplatesRequest;
            })();

            v2.ListStepTemplatesResponse = (function() {

                /**
                 * Properties of a ListStepTemplatesResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IListStepTemplatesResponse
                 * @property {Array.<sajari.pipeline.v2.IStep>|null} [stepTemplates] ListStepTemplatesResponse stepTemplates
                 * @property {string|null} [nextPageToken] ListStepTemplatesResponse nextPageToken
                 */

                /**
                 * Constructs a new ListStepTemplatesResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ListStepTemplatesResponse.
                 * @implements IListStepTemplatesResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IListStepTemplatesResponse=} [properties] Properties to set
                 */
                function ListStepTemplatesResponse(properties) {
                    this.stepTemplates = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListStepTemplatesResponse stepTemplates.
                 * @member {Array.<sajari.pipeline.v2.IStep>} stepTemplates
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @instance
                 */
                ListStepTemplatesResponse.prototype.stepTemplates = $util.emptyArray;

                /**
                 * ListStepTemplatesResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @instance
                 */
                ListStepTemplatesResponse.prototype.nextPageToken = "";

                /**
                 * Creates a new ListStepTemplatesResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ListStepTemplatesResponse} ListStepTemplatesResponse instance
                 */
                ListStepTemplatesResponse.create = function create(properties) {
                    return new ListStepTemplatesResponse(properties);
                };

                /**
                 * Encodes the specified ListStepTemplatesResponse message. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesResponse} message ListStepTemplatesResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListStepTemplatesResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.stepTemplates != null && message.stepTemplates.length)
                        for (var i = 0; i < message.stepTemplates.length; ++i)
                            $root.sajari.pipeline.v2.Step.encode(message.stepTemplates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListStepTemplatesResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {sajari.pipeline.v2.IListStepTemplatesResponse} message ListStepTemplatesResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListStepTemplatesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListStepTemplatesResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ListStepTemplatesResponse} ListStepTemplatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListStepTemplatesResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ListStepTemplatesResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.stepTemplates && message.stepTemplates.length))
                                message.stepTemplates = [];
                            message.stepTemplates.push($root.sajari.pipeline.v2.Step.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.nextPageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListStepTemplatesResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ListStepTemplatesResponse} ListStepTemplatesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListStepTemplatesResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListStepTemplatesResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListStepTemplatesResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.stepTemplates != null && message.hasOwnProperty("stepTemplates")) {
                        if (!Array.isArray(message.stepTemplates))
                            return "stepTemplates: array expected";
                        for (var i = 0; i < message.stepTemplates.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Step.verify(message.stepTemplates[i]);
                            if (error)
                                return "stepTemplates." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListStepTemplatesResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ListStepTemplatesResponse} ListStepTemplatesResponse
                 */
                ListStepTemplatesResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ListStepTemplatesResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ListStepTemplatesResponse();
                    if (object.stepTemplates) {
                        if (!Array.isArray(object.stepTemplates))
                            throw TypeError(".sajari.pipeline.v2.ListStepTemplatesResponse.stepTemplates: array expected");
                        message.stepTemplates = [];
                        for (var i = 0; i < object.stepTemplates.length; ++i) {
                            if (typeof object.stepTemplates[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.ListStepTemplatesResponse.stepTemplates: object expected");
                            message.stepTemplates[i] = $root.sajari.pipeline.v2.Step.fromObject(object.stepTemplates[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListStepTemplatesResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @static
                 * @param {sajari.pipeline.v2.ListStepTemplatesResponse} message ListStepTemplatesResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListStepTemplatesResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.stepTemplates = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.stepTemplates && message.stepTemplates.length) {
                        object.stepTemplates = [];
                        for (var j = 0; j < message.stepTemplates.length; ++j)
                            object.stepTemplates[j] = $root.sajari.pipeline.v2.Step.toObject(message.stepTemplates[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };

                /**
                 * Converts this ListStepTemplatesResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListStepTemplatesResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                ListStepTemplatesResponse.StepTemplate = (function() {

                    /**
                     * Properties of a StepTemplate.
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                     * @interface IStepTemplate
                     * @property {sajari.pipeline.v2.Type|null} [type] StepTemplate type
                     * @property {sajari.pipeline.v2.StepType|null} [stepType] StepTemplate stepType
                     * @property {string|null} [identifier] StepTemplate identifier
                     * @property {string|null} [title] StepTemplate title
                     * @property {string|null} [description] StepTemplate description
                     */

                    /**
                     * Constructs a new StepTemplate.
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse
                     * @classdesc Represents a StepTemplate.
                     * @implements IStepTemplate
                     * @constructor
                     * @param {sajari.pipeline.v2.ListStepTemplatesResponse.IStepTemplate=} [properties] Properties to set
                     */
                    function StepTemplate(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * StepTemplate type.
                     * @member {sajari.pipeline.v2.Type} type
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     */
                    StepTemplate.prototype.type = 0;

                    /**
                     * StepTemplate stepType.
                     * @member {sajari.pipeline.v2.StepType} stepType
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     */
                    StepTemplate.prototype.stepType = 0;

                    /**
                     * StepTemplate identifier.
                     * @member {string} identifier
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     */
                    StepTemplate.prototype.identifier = "";

                    /**
                     * StepTemplate title.
                     * @member {string} title
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     */
                    StepTemplate.prototype.title = "";

                    /**
                     * StepTemplate description.
                     * @member {string} description
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     */
                    StepTemplate.prototype.description = "";

                    /**
                     * Creates a new StepTemplate instance using the specified properties.
                     * @function create
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {sajari.pipeline.v2.ListStepTemplatesResponse.IStepTemplate=} [properties] Properties to set
                     * @returns {sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate} StepTemplate instance
                     */
                    StepTemplate.create = function create(properties) {
                        return new StepTemplate(properties);
                    };

                    /**
                     * Encodes the specified StepTemplate message. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {sajari.pipeline.v2.ListStepTemplatesResponse.IStepTemplate} message StepTemplate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StepTemplate.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.type != null && message.hasOwnProperty("type"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                        if (message.stepType != null && message.hasOwnProperty("stepType"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepType);
                        if (message.identifier != null && message.hasOwnProperty("identifier"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier);
                        if (message.title != null && message.hasOwnProperty("title"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.title);
                        if (message.description != null && message.hasOwnProperty("description"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                        return writer;
                    };

                    /**
                     * Encodes the specified StepTemplate message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {sajari.pipeline.v2.ListStepTemplatesResponse.IStepTemplate} message StepTemplate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StepTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a StepTemplate message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate} StepTemplate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StepTemplate.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.type = reader.int32();
                                break;
                            case 2:
                                message.stepType = reader.int32();
                                break;
                            case 3:
                                message.identifier = reader.string();
                                break;
                            case 4:
                                message.title = reader.string();
                                break;
                            case 5:
                                message.description = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a StepTemplate message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate} StepTemplate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StepTemplate.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a StepTemplate message.
                     * @function verify
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    StepTemplate.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            switch (message.type) {
                            default:
                                return "type: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.stepType != null && message.hasOwnProperty("stepType"))
                            switch (message.stepType) {
                            default:
                                return "stepType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.identifier != null && message.hasOwnProperty("identifier"))
                            if (!$util.isString(message.identifier))
                                return "identifier: string expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        return null;
                    };

                    /**
                     * Creates a StepTemplate message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate} StepTemplate
                     */
                    StepTemplate.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate)
                            return object;
                        var message = new $root.sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate();
                        switch (object.type) {
                        case "TYPE_UNSPECIFIED":
                        case 0:
                            message.type = 0;
                            break;
                        case "QUERY_PIPELINE":
                        case 1:
                            message.type = 1;
                            break;
                        case "RECORD_PIPELINE":
                        case 2:
                            message.type = 2;
                            break;
                        }
                        switch (object.stepType) {
                        case "STEP_TYPE_UNSPECIFIED":
                        case 0:
                            message.stepType = 0;
                            break;
                        case "PRE_STEP":
                        case 1:
                            message.stepType = 1;
                            break;
                        case "POST_STEP":
                        case 2:
                            message.stepType = 2;
                            break;
                        }
                        if (object.identifier != null)
                            message.identifier = String(object.identifier);
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        return message;
                    };

                    /**
                     * Creates a plain object from a StepTemplate message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @static
                     * @param {sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate} message StepTemplate
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    StepTemplate.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                            object.identifier = "";
                            object.title = "";
                            object.description = "";
                        }
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                        if (message.stepType != null && message.hasOwnProperty("stepType"))
                            object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                        if (message.identifier != null && message.hasOwnProperty("identifier"))
                            object.identifier = message.identifier;
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        return object;
                    };

                    /**
                     * Converts this StepTemplate to JSON.
                     * @function toJSON
                     * @memberof sajari.pipeline.v2.ListStepTemplatesResponse.StepTemplate
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    StepTemplate.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return StepTemplate;
                })();

                return ListStepTemplatesResponse;
            })();

            v2.GetStepTemplateDocumentationRequest = (function() {

                /**
                 * Properties of a GetStepTemplateDocumentationRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetStepTemplateDocumentationRequest
                 * @property {sajari.pipeline.v2.Type|null} [type] GetStepTemplateDocumentationRequest type
                 * @property {sajari.pipeline.v2.StepType|null} [stepType] GetStepTemplateDocumentationRequest stepType
                 * @property {string|null} [identifier] GetStepTemplateDocumentationRequest identifier
                 */

                /**
                 * Constructs a new GetStepTemplateDocumentationRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetStepTemplateDocumentationRequest.
                 * @implements IGetStepTemplateDocumentationRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest=} [properties] Properties to set
                 */
                function GetStepTemplateDocumentationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetStepTemplateDocumentationRequest type.
                 * @member {sajari.pipeline.v2.Type} type
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @instance
                 */
                GetStepTemplateDocumentationRequest.prototype.type = 0;

                /**
                 * GetStepTemplateDocumentationRequest stepType.
                 * @member {sajari.pipeline.v2.StepType} stepType
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @instance
                 */
                GetStepTemplateDocumentationRequest.prototype.stepType = 0;

                /**
                 * GetStepTemplateDocumentationRequest identifier.
                 * @member {string} identifier
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @instance
                 */
                GetStepTemplateDocumentationRequest.prototype.identifier = "";

                /**
                 * Creates a new GetStepTemplateDocumentationRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationRequest} GetStepTemplateDocumentationRequest instance
                 */
                GetStepTemplateDocumentationRequest.create = function create(properties) {
                    return new GetStepTemplateDocumentationRequest(properties);
                };

                /**
                 * Encodes the specified GetStepTemplateDocumentationRequest message. Does not implicitly {@link sajari.pipeline.v2.GetStepTemplateDocumentationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest} message GetStepTemplateDocumentationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetStepTemplateDocumentationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepType);
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier);
                    return writer;
                };

                /**
                 * Encodes the specified GetStepTemplateDocumentationRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetStepTemplateDocumentationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationRequest} message GetStepTemplateDocumentationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetStepTemplateDocumentationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetStepTemplateDocumentationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationRequest} GetStepTemplateDocumentationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetStepTemplateDocumentationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetStepTemplateDocumentationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.stepType = reader.int32();
                            break;
                        case 3:
                            message.identifier = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetStepTemplateDocumentationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationRequest} GetStepTemplateDocumentationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetStepTemplateDocumentationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetStepTemplateDocumentationRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetStepTemplateDocumentationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        switch (message.stepType) {
                        default:
                            return "stepType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        if (!$util.isString(message.identifier))
                            return "identifier: string expected";
                    return null;
                };

                /**
                 * Creates a GetStepTemplateDocumentationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationRequest} GetStepTemplateDocumentationRequest
                 */
                GetStepTemplateDocumentationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetStepTemplateDocumentationRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetStepTemplateDocumentationRequest();
                    switch (object.type) {
                    case "TYPE_UNSPECIFIED":
                    case 0:
                        message.type = 0;
                        break;
                    case "QUERY_PIPELINE":
                    case 1:
                        message.type = 1;
                        break;
                    case "RECORD_PIPELINE":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    switch (object.stepType) {
                    case "STEP_TYPE_UNSPECIFIED":
                    case 0:
                        message.stepType = 0;
                        break;
                    case "PRE_STEP":
                    case 1:
                        message.stepType = 1;
                        break;
                    case "POST_STEP":
                    case 2:
                        message.stepType = 2;
                        break;
                    }
                    if (object.identifier != null)
                        message.identifier = String(object.identifier);
                    return message;
                };

                /**
                 * Creates a plain object from a GetStepTemplateDocumentationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @static
                 * @param {sajari.pipeline.v2.GetStepTemplateDocumentationRequest} message GetStepTemplateDocumentationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetStepTemplateDocumentationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                        object.stepType = options.enums === String ? "STEP_TYPE_UNSPECIFIED" : 0;
                        object.identifier = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Type[message.type] : message.type;
                    if (message.stepType != null && message.hasOwnProperty("stepType"))
                        object.stepType = options.enums === String ? $root.sajari.pipeline.v2.StepType[message.stepType] : message.stepType;
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = message.identifier;
                    return object;
                };

                /**
                 * Converts this GetStepTemplateDocumentationRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetStepTemplateDocumentationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetStepTemplateDocumentationRequest;
            })();

            v2.GetStepTemplateDocumentationResponse = (function() {

                /**
                 * Properties of a GetStepTemplateDocumentationResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IGetStepTemplateDocumentationResponse
                 * @property {sajari.pipeline.v2.IStep|null} [stepTemplate] GetStepTemplateDocumentationResponse stepTemplate
                 */

                /**
                 * Constructs a new GetStepTemplateDocumentationResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a GetStepTemplateDocumentationResponse.
                 * @implements IGetStepTemplateDocumentationResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationResponse=} [properties] Properties to set
                 */
                function GetStepTemplateDocumentationResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetStepTemplateDocumentationResponse stepTemplate.
                 * @member {sajari.pipeline.v2.IStep|null|undefined} stepTemplate
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @instance
                 */
                GetStepTemplateDocumentationResponse.prototype.stepTemplate = null;

                /**
                 * Creates a new GetStepTemplateDocumentationResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} GetStepTemplateDocumentationResponse instance
                 */
                GetStepTemplateDocumentationResponse.create = function create(properties) {
                    return new GetStepTemplateDocumentationResponse(properties);
                };

                /**
                 * Encodes the specified GetStepTemplateDocumentationResponse message. Does not implicitly {@link sajari.pipeline.v2.GetStepTemplateDocumentationResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationResponse} message GetStepTemplateDocumentationResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetStepTemplateDocumentationResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.stepTemplate != null && message.hasOwnProperty("stepTemplate"))
                        $root.sajari.pipeline.v2.Step.encode(message.stepTemplate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetStepTemplateDocumentationResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.GetStepTemplateDocumentationResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.IGetStepTemplateDocumentationResponse} message GetStepTemplateDocumentationResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetStepTemplateDocumentationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetStepTemplateDocumentationResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} GetStepTemplateDocumentationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetStepTemplateDocumentationResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.GetStepTemplateDocumentationResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.stepTemplate = $root.sajari.pipeline.v2.Step.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetStepTemplateDocumentationResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} GetStepTemplateDocumentationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetStepTemplateDocumentationResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetStepTemplateDocumentationResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetStepTemplateDocumentationResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.stepTemplate != null && message.hasOwnProperty("stepTemplate")) {
                        var error = $root.sajari.pipeline.v2.Step.verify(message.stepTemplate);
                        if (error)
                            return "stepTemplate." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetStepTemplateDocumentationResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} GetStepTemplateDocumentationResponse
                 */
                GetStepTemplateDocumentationResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.GetStepTemplateDocumentationResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.GetStepTemplateDocumentationResponse();
                    if (object.stepTemplate != null) {
                        if (typeof object.stepTemplate !== "object")
                            throw TypeError(".sajari.pipeline.v2.GetStepTemplateDocumentationResponse.stepTemplate: object expected");
                        message.stepTemplate = $root.sajari.pipeline.v2.Step.fromObject(object.stepTemplate);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetStepTemplateDocumentationResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @static
                 * @param {sajari.pipeline.v2.GetStepTemplateDocumentationResponse} message GetStepTemplateDocumentationResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetStepTemplateDocumentationResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.stepTemplate = null;
                    if (message.stepTemplate != null && message.hasOwnProperty("stepTemplate"))
                        object.stepTemplate = $root.sajari.pipeline.v2.Step.toObject(message.stepTemplate, options);
                    return object;
                };

                /**
                 * Converts this GetStepTemplateDocumentationResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.GetStepTemplateDocumentationResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetStepTemplateDocumentationResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetStepTemplateDocumentationResponse;
            })();

            v2.Query = (function() {

                /**
                 * Constructs a new Query service.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Query
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Query(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;

                /**
                 * Creates new Query service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.pipeline.v2.Query
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Query} RPC service. Useful where requests and/or responses are streamed.
                 */
                Query.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Query#search}.
                 * @memberof sajari.pipeline.v2.Query
                 * @typedef SearchCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.SearchResponse} [response] SearchResponse
                 */

                /**
                 * Calls Search.
                 * @function search
                 * @memberof sajari.pipeline.v2.Query
                 * @instance
                 * @param {sajari.pipeline.v2.ISearchRequest} request SearchRequest message or plain object
                 * @param {sajari.pipeline.v2.Query.SearchCallback} callback Node-style callback called with the error, if any, and SearchResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Query.prototype.search = function search(request, callback) {
                    return this.rpcCall(search, $root.sajari.pipeline.v2.SearchRequest, $root.sajari.pipeline.v2.SearchResponse, request, callback);
                }, "name", { value: "Search" });

                /**
                 * Calls Search.
                 * @function search
                 * @memberof sajari.pipeline.v2.Query
                 * @instance
                 * @param {sajari.pipeline.v2.ISearchRequest} request SearchRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.SearchResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Query#evaluate}.
                 * @memberof sajari.pipeline.v2.Query
                 * @typedef EvaluateCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.EvaluateResponse} [response] EvaluateResponse
                 */

                /**
                 * Calls Evaluate.
                 * @function evaluate
                 * @memberof sajari.pipeline.v2.Query
                 * @instance
                 * @param {sajari.pipeline.v2.IEvaluateRequest} request EvaluateRequest message or plain object
                 * @param {sajari.pipeline.v2.Query.EvaluateCallback} callback Node-style callback called with the error, if any, and EvaluateResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Query.prototype.evaluate = function evaluate(request, callback) {
                    return this.rpcCall(evaluate, $root.sajari.pipeline.v2.EvaluateRequest, $root.sajari.pipeline.v2.EvaluateResponse, request, callback);
                }, "name", { value: "Evaluate" });

                /**
                 * Calls Evaluate.
                 * @function evaluate
                 * @memberof sajari.pipeline.v2.Query
                 * @instance
                 * @param {sajari.pipeline.v2.IEvaluateRequest} request EvaluateRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.EvaluateResponse>} Promise
                 * @variation 2
                 */

                return Query;
            })();

            v2.SearchRequest = (function() {

                /**
                 * Properties of a SearchRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface ISearchRequest
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] SearchRequest pipeline
                 * @property {google.protobuf.IStruct|null} [values] SearchRequest values
                 * @property {sajari.pipeline.v2.ITracking|null} [tracking] SearchRequest tracking
                 */

                /**
                 * Constructs a new SearchRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a SearchRequest.
                 * @implements ISearchRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.ISearchRequest=} [properties] Properties to set
                 */
                function SearchRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SearchRequest pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @instance
                 */
                SearchRequest.prototype.pipeline = null;

                /**
                 * SearchRequest values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @instance
                 */
                SearchRequest.prototype.values = null;

                /**
                 * SearchRequest tracking.
                 * @member {sajari.pipeline.v2.ITracking|null|undefined} tracking
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @instance
                 */
                SearchRequest.prototype.tracking = null;

                /**
                 * Creates a new SearchRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISearchRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.SearchRequest} SearchRequest instance
                 */
                SearchRequest.create = function create(properties) {
                    return new SearchRequest(properties);
                };

                /**
                 * Encodes the specified SearchRequest message. Does not implicitly {@link sajari.pipeline.v2.SearchRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISearchRequest} message SearchRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SearchRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.tracking != null && message.hasOwnProperty("tracking"))
                        $root.sajari.pipeline.v2.Tracking.encode(message.tracking, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified SearchRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.SearchRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {sajari.pipeline.v2.ISearchRequest} message SearchRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SearchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SearchRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.SearchRequest} SearchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SearchRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.SearchRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.tracking = $root.sajari.pipeline.v2.Tracking.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a SearchRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.SearchRequest} SearchRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SearchRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SearchRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SearchRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.tracking != null && message.hasOwnProperty("tracking")) {
                        var error = $root.sajari.pipeline.v2.Tracking.verify(message.tracking);
                        if (error)
                            return "tracking." + error;
                    }
                    return null;
                };

                /**
                 * Creates a SearchRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.SearchRequest} SearchRequest
                 */
                SearchRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.SearchRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.SearchRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchRequest.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.tracking != null) {
                        if (typeof object.tracking !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchRequest.tracking: object expected");
                        message.tracking = $root.sajari.pipeline.v2.Tracking.fromObject(object.tracking);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a SearchRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @static
                 * @param {sajari.pipeline.v2.SearchRequest} message SearchRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SearchRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.tracking = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.tracking != null && message.hasOwnProperty("tracking"))
                        object.tracking = $root.sajari.pipeline.v2.Tracking.toObject(message.tracking, options);
                    return object;
                };

                /**
                 * Converts this SearchRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.SearchRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SearchRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return SearchRequest;
            })();

            v2.SearchResponse = (function() {

                /**
                 * Properties of a SearchResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface ISearchResponse
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] SearchResponse pipeline
                 * @property {google.protobuf.IStruct|null} [values] SearchResponse values
                 * @property {sajari.pipeline.v2.IQueryResults|null} [queryResults] SearchResponse queryResults
                 * @property {Array.<sajari.pipeline.v2.IToken>|null} [tokens] SearchResponse tokens
                 */

                /**
                 * Constructs a new SearchResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a SearchResponse.
                 * @implements ISearchResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.ISearchResponse=} [properties] Properties to set
                 */
                function SearchResponse(properties) {
                    this.tokens = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SearchResponse pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @instance
                 */
                SearchResponse.prototype.pipeline = null;

                /**
                 * SearchResponse values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @instance
                 */
                SearchResponse.prototype.values = null;

                /**
                 * SearchResponse queryResults.
                 * @member {sajari.pipeline.v2.IQueryResults|null|undefined} queryResults
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @instance
                 */
                SearchResponse.prototype.queryResults = null;

                /**
                 * SearchResponse tokens.
                 * @member {Array.<sajari.pipeline.v2.IToken>} tokens
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @instance
                 */
                SearchResponse.prototype.tokens = $util.emptyArray;

                /**
                 * Creates a new SearchResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISearchResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.SearchResponse} SearchResponse instance
                 */
                SearchResponse.create = function create(properties) {
                    return new SearchResponse(properties);
                };

                /**
                 * Encodes the specified SearchResponse message. Does not implicitly {@link sajari.pipeline.v2.SearchResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISearchResponse} message SearchResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SearchResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.queryResults != null && message.hasOwnProperty("queryResults"))
                        $root.sajari.pipeline.v2.QueryResults.encode(message.queryResults, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.tokens != null && message.tokens.length)
                        for (var i = 0; i < message.tokens.length; ++i)
                            $root.sajari.pipeline.v2.Token.encode(message.tokens[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified SearchResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.SearchResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {sajari.pipeline.v2.ISearchResponse} message SearchResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SearchResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SearchResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.SearchResponse} SearchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SearchResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.SearchResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.queryResults = $root.sajari.pipeline.v2.QueryResults.decode(reader, reader.uint32());
                            break;
                        case 4:
                            if (!(message.tokens && message.tokens.length))
                                message.tokens = [];
                            message.tokens.push($root.sajari.pipeline.v2.Token.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a SearchResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.SearchResponse} SearchResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SearchResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SearchResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SearchResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.queryResults != null && message.hasOwnProperty("queryResults")) {
                        var error = $root.sajari.pipeline.v2.QueryResults.verify(message.queryResults);
                        if (error)
                            return "queryResults." + error;
                    }
                    if (message.tokens != null && message.hasOwnProperty("tokens")) {
                        if (!Array.isArray(message.tokens))
                            return "tokens: array expected";
                        for (var i = 0; i < message.tokens.length; ++i) {
                            var error = $root.sajari.pipeline.v2.Token.verify(message.tokens[i]);
                            if (error)
                                return "tokens." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a SearchResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.SearchResponse} SearchResponse
                 */
                SearchResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.SearchResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.SearchResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchResponse.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.queryResults != null) {
                        if (typeof object.queryResults !== "object")
                            throw TypeError(".sajari.pipeline.v2.SearchResponse.queryResults: object expected");
                        message.queryResults = $root.sajari.pipeline.v2.QueryResults.fromObject(object.queryResults);
                    }
                    if (object.tokens) {
                        if (!Array.isArray(object.tokens))
                            throw TypeError(".sajari.pipeline.v2.SearchResponse.tokens: array expected");
                        message.tokens = [];
                        for (var i = 0; i < object.tokens.length; ++i) {
                            if (typeof object.tokens[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.SearchResponse.tokens: object expected");
                            message.tokens[i] = $root.sajari.pipeline.v2.Token.fromObject(object.tokens[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a SearchResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @static
                 * @param {sajari.pipeline.v2.SearchResponse} message SearchResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SearchResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.tokens = [];
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.queryResults = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.queryResults != null && message.hasOwnProperty("queryResults"))
                        object.queryResults = $root.sajari.pipeline.v2.QueryResults.toObject(message.queryResults, options);
                    if (message.tokens && message.tokens.length) {
                        object.tokens = [];
                        for (var j = 0; j < message.tokens.length; ++j)
                            object.tokens[j] = $root.sajari.pipeline.v2.Token.toObject(message.tokens[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this SearchResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.SearchResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SearchResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return SearchResponse;
            })();

            v2.EvaluateRequest = (function() {

                /**
                 * Properties of an EvaluateRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IEvaluateRequest
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] EvaluateRequest pipeline
                 * @property {google.protobuf.IStruct|null} [values] EvaluateRequest values
                 * @property {sajari.engine.v2.IKey|null} [key] EvaluateRequest key
                 */

                /**
                 * Constructs a new EvaluateRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents an EvaluateRequest.
                 * @implements IEvaluateRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IEvaluateRequest=} [properties] Properties to set
                 */
                function EvaluateRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * EvaluateRequest pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @instance
                 */
                EvaluateRequest.prototype.pipeline = null;

                /**
                 * EvaluateRequest values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @instance
                 */
                EvaluateRequest.prototype.values = null;

                /**
                 * EvaluateRequest key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @instance
                 */
                EvaluateRequest.prototype.key = null;

                /**
                 * Creates a new EvaluateRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.EvaluateRequest} EvaluateRequest instance
                 */
                EvaluateRequest.create = function create(properties) {
                    return new EvaluateRequest(properties);
                };

                /**
                 * Encodes the specified EvaluateRequest message. Does not implicitly {@link sajari.pipeline.v2.EvaluateRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateRequest} message EvaluateRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EvaluateRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified EvaluateRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.EvaluateRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateRequest} message EvaluateRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EvaluateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an EvaluateRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.EvaluateRequest} EvaluateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EvaluateRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.EvaluateRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an EvaluateRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.EvaluateRequest} EvaluateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EvaluateRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an EvaluateRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EvaluateRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    return null;
                };

                /**
                 * Creates an EvaluateRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.EvaluateRequest} EvaluateRequest
                 */
                EvaluateRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.EvaluateRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.EvaluateRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateRequest.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateRequest.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from an EvaluateRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @static
                 * @param {sajari.pipeline.v2.EvaluateRequest} message EvaluateRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EvaluateRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.key = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    return object;
                };

                /**
                 * Converts this EvaluateRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.EvaluateRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EvaluateRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return EvaluateRequest;
            })();

            v2.EvaluateResponse = (function() {

                /**
                 * Properties of an EvaluateResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IEvaluateResponse
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] EvaluateResponse pipeline
                 * @property {google.protobuf.IStruct|null} [values] EvaluateResponse values
                 * @property {sajari.pipeline.v2.IQueryResults|null} [queryResults] EvaluateResponse queryResults
                 */

                /**
                 * Constructs a new EvaluateResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents an EvaluateResponse.
                 * @implements IEvaluateResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IEvaluateResponse=} [properties] Properties to set
                 */
                function EvaluateResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * EvaluateResponse pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @instance
                 */
                EvaluateResponse.prototype.pipeline = null;

                /**
                 * EvaluateResponse values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @instance
                 */
                EvaluateResponse.prototype.values = null;

                /**
                 * EvaluateResponse queryResults.
                 * @member {sajari.pipeline.v2.IQueryResults|null|undefined} queryResults
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @instance
                 */
                EvaluateResponse.prototype.queryResults = null;

                /**
                 * Creates a new EvaluateResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.EvaluateResponse} EvaluateResponse instance
                 */
                EvaluateResponse.create = function create(properties) {
                    return new EvaluateResponse(properties);
                };

                /**
                 * Encodes the specified EvaluateResponse message. Does not implicitly {@link sajari.pipeline.v2.EvaluateResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateResponse} message EvaluateResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EvaluateResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.queryResults != null && message.hasOwnProperty("queryResults"))
                        $root.sajari.pipeline.v2.QueryResults.encode(message.queryResults, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified EvaluateResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.EvaluateResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {sajari.pipeline.v2.IEvaluateResponse} message EvaluateResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EvaluateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an EvaluateResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.EvaluateResponse} EvaluateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EvaluateResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.EvaluateResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.queryResults = $root.sajari.pipeline.v2.QueryResults.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes an EvaluateResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.EvaluateResponse} EvaluateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EvaluateResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an EvaluateResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EvaluateResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.queryResults != null && message.hasOwnProperty("queryResults")) {
                        var error = $root.sajari.pipeline.v2.QueryResults.verify(message.queryResults);
                        if (error)
                            return "queryResults." + error;
                    }
                    return null;
                };

                /**
                 * Creates an EvaluateResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.EvaluateResponse} EvaluateResponse
                 */
                EvaluateResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.EvaluateResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.EvaluateResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateResponse.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.queryResults != null) {
                        if (typeof object.queryResults !== "object")
                            throw TypeError(".sajari.pipeline.v2.EvaluateResponse.queryResults: object expected");
                        message.queryResults = $root.sajari.pipeline.v2.QueryResults.fromObject(object.queryResults);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from an EvaluateResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @static
                 * @param {sajari.pipeline.v2.EvaluateResponse} message EvaluateResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EvaluateResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.queryResults = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.queryResults != null && message.hasOwnProperty("queryResults"))
                        object.queryResults = $root.sajari.pipeline.v2.QueryResults.toObject(message.queryResults, options);
                    return object;
                };

                /**
                 * Converts this EvaluateResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.EvaluateResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EvaluateResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return EvaluateResponse;
            })();

            v2.Tracking = (function() {

                /**
                 * Properties of a Tracking.
                 * @memberof sajari.pipeline.v2
                 * @interface ITracking
                 * @property {sajari.pipeline.v2.Tracking.Type|null} [type] Tracking type
                 * @property {string|null} [queryId] Tracking queryId
                 * @property {number|null} [sequence] Tracking sequence
                 * @property {string|null} [field] Tracking field
                 * @property {Object.<string,string>|null} [data] Tracking data
                 */

                /**
                 * Constructs a new Tracking.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Tracking.
                 * @implements ITracking
                 * @constructor
                 * @param {sajari.pipeline.v2.ITracking=} [properties] Properties to set
                 */
                function Tracking(properties) {
                    this.data = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Tracking type.
                 * @member {sajari.pipeline.v2.Tracking.Type} type
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 */
                Tracking.prototype.type = 0;

                /**
                 * Tracking queryId.
                 * @member {string} queryId
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 */
                Tracking.prototype.queryId = "";

                /**
                 * Tracking sequence.
                 * @member {number} sequence
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 */
                Tracking.prototype.sequence = 0;

                /**
                 * Tracking field.
                 * @member {string} field
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 */
                Tracking.prototype.field = "";

                /**
                 * Tracking data.
                 * @member {Object.<string,string>} data
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 */
                Tracking.prototype.data = $util.emptyObject;

                /**
                 * Creates a new Tracking instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {sajari.pipeline.v2.ITracking=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Tracking} Tracking instance
                 */
                Tracking.create = function create(properties) {
                    return new Tracking(properties);
                };

                /**
                 * Encodes the specified Tracking message. Does not implicitly {@link sajari.pipeline.v2.Tracking.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {sajari.pipeline.v2.ITracking} message Tracking message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Tracking.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                    if (message.queryId != null && message.hasOwnProperty("queryId"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.queryId);
                    if (message.sequence != null && message.hasOwnProperty("sequence"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.sequence);
                    if (message.field != null && message.hasOwnProperty("field"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.field);
                    if (message.data != null && message.hasOwnProperty("data"))
                        for (var keys = Object.keys(message.data), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.data[keys[i]]).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Tracking message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Tracking.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {sajari.pipeline.v2.ITracking} message Tracking message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Tracking.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Tracking message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Tracking} Tracking
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Tracking.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Tracking(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.int32();
                            break;
                        case 2:
                            message.queryId = reader.string();
                            break;
                        case 3:
                            message.sequence = reader.int32();
                            break;
                        case 4:
                            message.field = reader.string();
                            break;
                        case 5:
                            reader.skip().pos++;
                            if (message.data === $util.emptyObject)
                                message.data = {};
                            key = reader.string();
                            reader.pos++;
                            message.data[key] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Tracking message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Tracking} Tracking
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Tracking.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Tracking message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Tracking.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.queryId != null && message.hasOwnProperty("queryId"))
                        if (!$util.isString(message.queryId))
                            return "queryId: string expected";
                    if (message.sequence != null && message.hasOwnProperty("sequence"))
                        if (!$util.isInteger(message.sequence))
                            return "sequence: integer expected";
                    if (message.field != null && message.hasOwnProperty("field"))
                        if (!$util.isString(message.field))
                            return "field: string expected";
                    if (message.data != null && message.hasOwnProperty("data")) {
                        if (!$util.isObject(message.data))
                            return "data: object expected";
                        var key = Object.keys(message.data);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.data[key[i]]))
                                return "data: string{k:string} expected";
                    }
                    return null;
                };

                /**
                 * Creates a Tracking message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Tracking} Tracking
                 */
                Tracking.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Tracking)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Tracking();
                    switch (object.type) {
                    case "NONE":
                    case 0:
                        message.type = 0;
                        break;
                    case "CLICK":
                    case 1:
                        message.type = 1;
                        break;
                    case "POS_NEG":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    if (object.queryId != null)
                        message.queryId = String(object.queryId);
                    if (object.sequence != null)
                        message.sequence = object.sequence | 0;
                    if (object.field != null)
                        message.field = String(object.field);
                    if (object.data) {
                        if (typeof object.data !== "object")
                            throw TypeError(".sajari.pipeline.v2.Tracking.data: object expected");
                        message.data = {};
                        for (var keys = Object.keys(object.data), i = 0; i < keys.length; ++i)
                            message.data[keys[i]] = String(object.data[keys[i]]);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Tracking message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Tracking
                 * @static
                 * @param {sajari.pipeline.v2.Tracking} message Tracking
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Tracking.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.data = {};
                    if (options.defaults) {
                        object.type = options.enums === String ? "NONE" : 0;
                        object.queryId = "";
                        object.sequence = 0;
                        object.field = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.pipeline.v2.Tracking.Type[message.type] : message.type;
                    if (message.queryId != null && message.hasOwnProperty("queryId"))
                        object.queryId = message.queryId;
                    if (message.sequence != null && message.hasOwnProperty("sequence"))
                        object.sequence = message.sequence;
                    if (message.field != null && message.hasOwnProperty("field"))
                        object.field = message.field;
                    var keys2;
                    if (message.data && (keys2 = Object.keys(message.data)).length) {
                        object.data = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.data[keys2[j]] = message.data[keys2[j]];
                    }
                    return object;
                };

                /**
                 * Converts this Tracking to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Tracking
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Tracking.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Type enum.
                 * @name sajari.pipeline.v2.Tracking.Type
                 * @enum {string}
                 * @property {number} NONE=0 NONE value
                 * @property {number} CLICK=1 CLICK value
                 * @property {number} POS_NEG=2 POS_NEG value
                 */
                Tracking.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "NONE"] = 0;
                    values[valuesById[1] = "CLICK"] = 1;
                    values[valuesById[2] = "POS_NEG"] = 2;
                    return values;
                })();

                return Tracking;
            })();

            v2.Token = (function() {

                /**
                 * Properties of a Token.
                 * @memberof sajari.pipeline.v2
                 * @interface IToken
                 * @property {sajari.pipeline.v2.Token.IClick|null} [click] Token click
                 * @property {sajari.pipeline.v2.Token.IPosNeg|null} [posNeg] Token posNeg
                 */

                /**
                 * Constructs a new Token.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Token.
                 * @implements IToken
                 * @constructor
                 * @param {sajari.pipeline.v2.IToken=} [properties] Properties to set
                 */
                function Token(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Token click.
                 * @member {sajari.pipeline.v2.Token.IClick|null|undefined} click
                 * @memberof sajari.pipeline.v2.Token
                 * @instance
                 */
                Token.prototype.click = null;

                /**
                 * Token posNeg.
                 * @member {sajari.pipeline.v2.Token.IPosNeg|null|undefined} posNeg
                 * @memberof sajari.pipeline.v2.Token
                 * @instance
                 */
                Token.prototype.posNeg = null;

                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;

                /**
                 * Token token.
                 * @member {"click"|"posNeg"|undefined} token
                 * @memberof sajari.pipeline.v2.Token
                 * @instance
                 */
                Object.defineProperty(Token.prototype, "token", {
                    get: $util.oneOfGetter($oneOfFields = ["click", "posNeg"]),
                    set: $util.oneOfSetter($oneOfFields)
                });

                /**
                 * Creates a new Token instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {sajari.pipeline.v2.IToken=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.Token} Token instance
                 */
                Token.create = function create(properties) {
                    return new Token(properties);
                };

                /**
                 * Encodes the specified Token message. Does not implicitly {@link sajari.pipeline.v2.Token.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {sajari.pipeline.v2.IToken} message Token message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Token.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.click != null && message.hasOwnProperty("click"))
                        $root.sajari.pipeline.v2.Token.Click.encode(message.click, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.posNeg != null && message.hasOwnProperty("posNeg"))
                        $root.sajari.pipeline.v2.Token.PosNeg.encode(message.posNeg, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Token message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Token.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {sajari.pipeline.v2.IToken} message Token message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Token.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Token message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.Token} Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Token.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Token();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.click = $root.sajari.pipeline.v2.Token.Click.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.posNeg = $root.sajari.pipeline.v2.Token.PosNeg.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Token message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.Token} Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Token.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Token message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Token.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.click != null && message.hasOwnProperty("click")) {
                        properties.token = 1;
                        {
                            var error = $root.sajari.pipeline.v2.Token.Click.verify(message.click);
                            if (error)
                                return "click." + error;
                        }
                    }
                    if (message.posNeg != null && message.hasOwnProperty("posNeg")) {
                        if (properties.token === 1)
                            return "token: multiple values";
                        properties.token = 1;
                        {
                            var error = $root.sajari.pipeline.v2.Token.PosNeg.verify(message.posNeg);
                            if (error)
                                return "posNeg." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Token message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.Token} Token
                 */
                Token.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.Token)
                        return object;
                    var message = new $root.sajari.pipeline.v2.Token();
                    if (object.click != null) {
                        if (typeof object.click !== "object")
                            throw TypeError(".sajari.pipeline.v2.Token.click: object expected");
                        message.click = $root.sajari.pipeline.v2.Token.Click.fromObject(object.click);
                    }
                    if (object.posNeg != null) {
                        if (typeof object.posNeg !== "object")
                            throw TypeError(".sajari.pipeline.v2.Token.posNeg: object expected");
                        message.posNeg = $root.sajari.pipeline.v2.Token.PosNeg.fromObject(object.posNeg);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Token message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.Token
                 * @static
                 * @param {sajari.pipeline.v2.Token} message Token
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Token.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.click != null && message.hasOwnProperty("click")) {
                        object.click = $root.sajari.pipeline.v2.Token.Click.toObject(message.click, options);
                        if (options.oneofs)
                            object.token = "click";
                    }
                    if (message.posNeg != null && message.hasOwnProperty("posNeg")) {
                        object.posNeg = $root.sajari.pipeline.v2.Token.PosNeg.toObject(message.posNeg, options);
                        if (options.oneofs)
                            object.token = "posNeg";
                    }
                    return object;
                };

                /**
                 * Converts this Token to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.Token
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Token.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                Token.Click = (function() {

                    /**
                     * Properties of a Click.
                     * @memberof sajari.pipeline.v2.Token
                     * @interface IClick
                     * @property {string|null} [token] Click token
                     */

                    /**
                     * Constructs a new Click.
                     * @memberof sajari.pipeline.v2.Token
                     * @classdesc Represents a Click.
                     * @implements IClick
                     * @constructor
                     * @param {sajari.pipeline.v2.Token.IClick=} [properties] Properties to set
                     */
                    function Click(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Click token.
                     * @member {string} token
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @instance
                     */
                    Click.prototype.token = "";

                    /**
                     * Creates a new Click instance using the specified properties.
                     * @function create
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {sajari.pipeline.v2.Token.IClick=} [properties] Properties to set
                     * @returns {sajari.pipeline.v2.Token.Click} Click instance
                     */
                    Click.create = function create(properties) {
                        return new Click(properties);
                    };

                    /**
                     * Encodes the specified Click message. Does not implicitly {@link sajari.pipeline.v2.Token.Click.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {sajari.pipeline.v2.Token.IClick} message Click message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Click.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.token != null && message.hasOwnProperty("token"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.token);
                        return writer;
                    };

                    /**
                     * Encodes the specified Click message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Token.Click.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {sajari.pipeline.v2.Token.IClick} message Click message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Click.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Click message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.pipeline.v2.Token.Click} Click
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Click.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Token.Click();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.token = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Click message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.pipeline.v2.Token.Click} Click
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Click.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Click message.
                     * @function verify
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Click.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.token != null && message.hasOwnProperty("token"))
                            if (!$util.isString(message.token))
                                return "token: string expected";
                        return null;
                    };

                    /**
                     * Creates a Click message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.pipeline.v2.Token.Click} Click
                     */
                    Click.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.pipeline.v2.Token.Click)
                            return object;
                        var message = new $root.sajari.pipeline.v2.Token.Click();
                        if (object.token != null)
                            message.token = String(object.token);
                        return message;
                    };

                    /**
                     * Creates a plain object from a Click message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @static
                     * @param {sajari.pipeline.v2.Token.Click} message Click
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Click.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.token = "";
                        if (message.token != null && message.hasOwnProperty("token"))
                            object.token = message.token;
                        return object;
                    };

                    /**
                     * Converts this Click to JSON.
                     * @function toJSON
                     * @memberof sajari.pipeline.v2.Token.Click
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Click.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Click;
                })();

                Token.PosNeg = (function() {

                    /**
                     * Properties of a PosNeg.
                     * @memberof sajari.pipeline.v2.Token
                     * @interface IPosNeg
                     * @property {string|null} [pos] PosNeg pos
                     * @property {string|null} [neg] PosNeg neg
                     */

                    /**
                     * Constructs a new PosNeg.
                     * @memberof sajari.pipeline.v2.Token
                     * @classdesc Represents a PosNeg.
                     * @implements IPosNeg
                     * @constructor
                     * @param {sajari.pipeline.v2.Token.IPosNeg=} [properties] Properties to set
                     */
                    function PosNeg(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * PosNeg pos.
                     * @member {string} pos
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @instance
                     */
                    PosNeg.prototype.pos = "";

                    /**
                     * PosNeg neg.
                     * @member {string} neg
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @instance
                     */
                    PosNeg.prototype.neg = "";

                    /**
                     * Creates a new PosNeg instance using the specified properties.
                     * @function create
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {sajari.pipeline.v2.Token.IPosNeg=} [properties] Properties to set
                     * @returns {sajari.pipeline.v2.Token.PosNeg} PosNeg instance
                     */
                    PosNeg.create = function create(properties) {
                        return new PosNeg(properties);
                    };

                    /**
                     * Encodes the specified PosNeg message. Does not implicitly {@link sajari.pipeline.v2.Token.PosNeg.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {sajari.pipeline.v2.Token.IPosNeg} message PosNeg message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PosNeg.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pos != null && message.hasOwnProperty("pos"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.pos);
                        if (message.neg != null && message.hasOwnProperty("neg"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.neg);
                        return writer;
                    };

                    /**
                     * Encodes the specified PosNeg message, length delimited. Does not implicitly {@link sajari.pipeline.v2.Token.PosNeg.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {sajari.pipeline.v2.Token.IPosNeg} message PosNeg message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PosNeg.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a PosNeg message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.pipeline.v2.Token.PosNeg} PosNeg
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PosNeg.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.Token.PosNeg();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.pos = reader.string();
                                break;
                            case 2:
                                message.neg = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a PosNeg message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.pipeline.v2.Token.PosNeg} PosNeg
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PosNeg.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a PosNeg message.
                     * @function verify
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PosNeg.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.pos != null && message.hasOwnProperty("pos"))
                            if (!$util.isString(message.pos))
                                return "pos: string expected";
                        if (message.neg != null && message.hasOwnProperty("neg"))
                            if (!$util.isString(message.neg))
                                return "neg: string expected";
                        return null;
                    };

                    /**
                     * Creates a PosNeg message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.pipeline.v2.Token.PosNeg} PosNeg
                     */
                    PosNeg.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.pipeline.v2.Token.PosNeg)
                            return object;
                        var message = new $root.sajari.pipeline.v2.Token.PosNeg();
                        if (object.pos != null)
                            message.pos = String(object.pos);
                        if (object.neg != null)
                            message.neg = String(object.neg);
                        return message;
                    };

                    /**
                     * Creates a plain object from a PosNeg message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @static
                     * @param {sajari.pipeline.v2.Token.PosNeg} message PosNeg
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PosNeg.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.pos = "";
                            object.neg = "";
                        }
                        if (message.pos != null && message.hasOwnProperty("pos"))
                            object.pos = message.pos;
                        if (message.neg != null && message.hasOwnProperty("neg"))
                            object.neg = message.neg;
                        return object;
                    };

                    /**
                     * Converts this PosNeg to JSON.
                     * @function toJSON
                     * @memberof sajari.pipeline.v2.Token.PosNeg
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PosNeg.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return PosNeg;
                })();

                return Token;
            })();

            v2.QueryResults = (function() {

                /**
                 * Properties of a QueryResults.
                 * @memberof sajari.pipeline.v2
                 * @interface IQueryResults
                 * @property {number|Long|null} [reads] QueryResults reads
                 * @property {number|Long|null} [totalResults] QueryResults totalResults
                 * @property {google.protobuf.IDuration|null} [latency] QueryResults latency
                 * @property {Object.<string,sajari.engine.v2.IQueryAggregateResult>|null} [aggregates] QueryResults aggregates
                 * @property {Object.<string,sajari.engine.v2.IQueryAggregateResult>|null} [aggregateFilters] QueryResults aggregateFilters
                 * @property {Array.<sajari.engine.v2.IQueryResult>|null} [results] QueryResults results
                 */

                /**
                 * Constructs a new QueryResults.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a QueryResults.
                 * @implements IQueryResults
                 * @constructor
                 * @param {sajari.pipeline.v2.IQueryResults=} [properties] Properties to set
                 */
                function QueryResults(properties) {
                    this.aggregates = {};
                    this.aggregateFilters = {};
                    this.results = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * QueryResults reads.
                 * @member {number|Long} reads
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.reads = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * QueryResults totalResults.
                 * @member {number|Long} totalResults
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.totalResults = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * QueryResults latency.
                 * @member {google.protobuf.IDuration|null|undefined} latency
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.latency = null;

                /**
                 * QueryResults aggregates.
                 * @member {Object.<string,sajari.engine.v2.IQueryAggregateResult>} aggregates
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.aggregates = $util.emptyObject;

                /**
                 * QueryResults aggregateFilters.
                 * @member {Object.<string,sajari.engine.v2.IQueryAggregateResult>} aggregateFilters
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.aggregateFilters = $util.emptyObject;

                /**
                 * QueryResults results.
                 * @member {Array.<sajari.engine.v2.IQueryResult>} results
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 */
                QueryResults.prototype.results = $util.emptyArray;

                /**
                 * Creates a new QueryResults instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {sajari.pipeline.v2.IQueryResults=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.QueryResults} QueryResults instance
                 */
                QueryResults.create = function create(properties) {
                    return new QueryResults(properties);
                };

                /**
                 * Encodes the specified QueryResults message. Does not implicitly {@link sajari.pipeline.v2.QueryResults.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {sajari.pipeline.v2.IQueryResults} message QueryResults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryResults.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.reads != null && message.hasOwnProperty("reads"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.reads);
                    if (message.totalResults != null && message.hasOwnProperty("totalResults"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.totalResults);
                    if (message.latency != null && message.hasOwnProperty("latency"))
                        $root.google.protobuf.Duration.encode(message.latency, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.aggregates != null && message.hasOwnProperty("aggregates"))
                        for (var keys = Object.keys(message.aggregates), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.engine.v2.QueryAggregateResult.encode(message.aggregates[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    if (message.aggregateFilters != null && message.hasOwnProperty("aggregateFilters"))
                        for (var keys = Object.keys(message.aggregateFilters), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.engine.v2.QueryAggregateResult.encode(message.aggregateFilters[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    if (message.results != null && message.results.length)
                        for (var i = 0; i < message.results.length; ++i)
                            $root.sajari.engine.v2.QueryResult.encode(message.results[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified QueryResults message, length delimited. Does not implicitly {@link sajari.pipeline.v2.QueryResults.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {sajari.pipeline.v2.IQueryResults} message QueryResults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryResults.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a QueryResults message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.QueryResults} QueryResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryResults.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.QueryResults(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.reads = reader.int64();
                            break;
                        case 2:
                            message.totalResults = reader.int64();
                            break;
                        case 3:
                            message.latency = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                            break;
                        case 4:
                            reader.skip().pos++;
                            if (message.aggregates === $util.emptyObject)
                                message.aggregates = {};
                            key = reader.string();
                            reader.pos++;
                            message.aggregates[key] = $root.sajari.engine.v2.QueryAggregateResult.decode(reader, reader.uint32());
                            break;
                        case 5:
                            reader.skip().pos++;
                            if (message.aggregateFilters === $util.emptyObject)
                                message.aggregateFilters = {};
                            key = reader.string();
                            reader.pos++;
                            message.aggregateFilters[key] = $root.sajari.engine.v2.QueryAggregateResult.decode(reader, reader.uint32());
                            break;
                        case 6:
                            if (!(message.results && message.results.length))
                                message.results = [];
                            message.results.push($root.sajari.engine.v2.QueryResult.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a QueryResults message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.QueryResults} QueryResults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryResults.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a QueryResults message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                QueryResults.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.reads != null && message.hasOwnProperty("reads"))
                        if (!$util.isInteger(message.reads) && !(message.reads && $util.isInteger(message.reads.low) && $util.isInteger(message.reads.high)))
                            return "reads: integer|Long expected";
                    if (message.totalResults != null && message.hasOwnProperty("totalResults"))
                        if (!$util.isInteger(message.totalResults) && !(message.totalResults && $util.isInteger(message.totalResults.low) && $util.isInteger(message.totalResults.high)))
                            return "totalResults: integer|Long expected";
                    if (message.latency != null && message.hasOwnProperty("latency")) {
                        var error = $root.google.protobuf.Duration.verify(message.latency);
                        if (error)
                            return "latency." + error;
                    }
                    if (message.aggregates != null && message.hasOwnProperty("aggregates")) {
                        if (!$util.isObject(message.aggregates))
                            return "aggregates: object expected";
                        var key = Object.keys(message.aggregates);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.verify(message.aggregates[key[i]]);
                            if (error)
                                return "aggregates." + error;
                        }
                    }
                    if (message.aggregateFilters != null && message.hasOwnProperty("aggregateFilters")) {
                        if (!$util.isObject(message.aggregateFilters))
                            return "aggregateFilters: object expected";
                        var key = Object.keys(message.aggregateFilters);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.verify(message.aggregateFilters[key[i]]);
                            if (error)
                                return "aggregateFilters." + error;
                        }
                    }
                    if (message.results != null && message.hasOwnProperty("results")) {
                        if (!Array.isArray(message.results))
                            return "results: array expected";
                        for (var i = 0; i < message.results.length; ++i) {
                            var error = $root.sajari.engine.v2.QueryResult.verify(message.results[i]);
                            if (error)
                                return "results." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a QueryResults message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.QueryResults} QueryResults
                 */
                QueryResults.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.QueryResults)
                        return object;
                    var message = new $root.sajari.pipeline.v2.QueryResults();
                    if (object.reads != null)
                        if ($util.Long)
                            (message.reads = $util.Long.fromValue(object.reads)).unsigned = false;
                        else if (typeof object.reads === "string")
                            message.reads = parseInt(object.reads, 10);
                        else if (typeof object.reads === "number")
                            message.reads = object.reads;
                        else if (typeof object.reads === "object")
                            message.reads = new $util.LongBits(object.reads.low >>> 0, object.reads.high >>> 0).toNumber();
                    if (object.totalResults != null)
                        if ($util.Long)
                            (message.totalResults = $util.Long.fromValue(object.totalResults)).unsigned = false;
                        else if (typeof object.totalResults === "string")
                            message.totalResults = parseInt(object.totalResults, 10);
                        else if (typeof object.totalResults === "number")
                            message.totalResults = object.totalResults;
                        else if (typeof object.totalResults === "object")
                            message.totalResults = new $util.LongBits(object.totalResults.low >>> 0, object.totalResults.high >>> 0).toNumber();
                    if (object.latency != null) {
                        if (typeof object.latency !== "object")
                            throw TypeError(".sajari.pipeline.v2.QueryResults.latency: object expected");
                        message.latency = $root.google.protobuf.Duration.fromObject(object.latency);
                    }
                    if (object.aggregates) {
                        if (typeof object.aggregates !== "object")
                            throw TypeError(".sajari.pipeline.v2.QueryResults.aggregates: object expected");
                        message.aggregates = {};
                        for (var keys = Object.keys(object.aggregates), i = 0; i < keys.length; ++i) {
                            if (typeof object.aggregates[keys[i]] !== "object")
                                throw TypeError(".sajari.pipeline.v2.QueryResults.aggregates: object expected");
                            message.aggregates[keys[i]] = $root.sajari.engine.v2.QueryAggregateResult.fromObject(object.aggregates[keys[i]]);
                        }
                    }
                    if (object.aggregateFilters) {
                        if (typeof object.aggregateFilters !== "object")
                            throw TypeError(".sajari.pipeline.v2.QueryResults.aggregateFilters: object expected");
                        message.aggregateFilters = {};
                        for (var keys = Object.keys(object.aggregateFilters), i = 0; i < keys.length; ++i) {
                            if (typeof object.aggregateFilters[keys[i]] !== "object")
                                throw TypeError(".sajari.pipeline.v2.QueryResults.aggregateFilters: object expected");
                            message.aggregateFilters[keys[i]] = $root.sajari.engine.v2.QueryAggregateResult.fromObject(object.aggregateFilters[keys[i]]);
                        }
                    }
                    if (object.results) {
                        if (!Array.isArray(object.results))
                            throw TypeError(".sajari.pipeline.v2.QueryResults.results: array expected");
                        message.results = [];
                        for (var i = 0; i < object.results.length; ++i) {
                            if (typeof object.results[i] !== "object")
                                throw TypeError(".sajari.pipeline.v2.QueryResults.results: object expected");
                            message.results[i] = $root.sajari.engine.v2.QueryResult.fromObject(object.results[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a QueryResults message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @static
                 * @param {sajari.pipeline.v2.QueryResults} message QueryResults
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                QueryResults.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.results = [];
                    if (options.objects || options.defaults) {
                        object.aggregates = {};
                        object.aggregateFilters = {};
                    }
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.reads = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.reads = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.totalResults = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.totalResults = options.longs === String ? "0" : 0;
                        object.latency = null;
                    }
                    if (message.reads != null && message.hasOwnProperty("reads"))
                        if (typeof message.reads === "number")
                            object.reads = options.longs === String ? String(message.reads) : message.reads;
                        else
                            object.reads = options.longs === String ? $util.Long.prototype.toString.call(message.reads) : options.longs === Number ? new $util.LongBits(message.reads.low >>> 0, message.reads.high >>> 0).toNumber() : message.reads;
                    if (message.totalResults != null && message.hasOwnProperty("totalResults"))
                        if (typeof message.totalResults === "number")
                            object.totalResults = options.longs === String ? String(message.totalResults) : message.totalResults;
                        else
                            object.totalResults = options.longs === String ? $util.Long.prototype.toString.call(message.totalResults) : options.longs === Number ? new $util.LongBits(message.totalResults.low >>> 0, message.totalResults.high >>> 0).toNumber() : message.totalResults;
                    if (message.latency != null && message.hasOwnProperty("latency"))
                        object.latency = $root.google.protobuf.Duration.toObject(message.latency, options);
                    var keys2;
                    if (message.aggregates && (keys2 = Object.keys(message.aggregates)).length) {
                        object.aggregates = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.aggregates[keys2[j]] = $root.sajari.engine.v2.QueryAggregateResult.toObject(message.aggregates[keys2[j]], options);
                    }
                    if (message.aggregateFilters && (keys2 = Object.keys(message.aggregateFilters)).length) {
                        object.aggregateFilters = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.aggregateFilters[keys2[j]] = $root.sajari.engine.v2.QueryAggregateResult.toObject(message.aggregateFilters[keys2[j]], options);
                    }
                    if (message.results && message.results.length) {
                        object.results = [];
                        for (var j = 0; j < message.results.length; ++j)
                            object.results[j] = $root.sajari.engine.v2.QueryResult.toObject(message.results[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this QueryResults to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.QueryResults
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                QueryResults.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return QueryResults;
            })();

            v2.Store = (function() {

                /**
                 * Constructs a new Store service.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a Store
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Store(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Store.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Store;

                /**
                 * Creates new Store service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.pipeline.v2.Store
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Store} RPC service. Useful where requests and/or responses are streamed.
                 */
                Store.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Store#createRecord}.
                 * @memberof sajari.pipeline.v2.Store
                 * @typedef CreateRecordCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.CreateRecordResponse} [response] CreateRecordResponse
                 */

                /**
                 * Calls CreateRecord.
                 * @function createRecord
                 * @memberof sajari.pipeline.v2.Store
                 * @instance
                 * @param {sajari.pipeline.v2.ICreateRecordRequest} request CreateRecordRequest message or plain object
                 * @param {sajari.pipeline.v2.Store.CreateRecordCallback} callback Node-style callback called with the error, if any, and CreateRecordResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Store.prototype.createRecord = function createRecord(request, callback) {
                    return this.rpcCall(createRecord, $root.sajari.pipeline.v2.CreateRecordRequest, $root.sajari.pipeline.v2.CreateRecordResponse, request, callback);
                }, "name", { value: "CreateRecord" });

                /**
                 * Calls CreateRecord.
                 * @function createRecord
                 * @memberof sajari.pipeline.v2.Store
                 * @instance
                 * @param {sajari.pipeline.v2.ICreateRecordRequest} request CreateRecordRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.CreateRecordResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.pipeline.v2.Store#replaceRecord}.
                 * @memberof sajari.pipeline.v2.Store
                 * @typedef ReplaceRecordCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.pipeline.v2.ReplaceRecordResponse} [response] ReplaceRecordResponse
                 */

                /**
                 * Calls ReplaceRecord.
                 * @function replaceRecord
                 * @memberof sajari.pipeline.v2.Store
                 * @instance
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest} request ReplaceRecordRequest message or plain object
                 * @param {sajari.pipeline.v2.Store.ReplaceRecordCallback} callback Node-style callback called with the error, if any, and ReplaceRecordResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Store.prototype.replaceRecord = function replaceRecord(request, callback) {
                    return this.rpcCall(replaceRecord, $root.sajari.pipeline.v2.ReplaceRecordRequest, $root.sajari.pipeline.v2.ReplaceRecordResponse, request, callback);
                }, "name", { value: "ReplaceRecord" });

                /**
                 * Calls ReplaceRecord.
                 * @function replaceRecord
                 * @memberof sajari.pipeline.v2.Store
                 * @instance
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest} request ReplaceRecordRequest message or plain object
                 * @returns {Promise<sajari.pipeline.v2.ReplaceRecordResponse>} Promise
                 * @variation 2
                 */

                return Store;
            })();

            v2.CreateRecordRequest = (function() {

                /**
                 * Properties of a CreateRecordRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface ICreateRecordRequest
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] CreateRecordRequest pipeline
                 * @property {google.protobuf.IStruct|null} [values] CreateRecordRequest values
                 * @property {sajari.engine.v2.IRecord|null} [record] CreateRecordRequest record
                 */

                /**
                 * Constructs a new CreateRecordRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a CreateRecordRequest.
                 * @implements ICreateRecordRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.ICreateRecordRequest=} [properties] Properties to set
                 */
                function CreateRecordRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CreateRecordRequest pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @instance
                 */
                CreateRecordRequest.prototype.pipeline = null;

                /**
                 * CreateRecordRequest values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @instance
                 */
                CreateRecordRequest.prototype.values = null;

                /**
                 * CreateRecordRequest record.
                 * @member {sajari.engine.v2.IRecord|null|undefined} record
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @instance
                 */
                CreateRecordRequest.prototype.record = null;

                /**
                 * Creates a new CreateRecordRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.CreateRecordRequest} CreateRecordRequest instance
                 */
                CreateRecordRequest.create = function create(properties) {
                    return new CreateRecordRequest(properties);
                };

                /**
                 * Encodes the specified CreateRecordRequest message. Does not implicitly {@link sajari.pipeline.v2.CreateRecordRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordRequest} message CreateRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateRecordRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.record != null && message.hasOwnProperty("record"))
                        $root.sajari.engine.v2.Record.encode(message.record, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CreateRecordRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.CreateRecordRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordRequest} message CreateRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreateRecordRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.CreateRecordRequest} CreateRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateRecordRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.CreateRecordRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.record = $root.sajari.engine.v2.Record.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreateRecordRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.CreateRecordRequest} CreateRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreateRecordRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreateRecordRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.record != null && message.hasOwnProperty("record")) {
                        var error = $root.sajari.engine.v2.Record.verify(message.record);
                        if (error)
                            return "record." + error;
                    }
                    return null;
                };

                /**
                 * Creates a CreateRecordRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.CreateRecordRequest} CreateRecordRequest
                 */
                CreateRecordRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.CreateRecordRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.CreateRecordRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordRequest.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.record != null) {
                        if (typeof object.record !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordRequest.record: object expected");
                        message.record = $root.sajari.engine.v2.Record.fromObject(object.record);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CreateRecordRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.CreateRecordRequest} message CreateRecordRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreateRecordRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.record = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.record != null && message.hasOwnProperty("record"))
                        object.record = $root.sajari.engine.v2.Record.toObject(message.record, options);
                    return object;
                };

                /**
                 * Converts this CreateRecordRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.CreateRecordRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreateRecordRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreateRecordRequest;
            })();

            v2.CreateRecordResponse = (function() {

                /**
                 * Properties of a CreateRecordResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface ICreateRecordResponse
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] CreateRecordResponse pipeline
                 * @property {google.protobuf.IStruct|null} [values] CreateRecordResponse values
                 * @property {sajari.engine.v2.IKey|null} [key] CreateRecordResponse key
                 */

                /**
                 * Constructs a new CreateRecordResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a CreateRecordResponse.
                 * @implements ICreateRecordResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.ICreateRecordResponse=} [properties] Properties to set
                 */
                function CreateRecordResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CreateRecordResponse pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @instance
                 */
                CreateRecordResponse.prototype.pipeline = null;

                /**
                 * CreateRecordResponse values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @instance
                 */
                CreateRecordResponse.prototype.values = null;

                /**
                 * CreateRecordResponse key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @instance
                 */
                CreateRecordResponse.prototype.key = null;

                /**
                 * Creates a new CreateRecordResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.CreateRecordResponse} CreateRecordResponse instance
                 */
                CreateRecordResponse.create = function create(properties) {
                    return new CreateRecordResponse(properties);
                };

                /**
                 * Encodes the specified CreateRecordResponse message. Does not implicitly {@link sajari.pipeline.v2.CreateRecordResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordResponse} message CreateRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateRecordResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CreateRecordResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.CreateRecordResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.ICreateRecordResponse} message CreateRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreateRecordResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.CreateRecordResponse} CreateRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateRecordResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.CreateRecordResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreateRecordResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.CreateRecordResponse} CreateRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreateRecordResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreateRecordResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    return null;
                };

                /**
                 * Creates a CreateRecordResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.CreateRecordResponse} CreateRecordResponse
                 */
                CreateRecordResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.CreateRecordResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.CreateRecordResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordResponse.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.pipeline.v2.CreateRecordResponse.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CreateRecordResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.CreateRecordResponse} message CreateRecordResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreateRecordResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.key = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    return object;
                };

                /**
                 * Converts this CreateRecordResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.CreateRecordResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreateRecordResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreateRecordResponse;
            })();

            v2.ReplaceRecordRequest = (function() {

                /**
                 * Properties of a ReplaceRecordRequest.
                 * @memberof sajari.pipeline.v2
                 * @interface IReplaceRecordRequest
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] ReplaceRecordRequest pipeline
                 * @property {google.protobuf.IStruct|null} [values] ReplaceRecordRequest values
                 * @property {sajari.engine.v2.IKey|null} [key] ReplaceRecordRequest key
                 * @property {sajari.engine.v2.IRecord|null} [record] ReplaceRecordRequest record
                 */

                /**
                 * Constructs a new ReplaceRecordRequest.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ReplaceRecordRequest.
                 * @implements IReplaceRecordRequest
                 * @constructor
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest=} [properties] Properties to set
                 */
                function ReplaceRecordRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ReplaceRecordRequest pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @instance
                 */
                ReplaceRecordRequest.prototype.pipeline = null;

                /**
                 * ReplaceRecordRequest values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @instance
                 */
                ReplaceRecordRequest.prototype.values = null;

                /**
                 * ReplaceRecordRequest key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @instance
                 */
                ReplaceRecordRequest.prototype.key = null;

                /**
                 * ReplaceRecordRequest record.
                 * @member {sajari.engine.v2.IRecord|null|undefined} record
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @instance
                 */
                ReplaceRecordRequest.prototype.record = null;

                /**
                 * Creates a new ReplaceRecordRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ReplaceRecordRequest} ReplaceRecordRequest instance
                 */
                ReplaceRecordRequest.create = function create(properties) {
                    return new ReplaceRecordRequest(properties);
                };

                /**
                 * Encodes the specified ReplaceRecordRequest message. Does not implicitly {@link sajari.pipeline.v2.ReplaceRecordRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest} message ReplaceRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReplaceRecordRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.record != null && message.hasOwnProperty("record"))
                        $root.sajari.engine.v2.Record.encode(message.record, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified ReplaceRecordRequest message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ReplaceRecordRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordRequest} message ReplaceRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReplaceRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ReplaceRecordRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ReplaceRecordRequest} ReplaceRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReplaceRecordRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ReplaceRecordRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        case 4:
                            message.record = $root.sajari.engine.v2.Record.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ReplaceRecordRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ReplaceRecordRequest} ReplaceRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReplaceRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ReplaceRecordRequest message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ReplaceRecordRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    if (message.record != null && message.hasOwnProperty("record")) {
                        var error = $root.sajari.engine.v2.Record.verify(message.record);
                        if (error)
                            return "record." + error;
                    }
                    return null;
                };

                /**
                 * Creates a ReplaceRecordRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ReplaceRecordRequest} ReplaceRecordRequest
                 */
                ReplaceRecordRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ReplaceRecordRequest)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ReplaceRecordRequest();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordRequest.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordRequest.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordRequest.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    if (object.record != null) {
                        if (typeof object.record !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordRequest.record: object expected");
                        message.record = $root.sajari.engine.v2.Record.fromObject(object.record);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a ReplaceRecordRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @static
                 * @param {sajari.pipeline.v2.ReplaceRecordRequest} message ReplaceRecordRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ReplaceRecordRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.key = null;
                        object.record = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    if (message.record != null && message.hasOwnProperty("record"))
                        object.record = $root.sajari.engine.v2.Record.toObject(message.record, options);
                    return object;
                };

                /**
                 * Converts this ReplaceRecordRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ReplaceRecordRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ReplaceRecordRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ReplaceRecordRequest;
            })();

            v2.ReplaceRecordResponse = (function() {

                /**
                 * Properties of a ReplaceRecordResponse.
                 * @memberof sajari.pipeline.v2
                 * @interface IReplaceRecordResponse
                 * @property {sajari.pipeline.v2.IIdentifier|null} [pipeline] ReplaceRecordResponse pipeline
                 * @property {google.protobuf.IStruct|null} [values] ReplaceRecordResponse values
                 * @property {sajari.engine.v2.IKey|null} [key] ReplaceRecordResponse key
                 */

                /**
                 * Constructs a new ReplaceRecordResponse.
                 * @memberof sajari.pipeline.v2
                 * @classdesc Represents a ReplaceRecordResponse.
                 * @implements IReplaceRecordResponse
                 * @constructor
                 * @param {sajari.pipeline.v2.IReplaceRecordResponse=} [properties] Properties to set
                 */
                function ReplaceRecordResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ReplaceRecordResponse pipeline.
                 * @member {sajari.pipeline.v2.IIdentifier|null|undefined} pipeline
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @instance
                 */
                ReplaceRecordResponse.prototype.pipeline = null;

                /**
                 * ReplaceRecordResponse values.
                 * @member {google.protobuf.IStruct|null|undefined} values
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @instance
                 */
                ReplaceRecordResponse.prototype.values = null;

                /**
                 * ReplaceRecordResponse key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @instance
                 */
                ReplaceRecordResponse.prototype.key = null;

                /**
                 * Creates a new ReplaceRecordResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordResponse=} [properties] Properties to set
                 * @returns {sajari.pipeline.v2.ReplaceRecordResponse} ReplaceRecordResponse instance
                 */
                ReplaceRecordResponse.create = function create(properties) {
                    return new ReplaceRecordResponse(properties);
                };

                /**
                 * Encodes the specified ReplaceRecordResponse message. Does not implicitly {@link sajari.pipeline.v2.ReplaceRecordResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordResponse} message ReplaceRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReplaceRecordResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        $root.sajari.pipeline.v2.Identifier.encode(message.pipeline, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.values != null && message.hasOwnProperty("values"))
                        $root.google.protobuf.Struct.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified ReplaceRecordResponse message, length delimited. Does not implicitly {@link sajari.pipeline.v2.ReplaceRecordResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.IReplaceRecordResponse} message ReplaceRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ReplaceRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ReplaceRecordResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.pipeline.v2.ReplaceRecordResponse} ReplaceRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReplaceRecordResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.pipeline.v2.ReplaceRecordResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pipeline = $root.sajari.pipeline.v2.Identifier.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.values = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ReplaceRecordResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.pipeline.v2.ReplaceRecordResponse} ReplaceRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ReplaceRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ReplaceRecordResponse message.
                 * @function verify
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ReplaceRecordResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pipeline != null && message.hasOwnProperty("pipeline")) {
                        var error = $root.sajari.pipeline.v2.Identifier.verify(message.pipeline);
                        if (error)
                            return "pipeline." + error;
                    }
                    if (message.values != null && message.hasOwnProperty("values")) {
                        var error = $root.google.protobuf.Struct.verify(message.values);
                        if (error)
                            return "values." + error;
                    }
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    return null;
                };

                /**
                 * Creates a ReplaceRecordResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.pipeline.v2.ReplaceRecordResponse} ReplaceRecordResponse
                 */
                ReplaceRecordResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.pipeline.v2.ReplaceRecordResponse)
                        return object;
                    var message = new $root.sajari.pipeline.v2.ReplaceRecordResponse();
                    if (object.pipeline != null) {
                        if (typeof object.pipeline !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordResponse.pipeline: object expected");
                        message.pipeline = $root.sajari.pipeline.v2.Identifier.fromObject(object.pipeline);
                    }
                    if (object.values != null) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordResponse.values: object expected");
                        message.values = $root.google.protobuf.Struct.fromObject(object.values);
                    }
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.pipeline.v2.ReplaceRecordResponse.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a ReplaceRecordResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @static
                 * @param {sajari.pipeline.v2.ReplaceRecordResponse} message ReplaceRecordResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ReplaceRecordResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pipeline = null;
                        object.values = null;
                        object.key = null;
                    }
                    if (message.pipeline != null && message.hasOwnProperty("pipeline"))
                        object.pipeline = $root.sajari.pipeline.v2.Identifier.toObject(message.pipeline, options);
                    if (message.values != null && message.hasOwnProperty("values"))
                        object.values = $root.google.protobuf.Struct.toObject(message.values, options);
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    return object;
                };

                /**
                 * Converts this ReplaceRecordResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.pipeline.v2.ReplaceRecordResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ReplaceRecordResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ReplaceRecordResponse;
            })();

            return v2;
        })();

        return pipeline;
    })();

    sajari.engine = (function() {

        /**
         * Namespace engine.
         * @memberof sajari
         * @namespace
         */
        var engine = {};

        engine.v2 = (function() {

            /**
             * Namespace v2.
             * @memberof sajari.engine
             * @namespace
             */
            var v2 = {};

            v2.QueryResult = (function() {

                /**
                 * Properties of a QueryResult.
                 * @memberof sajari.engine.v2
                 * @interface IQueryResult
                 * @property {Object.<string,sajari.engine.v2.IValue>|null} [values] QueryResult values
                 * @property {number|null} [score] QueryResult score
                 * @property {number|null} [indexScore] QueryResult indexScore
                 */

                /**
                 * Constructs a new QueryResult.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a QueryResult.
                 * @implements IQueryResult
                 * @constructor
                 * @param {sajari.engine.v2.IQueryResult=} [properties] Properties to set
                 */
                function QueryResult(properties) {
                    this.values = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * QueryResult values.
                 * @member {Object.<string,sajari.engine.v2.IValue>} values
                 * @memberof sajari.engine.v2.QueryResult
                 * @instance
                 */
                QueryResult.prototype.values = $util.emptyObject;

                /**
                 * QueryResult score.
                 * @member {number} score
                 * @memberof sajari.engine.v2.QueryResult
                 * @instance
                 */
                QueryResult.prototype.score = 0;

                /**
                 * QueryResult indexScore.
                 * @member {number} indexScore
                 * @memberof sajari.engine.v2.QueryResult
                 * @instance
                 */
                QueryResult.prototype.indexScore = 0;

                /**
                 * Creates a new QueryResult instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {sajari.engine.v2.IQueryResult=} [properties] Properties to set
                 * @returns {sajari.engine.v2.QueryResult} QueryResult instance
                 */
                QueryResult.create = function create(properties) {
                    return new QueryResult(properties);
                };

                /**
                 * Encodes the specified QueryResult message. Does not implicitly {@link sajari.engine.v2.QueryResult.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {sajari.engine.v2.IQueryResult} message QueryResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.hasOwnProperty("values"))
                        for (var keys = Object.keys(message.values), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.engine.v2.Value.encode(message.values[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    if (message.score != null && message.hasOwnProperty("score"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.score);
                    if (message.indexScore != null && message.hasOwnProperty("indexScore"))
                        writer.uint32(/* id 3, wireType 1 =*/25).double(message.indexScore);
                    return writer;
                };

                /**
                 * Encodes the specified QueryResult message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {sajari.engine.v2.IQueryResult} message QueryResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a QueryResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.QueryResult} QueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryResult(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            reader.skip().pos++;
                            if (message.values === $util.emptyObject)
                                message.values = {};
                            key = reader.string();
                            reader.pos++;
                            message.values[key] = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.score = reader.double();
                            break;
                        case 3:
                            message.indexScore = reader.double();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a QueryResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.QueryResult} QueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a QueryResult message.
                 * @function verify
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                QueryResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!$util.isObject(message.values))
                            return "values: object expected";
                        var key = Object.keys(message.values);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.engine.v2.Value.verify(message.values[key[i]]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    if (message.score != null && message.hasOwnProperty("score"))
                        if (typeof message.score !== "number")
                            return "score: number expected";
                    if (message.indexScore != null && message.hasOwnProperty("indexScore"))
                        if (typeof message.indexScore !== "number")
                            return "indexScore: number expected";
                    return null;
                };

                /**
                 * Creates a QueryResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.QueryResult} QueryResult
                 */
                QueryResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.QueryResult)
                        return object;
                    var message = new $root.sajari.engine.v2.QueryResult();
                    if (object.values) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.engine.v2.QueryResult.values: object expected");
                        message.values = {};
                        for (var keys = Object.keys(object.values), i = 0; i < keys.length; ++i) {
                            if (typeof object.values[keys[i]] !== "object")
                                throw TypeError(".sajari.engine.v2.QueryResult.values: object expected");
                            message.values[keys[i]] = $root.sajari.engine.v2.Value.fromObject(object.values[keys[i]]);
                        }
                    }
                    if (object.score != null)
                        message.score = Number(object.score);
                    if (object.indexScore != null)
                        message.indexScore = Number(object.indexScore);
                    return message;
                };

                /**
                 * Creates a plain object from a QueryResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.QueryResult
                 * @static
                 * @param {sajari.engine.v2.QueryResult} message QueryResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                QueryResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.values = {};
                    if (options.defaults) {
                        object.score = 0;
                        object.indexScore = 0;
                    }
                    var keys2;
                    if (message.values && (keys2 = Object.keys(message.values)).length) {
                        object.values = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.values[keys2[j]] = $root.sajari.engine.v2.Value.toObject(message.values[keys2[j]], options);
                    }
                    if (message.score != null && message.hasOwnProperty("score"))
                        object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;
                    if (message.indexScore != null && message.hasOwnProperty("indexScore"))
                        object.indexScore = options.json && !isFinite(message.indexScore) ? String(message.indexScore) : message.indexScore;
                    return object;
                };

                /**
                 * Converts this QueryResult to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.QueryResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                QueryResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return QueryResult;
            })();

            v2.QueryAggregateResult = (function() {

                /**
                 * Properties of a QueryAggregateResult.
                 * @memberof sajari.engine.v2
                 * @interface IQueryAggregateResult
                 * @property {sajari.engine.v2.QueryAggregateResult.IMetric|null} [metric] QueryAggregateResult metric
                 * @property {sajari.engine.v2.QueryAggregateResult.ICount|null} [count] QueryAggregateResult count
                 * @property {sajari.engine.v2.QueryAggregateResult.IBuckets|null} [buckets] QueryAggregateResult buckets
                 * @property {sajari.engine.v2.QueryAggregateResult.IDate|null} [date] QueryAggregateResult date
                 * @property {sajari.engine.v2.QueryAggregateResult.IAnalysis|null} [analysis] QueryAggregateResult analysis
                 */

                /**
                 * Constructs a new QueryAggregateResult.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a QueryAggregateResult.
                 * @implements IQueryAggregateResult
                 * @constructor
                 * @param {sajari.engine.v2.IQueryAggregateResult=} [properties] Properties to set
                 */
                function QueryAggregateResult(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * QueryAggregateResult metric.
                 * @member {sajari.engine.v2.QueryAggregateResult.IMetric|null|undefined} metric
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                QueryAggregateResult.prototype.metric = null;

                /**
                 * QueryAggregateResult count.
                 * @member {sajari.engine.v2.QueryAggregateResult.ICount|null|undefined} count
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                QueryAggregateResult.prototype.count = null;

                /**
                 * QueryAggregateResult buckets.
                 * @member {sajari.engine.v2.QueryAggregateResult.IBuckets|null|undefined} buckets
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                QueryAggregateResult.prototype.buckets = null;

                /**
                 * QueryAggregateResult date.
                 * @member {sajari.engine.v2.QueryAggregateResult.IDate|null|undefined} date
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                QueryAggregateResult.prototype.date = null;

                /**
                 * QueryAggregateResult analysis.
                 * @member {sajari.engine.v2.QueryAggregateResult.IAnalysis|null|undefined} analysis
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                QueryAggregateResult.prototype.analysis = null;

                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;

                /**
                 * QueryAggregateResult aggregateResult.
                 * @member {"metric"|"count"|"buckets"|"date"|"analysis"|undefined} aggregateResult
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 */
                Object.defineProperty(QueryAggregateResult.prototype, "aggregateResult", {
                    get: $util.oneOfGetter($oneOfFields = ["metric", "count", "buckets", "date", "analysis"]),
                    set: $util.oneOfSetter($oneOfFields)
                });

                /**
                 * Creates a new QueryAggregateResult instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {sajari.engine.v2.IQueryAggregateResult=} [properties] Properties to set
                 * @returns {sajari.engine.v2.QueryAggregateResult} QueryAggregateResult instance
                 */
                QueryAggregateResult.create = function create(properties) {
                    return new QueryAggregateResult(properties);
                };

                /**
                 * Encodes the specified QueryAggregateResult message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {sajari.engine.v2.IQueryAggregateResult} message QueryAggregateResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryAggregateResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.metric != null && message.hasOwnProperty("metric"))
                        $root.sajari.engine.v2.QueryAggregateResult.Metric.encode(message.metric, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.count != null && message.hasOwnProperty("count"))
                        $root.sajari.engine.v2.QueryAggregateResult.Count.encode(message.count, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.buckets != null && message.hasOwnProperty("buckets"))
                        $root.sajari.engine.v2.QueryAggregateResult.Buckets.encode(message.buckets, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.date != null && message.hasOwnProperty("date"))
                        $root.sajari.engine.v2.QueryAggregateResult.Date.encode(message.date, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.analysis != null && message.hasOwnProperty("analysis"))
                        $root.sajari.engine.v2.QueryAggregateResult.Analysis.encode(message.analysis, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified QueryAggregateResult message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {sajari.engine.v2.IQueryAggregateResult} message QueryAggregateResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                QueryAggregateResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a QueryAggregateResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.QueryAggregateResult} QueryAggregateResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryAggregateResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.metric = $root.sajari.engine.v2.QueryAggregateResult.Metric.decode(reader, reader.uint32());
                            break;
                        case 2:
                            message.count = $root.sajari.engine.v2.QueryAggregateResult.Count.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.buckets = $root.sajari.engine.v2.QueryAggregateResult.Buckets.decode(reader, reader.uint32());
                            break;
                        case 4:
                            message.date = $root.sajari.engine.v2.QueryAggregateResult.Date.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.analysis = $root.sajari.engine.v2.QueryAggregateResult.Analysis.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a QueryAggregateResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.QueryAggregateResult} QueryAggregateResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                QueryAggregateResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a QueryAggregateResult message.
                 * @function verify
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                QueryAggregateResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.metric != null && message.hasOwnProperty("metric")) {
                        properties.aggregateResult = 1;
                        {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.Metric.verify(message.metric);
                            if (error)
                                return "metric." + error;
                        }
                    }
                    if (message.count != null && message.hasOwnProperty("count")) {
                        if (properties.aggregateResult === 1)
                            return "aggregateResult: multiple values";
                        properties.aggregateResult = 1;
                        {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.Count.verify(message.count);
                            if (error)
                                return "count." + error;
                        }
                    }
                    if (message.buckets != null && message.hasOwnProperty("buckets")) {
                        if (properties.aggregateResult === 1)
                            return "aggregateResult: multiple values";
                        properties.aggregateResult = 1;
                        {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.Buckets.verify(message.buckets);
                            if (error)
                                return "buckets." + error;
                        }
                    }
                    if (message.date != null && message.hasOwnProperty("date")) {
                        if (properties.aggregateResult === 1)
                            return "aggregateResult: multiple values";
                        properties.aggregateResult = 1;
                        {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.Date.verify(message.date);
                            if (error)
                                return "date." + error;
                        }
                    }
                    if (message.analysis != null && message.hasOwnProperty("analysis")) {
                        if (properties.aggregateResult === 1)
                            return "aggregateResult: multiple values";
                        properties.aggregateResult = 1;
                        {
                            var error = $root.sajari.engine.v2.QueryAggregateResult.Analysis.verify(message.analysis);
                            if (error)
                                return "analysis." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a QueryAggregateResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.QueryAggregateResult} QueryAggregateResult
                 */
                QueryAggregateResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.QueryAggregateResult)
                        return object;
                    var message = new $root.sajari.engine.v2.QueryAggregateResult();
                    if (object.metric != null) {
                        if (typeof object.metric !== "object")
                            throw TypeError(".sajari.engine.v2.QueryAggregateResult.metric: object expected");
                        message.metric = $root.sajari.engine.v2.QueryAggregateResult.Metric.fromObject(object.metric);
                    }
                    if (object.count != null) {
                        if (typeof object.count !== "object")
                            throw TypeError(".sajari.engine.v2.QueryAggregateResult.count: object expected");
                        message.count = $root.sajari.engine.v2.QueryAggregateResult.Count.fromObject(object.count);
                    }
                    if (object.buckets != null) {
                        if (typeof object.buckets !== "object")
                            throw TypeError(".sajari.engine.v2.QueryAggregateResult.buckets: object expected");
                        message.buckets = $root.sajari.engine.v2.QueryAggregateResult.Buckets.fromObject(object.buckets);
                    }
                    if (object.date != null) {
                        if (typeof object.date !== "object")
                            throw TypeError(".sajari.engine.v2.QueryAggregateResult.date: object expected");
                        message.date = $root.sajari.engine.v2.QueryAggregateResult.Date.fromObject(object.date);
                    }
                    if (object.analysis != null) {
                        if (typeof object.analysis !== "object")
                            throw TypeError(".sajari.engine.v2.QueryAggregateResult.analysis: object expected");
                        message.analysis = $root.sajari.engine.v2.QueryAggregateResult.Analysis.fromObject(object.analysis);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a QueryAggregateResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @static
                 * @param {sajari.engine.v2.QueryAggregateResult} message QueryAggregateResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                QueryAggregateResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.metric != null && message.hasOwnProperty("metric")) {
                        object.metric = $root.sajari.engine.v2.QueryAggregateResult.Metric.toObject(message.metric, options);
                        if (options.oneofs)
                            object.aggregateResult = "metric";
                    }
                    if (message.count != null && message.hasOwnProperty("count")) {
                        object.count = $root.sajari.engine.v2.QueryAggregateResult.Count.toObject(message.count, options);
                        if (options.oneofs)
                            object.aggregateResult = "count";
                    }
                    if (message.buckets != null && message.hasOwnProperty("buckets")) {
                        object.buckets = $root.sajari.engine.v2.QueryAggregateResult.Buckets.toObject(message.buckets, options);
                        if (options.oneofs)
                            object.aggregateResult = "buckets";
                    }
                    if (message.date != null && message.hasOwnProperty("date")) {
                        object.date = $root.sajari.engine.v2.QueryAggregateResult.Date.toObject(message.date, options);
                        if (options.oneofs)
                            object.aggregateResult = "date";
                    }
                    if (message.analysis != null && message.hasOwnProperty("analysis")) {
                        object.analysis = $root.sajari.engine.v2.QueryAggregateResult.Analysis.toObject(message.analysis, options);
                        if (options.oneofs)
                            object.aggregateResult = "analysis";
                    }
                    return object;
                };

                /**
                 * Converts this QueryAggregateResult to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.QueryAggregateResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                QueryAggregateResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                QueryAggregateResult.Metric = (function() {

                    /**
                     * Properties of a Metric.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @interface IMetric
                     * @property {number|null} [value] Metric value
                     */

                    /**
                     * Constructs a new Metric.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @classdesc Represents a Metric.
                     * @implements IMetric
                     * @constructor
                     * @param {sajari.engine.v2.QueryAggregateResult.IMetric=} [properties] Properties to set
                     */
                    function Metric(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Metric value.
                     * @member {number} value
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @instance
                     */
                    Metric.prototype.value = 0;

                    /**
                     * Creates a new Metric instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IMetric=} [properties] Properties to set
                     * @returns {sajari.engine.v2.QueryAggregateResult.Metric} Metric instance
                     */
                    Metric.create = function create(properties) {
                        return new Metric(properties);
                    };

                    /**
                     * Encodes the specified Metric message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Metric.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IMetric} message Metric message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Metric.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && message.hasOwnProperty("value"))
                            writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                        return writer;
                    };

                    /**
                     * Encodes the specified Metric message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Metric.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IMetric} message Metric message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Metric.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Metric message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.QueryAggregateResult.Metric} Metric
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Metric.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Metric();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.value = reader.double();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Metric message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.QueryAggregateResult.Metric} Metric
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Metric.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Metric message.
                     * @function verify
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Metric.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (typeof message.value !== "number")
                                return "value: number expected";
                        return null;
                    };

                    /**
                     * Creates a Metric message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.QueryAggregateResult.Metric} Metric
                     */
                    Metric.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Metric)
                            return object;
                        var message = new $root.sajari.engine.v2.QueryAggregateResult.Metric();
                        if (object.value != null)
                            message.value = Number(object.value);
                        return message;
                    };

                    /**
                     * Creates a plain object from a Metric message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.Metric} message Metric
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Metric.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.value = 0;
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                        return object;
                    };

                    /**
                     * Converts this Metric to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.QueryAggregateResult.Metric
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Metric.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Metric;
                })();

                QueryAggregateResult.Count = (function() {

                    /**
                     * Properties of a Count.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @interface ICount
                     * @property {Object.<string,number>|null} [counts] Count counts
                     */

                    /**
                     * Constructs a new Count.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @classdesc Represents a Count.
                     * @implements ICount
                     * @constructor
                     * @param {sajari.engine.v2.QueryAggregateResult.ICount=} [properties] Properties to set
                     */
                    function Count(properties) {
                        this.counts = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Count counts.
                     * @member {Object.<string,number>} counts
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @instance
                     */
                    Count.prototype.counts = $util.emptyObject;

                    /**
                     * Creates a new Count instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.ICount=} [properties] Properties to set
                     * @returns {sajari.engine.v2.QueryAggregateResult.Count} Count instance
                     */
                    Count.create = function create(properties) {
                        return new Count(properties);
                    };

                    /**
                     * Encodes the specified Count message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Count.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.ICount} message Count message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Count.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.counts != null && message.hasOwnProperty("counts"))
                            for (var keys = Object.keys(message.counts), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int32(message.counts[keys[i]]).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified Count message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Count.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.ICount} message Count message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Count.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Count message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.QueryAggregateResult.Count} Count
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Count.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Count(), key;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                reader.skip().pos++;
                                if (message.counts === $util.emptyObject)
                                    message.counts = {};
                                key = reader.string();
                                reader.pos++;
                                message.counts[key] = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Count message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.QueryAggregateResult.Count} Count
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Count.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Count message.
                     * @function verify
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Count.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.counts != null && message.hasOwnProperty("counts")) {
                            if (!$util.isObject(message.counts))
                                return "counts: object expected";
                            var key = Object.keys(message.counts);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isInteger(message.counts[key[i]]))
                                    return "counts: integer{k:string} expected";
                        }
                        return null;
                    };

                    /**
                     * Creates a Count message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.QueryAggregateResult.Count} Count
                     */
                    Count.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Count)
                            return object;
                        var message = new $root.sajari.engine.v2.QueryAggregateResult.Count();
                        if (object.counts) {
                            if (typeof object.counts !== "object")
                                throw TypeError(".sajari.engine.v2.QueryAggregateResult.Count.counts: object expected");
                            message.counts = {};
                            for (var keys = Object.keys(object.counts), i = 0; i < keys.length; ++i)
                                message.counts[keys[i]] = object.counts[keys[i]] | 0;
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a Count message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.Count} message Count
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Count.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.counts = {};
                        var keys2;
                        if (message.counts && (keys2 = Object.keys(message.counts)).length) {
                            object.counts = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.counts[keys2[j]] = message.counts[keys2[j]];
                        }
                        return object;
                    };

                    /**
                     * Converts this Count to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.QueryAggregateResult.Count
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Count.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Count;
                })();

                QueryAggregateResult.Buckets = (function() {

                    /**
                     * Properties of a Buckets.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @interface IBuckets
                     * @property {Object.<string,sajari.engine.v2.QueryAggregateResult.Buckets.IBucket>|null} [buckets] Buckets buckets
                     */

                    /**
                     * Constructs a new Buckets.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @classdesc Represents a Buckets.
                     * @implements IBuckets
                     * @constructor
                     * @param {sajari.engine.v2.QueryAggregateResult.IBuckets=} [properties] Properties to set
                     */
                    function Buckets(properties) {
                        this.buckets = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Buckets buckets.
                     * @member {Object.<string,sajari.engine.v2.QueryAggregateResult.Buckets.IBucket>} buckets
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @instance
                     */
                    Buckets.prototype.buckets = $util.emptyObject;

                    /**
                     * Creates a new Buckets instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IBuckets=} [properties] Properties to set
                     * @returns {sajari.engine.v2.QueryAggregateResult.Buckets} Buckets instance
                     */
                    Buckets.create = function create(properties) {
                        return new Buckets(properties);
                    };

                    /**
                     * Encodes the specified Buckets message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Buckets.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IBuckets} message Buckets message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Buckets.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.buckets != null && message.hasOwnProperty("buckets"))
                            for (var keys = Object.keys(message.buckets), i = 0; i < keys.length; ++i) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.encode(message.buckets[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                            }
                        return writer;
                    };

                    /**
                     * Encodes the specified Buckets message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Buckets.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IBuckets} message Buckets message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Buckets.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Buckets message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.QueryAggregateResult.Buckets} Buckets
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Buckets.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Buckets(), key;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                reader.skip().pos++;
                                if (message.buckets === $util.emptyObject)
                                    message.buckets = {};
                                key = reader.string();
                                reader.pos++;
                                message.buckets[key] = $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Buckets message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.QueryAggregateResult.Buckets} Buckets
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Buckets.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Buckets message.
                     * @function verify
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Buckets.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.buckets != null && message.hasOwnProperty("buckets")) {
                            if (!$util.isObject(message.buckets))
                                return "buckets: object expected";
                            var key = Object.keys(message.buckets);
                            for (var i = 0; i < key.length; ++i) {
                                var error = $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.verify(message.buckets[key[i]]);
                                if (error)
                                    return "buckets." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a Buckets message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.QueryAggregateResult.Buckets} Buckets
                     */
                    Buckets.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Buckets)
                            return object;
                        var message = new $root.sajari.engine.v2.QueryAggregateResult.Buckets();
                        if (object.buckets) {
                            if (typeof object.buckets !== "object")
                                throw TypeError(".sajari.engine.v2.QueryAggregateResult.Buckets.buckets: object expected");
                            message.buckets = {};
                            for (var keys = Object.keys(object.buckets), i = 0; i < keys.length; ++i) {
                                if (typeof object.buckets[keys[i]] !== "object")
                                    throw TypeError(".sajari.engine.v2.QueryAggregateResult.Buckets.buckets: object expected");
                                message.buckets[keys[i]] = $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.fromObject(object.buckets[keys[i]]);
                            }
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a Buckets message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.Buckets} message Buckets
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Buckets.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.buckets = {};
                        var keys2;
                        if (message.buckets && (keys2 = Object.keys(message.buckets)).length) {
                            object.buckets = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.buckets[keys2[j]] = $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.toObject(message.buckets[keys2[j]], options);
                        }
                        return object;
                    };

                    /**
                     * Converts this Buckets to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Buckets.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    Buckets.Bucket = (function() {

                        /**
                         * Properties of a Bucket.
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                         * @interface IBucket
                         * @property {string|null} [name] Bucket name
                         * @property {number|null} [count] Bucket count
                         */

                        /**
                         * Constructs a new Bucket.
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets
                         * @classdesc Represents a Bucket.
                         * @implements IBucket
                         * @constructor
                         * @param {sajari.engine.v2.QueryAggregateResult.Buckets.IBucket=} [properties] Properties to set
                         */
                        function Bucket(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * Bucket name.
                         * @member {string} name
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @instance
                         */
                        Bucket.prototype.name = "";

                        /**
                         * Bucket count.
                         * @member {number} count
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @instance
                         */
                        Bucket.prototype.count = 0;

                        /**
                         * Creates a new Bucket instance using the specified properties.
                         * @function create
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {sajari.engine.v2.QueryAggregateResult.Buckets.IBucket=} [properties] Properties to set
                         * @returns {sajari.engine.v2.QueryAggregateResult.Buckets.Bucket} Bucket instance
                         */
                        Bucket.create = function create(properties) {
                            return new Bucket(properties);
                        };

                        /**
                         * Encodes the specified Bucket message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.verify|verify} messages.
                         * @function encode
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {sajari.engine.v2.QueryAggregateResult.Buckets.IBucket} message Bucket message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Bucket.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && message.hasOwnProperty("name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.count != null && message.hasOwnProperty("count"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);
                            return writer;
                        };

                        /**
                         * Encodes the specified Bucket message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Buckets.Bucket.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {sajari.engine.v2.QueryAggregateResult.Buckets.IBucket} message Bucket message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Bucket.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a Bucket message from the specified reader or buffer.
                         * @function decode
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {sajari.engine.v2.QueryAggregateResult.Buckets.Bucket} Bucket
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Bucket.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.count = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a Bucket message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {sajari.engine.v2.QueryAggregateResult.Buckets.Bucket} Bucket
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Bucket.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a Bucket message.
                         * @function verify
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Bucket.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.count != null && message.hasOwnProperty("count"))
                                if (!$util.isInteger(message.count))
                                    return "count: integer expected";
                            return null;
                        };

                        /**
                         * Creates a Bucket message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {sajari.engine.v2.QueryAggregateResult.Buckets.Bucket} Bucket
                         */
                        Bucket.fromObject = function fromObject(object) {
                            if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket)
                                return object;
                            var message = new $root.sajari.engine.v2.QueryAggregateResult.Buckets.Bucket();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.count != null)
                                message.count = object.count | 0;
                            return message;
                        };

                        /**
                         * Creates a plain object from a Bucket message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @static
                         * @param {sajari.engine.v2.QueryAggregateResult.Buckets.Bucket} message Bucket
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Bucket.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.count = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.count != null && message.hasOwnProperty("count"))
                                object.count = message.count;
                            return object;
                        };

                        /**
                         * Converts this Bucket to JSON.
                         * @function toJSON
                         * @memberof sajari.engine.v2.QueryAggregateResult.Buckets.Bucket
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Bucket.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        return Bucket;
                    })();

                    return Buckets;
                })();

                QueryAggregateResult.Date = (function() {

                    /**
                     * Properties of a Date.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @interface IDate
                     * @property {Object.<string,number>|null} [dates] Date dates
                     */

                    /**
                     * Constructs a new Date.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @classdesc Represents a Date.
                     * @implements IDate
                     * @constructor
                     * @param {sajari.engine.v2.QueryAggregateResult.IDate=} [properties] Properties to set
                     */
                    function Date(properties) {
                        this.dates = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Date dates.
                     * @member {Object.<string,number>} dates
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @instance
                     */
                    Date.prototype.dates = $util.emptyObject;

                    /**
                     * Creates a new Date instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IDate=} [properties] Properties to set
                     * @returns {sajari.engine.v2.QueryAggregateResult.Date} Date instance
                     */
                    Date.create = function create(properties) {
                        return new Date(properties);
                    };

                    /**
                     * Encodes the specified Date message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Date.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IDate} message Date message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Date.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.dates != null && message.hasOwnProperty("dates"))
                            for (var keys = Object.keys(message.dates), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int32(message.dates[keys[i]]).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified Date message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Date.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IDate} message Date message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Date.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Date message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.QueryAggregateResult.Date} Date
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Date.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Date(), key;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                reader.skip().pos++;
                                if (message.dates === $util.emptyObject)
                                    message.dates = {};
                                key = reader.string();
                                reader.pos++;
                                message.dates[key] = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Date message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.QueryAggregateResult.Date} Date
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Date.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Date message.
                     * @function verify
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Date.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.dates != null && message.hasOwnProperty("dates")) {
                            if (!$util.isObject(message.dates))
                                return "dates: object expected";
                            var key = Object.keys(message.dates);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isInteger(message.dates[key[i]]))
                                    return "dates: integer{k:string} expected";
                        }
                        return null;
                    };

                    /**
                     * Creates a Date message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.QueryAggregateResult.Date} Date
                     */
                    Date.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Date)
                            return object;
                        var message = new $root.sajari.engine.v2.QueryAggregateResult.Date();
                        if (object.dates) {
                            if (typeof object.dates !== "object")
                                throw TypeError(".sajari.engine.v2.QueryAggregateResult.Date.dates: object expected");
                            message.dates = {};
                            for (var keys = Object.keys(object.dates), i = 0; i < keys.length; ++i)
                                message.dates[keys[i]] = object.dates[keys[i]] | 0;
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a Date message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.Date} message Date
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Date.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.dates = {};
                        var keys2;
                        if (message.dates && (keys2 = Object.keys(message.dates)).length) {
                            object.dates = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.dates[keys2[j]] = message.dates[keys2[j]];
                        }
                        return object;
                    };

                    /**
                     * Converts this Date to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.QueryAggregateResult.Date
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Date.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Date;
                })();

                QueryAggregateResult.Analysis = (function() {

                    /**
                     * Properties of an Analysis.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @interface IAnalysis
                     * @property {number|null} [coverage] Analysis coverage
                     * @property {number|null} [cardinality] Analysis cardinality
                     * @property {number|null} [minLen] Analysis minLen
                     * @property {number|null} [maxLen] Analysis maxLen
                     * @property {number|null} [avgLen] Analysis avgLen
                     */

                    /**
                     * Constructs a new Analysis.
                     * @memberof sajari.engine.v2.QueryAggregateResult
                     * @classdesc Represents an Analysis.
                     * @implements IAnalysis
                     * @constructor
                     * @param {sajari.engine.v2.QueryAggregateResult.IAnalysis=} [properties] Properties to set
                     */
                    function Analysis(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Analysis coverage.
                     * @member {number} coverage
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Analysis.prototype.coverage = 0;

                    /**
                     * Analysis cardinality.
                     * @member {number} cardinality
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Analysis.prototype.cardinality = 0;

                    /**
                     * Analysis minLen.
                     * @member {number} minLen
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Analysis.prototype.minLen = 0;

                    /**
                     * Analysis maxLen.
                     * @member {number} maxLen
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Analysis.prototype.maxLen = 0;

                    /**
                     * Analysis avgLen.
                     * @member {number} avgLen
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Analysis.prototype.avgLen = 0;

                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;

                    /**
                     * Analysis value.
                     * @member {"coverage"|"cardinality"|"minLen"|"maxLen"|"avgLen"|undefined} value
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     */
                    Object.defineProperty(Analysis.prototype, "value", {
                        get: $util.oneOfGetter($oneOfFields = ["coverage", "cardinality", "minLen", "maxLen", "avgLen"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * Creates a new Analysis instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IAnalysis=} [properties] Properties to set
                     * @returns {sajari.engine.v2.QueryAggregateResult.Analysis} Analysis instance
                     */
                    Analysis.create = function create(properties) {
                        return new Analysis(properties);
                    };

                    /**
                     * Encodes the specified Analysis message. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Analysis.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IAnalysis} message Analysis message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Analysis.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.coverage != null && message.hasOwnProperty("coverage"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.coverage);
                        if (message.cardinality != null && message.hasOwnProperty("cardinality"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cardinality);
                        if (message.minLen != null && message.hasOwnProperty("minLen"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.minLen);
                        if (message.maxLen != null && message.hasOwnProperty("maxLen"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.maxLen);
                        if (message.avgLen != null && message.hasOwnProperty("avgLen"))
                            writer.uint32(/* id 5, wireType 5 =*/45).float(message.avgLen);
                        return writer;
                    };

                    /**
                     * Encodes the specified Analysis message, length delimited. Does not implicitly {@link sajari.engine.v2.QueryAggregateResult.Analysis.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.IAnalysis} message Analysis message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Analysis.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes an Analysis message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.QueryAggregateResult.Analysis} Analysis
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Analysis.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.QueryAggregateResult.Analysis();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.coverage = reader.int32();
                                break;
                            case 2:
                                message.cardinality = reader.int32();
                                break;
                            case 3:
                                message.minLen = reader.int32();
                                break;
                            case 4:
                                message.maxLen = reader.int32();
                                break;
                            case 5:
                                message.avgLen = reader.float();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes an Analysis message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.QueryAggregateResult.Analysis} Analysis
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Analysis.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies an Analysis message.
                     * @function verify
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Analysis.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.coverage != null && message.hasOwnProperty("coverage")) {
                            properties.value = 1;
                            if (!$util.isInteger(message.coverage))
                                return "coverage: integer expected";
                        }
                        if (message.cardinality != null && message.hasOwnProperty("cardinality")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isInteger(message.cardinality))
                                return "cardinality: integer expected";
                        }
                        if (message.minLen != null && message.hasOwnProperty("minLen")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isInteger(message.minLen))
                                return "minLen: integer expected";
                        }
                        if (message.maxLen != null && message.hasOwnProperty("maxLen")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (!$util.isInteger(message.maxLen))
                                return "maxLen: integer expected";
                        }
                        if (message.avgLen != null && message.hasOwnProperty("avgLen")) {
                            if (properties.value === 1)
                                return "value: multiple values";
                            properties.value = 1;
                            if (typeof message.avgLen !== "number")
                                return "avgLen: number expected";
                        }
                        return null;
                    };

                    /**
                     * Creates an Analysis message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.QueryAggregateResult.Analysis} Analysis
                     */
                    Analysis.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.QueryAggregateResult.Analysis)
                            return object;
                        var message = new $root.sajari.engine.v2.QueryAggregateResult.Analysis();
                        if (object.coverage != null)
                            message.coverage = object.coverage | 0;
                        if (object.cardinality != null)
                            message.cardinality = object.cardinality | 0;
                        if (object.minLen != null)
                            message.minLen = object.minLen | 0;
                        if (object.maxLen != null)
                            message.maxLen = object.maxLen | 0;
                        if (object.avgLen != null)
                            message.avgLen = Number(object.avgLen);
                        return message;
                    };

                    /**
                     * Creates a plain object from an Analysis message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @static
                     * @param {sajari.engine.v2.QueryAggregateResult.Analysis} message Analysis
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Analysis.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.coverage != null && message.hasOwnProperty("coverage")) {
                            object.coverage = message.coverage;
                            if (options.oneofs)
                                object.value = "coverage";
                        }
                        if (message.cardinality != null && message.hasOwnProperty("cardinality")) {
                            object.cardinality = message.cardinality;
                            if (options.oneofs)
                                object.value = "cardinality";
                        }
                        if (message.minLen != null && message.hasOwnProperty("minLen")) {
                            object.minLen = message.minLen;
                            if (options.oneofs)
                                object.value = "minLen";
                        }
                        if (message.maxLen != null && message.hasOwnProperty("maxLen")) {
                            object.maxLen = message.maxLen;
                            if (options.oneofs)
                                object.value = "maxLen";
                        }
                        if (message.avgLen != null && message.hasOwnProperty("avgLen")) {
                            object.avgLen = options.json && !isFinite(message.avgLen) ? String(message.avgLen) : message.avgLen;
                            if (options.oneofs)
                                object.value = "avgLen";
                        }
                        return object;
                    };

                    /**
                     * Converts this Analysis to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.QueryAggregateResult.Analysis
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Analysis.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Analysis;
                })();

                return QueryAggregateResult;
            })();

            v2.Store = (function() {

                /**
                 * Constructs a new Store service.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Store
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Store(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Store.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Store;

                /**
                 * Creates new Store service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.engine.v2.Store
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Store} RPC service. Useful where requests and/or responses are streamed.
                 */
                Store.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.engine.v2.Store#getRecord}.
                 * @memberof sajari.engine.v2.Store
                 * @typedef GetRecordCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.GetRecordResponse} [response] GetRecordResponse
                 */

                /**
                 * Calls GetRecord.
                 * @function getRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IGetRecordRequest} request GetRecordRequest message or plain object
                 * @param {sajari.engine.v2.Store.GetRecordCallback} callback Node-style callback called with the error, if any, and GetRecordResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Store.prototype.getRecord = function getRecord(request, callback) {
                    return this.rpcCall(getRecord, $root.sajari.engine.v2.GetRecordRequest, $root.sajari.engine.v2.GetRecordResponse, request, callback);
                }, "name", { value: "GetRecord" });

                /**
                 * Calls GetRecord.
                 * @function getRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IGetRecordRequest} request GetRecordRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.GetRecordResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.engine.v2.Store#deleteRecord}.
                 * @memberof sajari.engine.v2.Store
                 * @typedef DeleteRecordCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.DeleteRecordResponse} [response] DeleteRecordResponse
                 */

                /**
                 * Calls DeleteRecord.
                 * @function deleteRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IDeleteRecordRequest} request DeleteRecordRequest message or plain object
                 * @param {sajari.engine.v2.Store.DeleteRecordCallback} callback Node-style callback called with the error, if any, and DeleteRecordResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Store.prototype.deleteRecord = function deleteRecord(request, callback) {
                    return this.rpcCall(deleteRecord, $root.sajari.engine.v2.DeleteRecordRequest, $root.sajari.engine.v2.DeleteRecordResponse, request, callback);
                }, "name", { value: "DeleteRecord" });

                /**
                 * Calls DeleteRecord.
                 * @function deleteRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IDeleteRecordRequest} request DeleteRecordRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.DeleteRecordResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.engine.v2.Store#mutateRecord}.
                 * @memberof sajari.engine.v2.Store
                 * @typedef MutateRecordCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.MutateRecordResponse} [response] MutateRecordResponse
                 */

                /**
                 * Calls MutateRecord.
                 * @function mutateRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IMutateRecordRequest} request MutateRecordRequest message or plain object
                 * @param {sajari.engine.v2.Store.MutateRecordCallback} callback Node-style callback called with the error, if any, and MutateRecordResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Store.prototype.mutateRecord = function mutateRecord(request, callback) {
                    return this.rpcCall(mutateRecord, $root.sajari.engine.v2.MutateRecordRequest, $root.sajari.engine.v2.MutateRecordResponse, request, callback);
                }, "name", { value: "MutateRecord" });

                /**
                 * Calls MutateRecord.
                 * @function mutateRecord
                 * @memberof sajari.engine.v2.Store
                 * @instance
                 * @param {sajari.engine.v2.IMutateRecordRequest} request MutateRecordRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.MutateRecordResponse>} Promise
                 * @variation 2
                 */

                return Store;
            })();

            v2.Value = (function() {

                /**
                 * Properties of a Value.
                 * @memberof sajari.engine.v2
                 * @interface IValue
                 * @property {boolean|null} ["null"] Value null
                 * @property {string|null} [single] Value single
                 * @property {sajari.engine.v2.Value.IRepeated|null} [repeated] Value repeated
                 */

                /**
                 * Constructs a new Value.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Value.
                 * @implements IValue
                 * @constructor
                 * @param {sajari.engine.v2.IValue=} [properties] Properties to set
                 */
                function Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Value null.
                 * @member {boolean} null
                 * @memberof sajari.engine.v2.Value
                 * @instance
                 */
                Value.prototype["null"] = false;

                /**
                 * Value single.
                 * @member {string} single
                 * @memberof sajari.engine.v2.Value
                 * @instance
                 */
                Value.prototype.single = "";

                /**
                 * Value repeated.
                 * @member {sajari.engine.v2.Value.IRepeated|null|undefined} repeated
                 * @memberof sajari.engine.v2.Value
                 * @instance
                 */
                Value.prototype.repeated = null;

                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;

                /**
                 * Value value.
                 * @member {"null"|"single"|"repeated"|undefined} value
                 * @memberof sajari.engine.v2.Value
                 * @instance
                 */
                Object.defineProperty(Value.prototype, "value", {
                    get: $util.oneOfGetter($oneOfFields = ["null", "single", "repeated"]),
                    set: $util.oneOfSetter($oneOfFields)
                });

                /**
                 * Creates a new Value instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {sajari.engine.v2.IValue=} [properties] Properties to set
                 * @returns {sajari.engine.v2.Value} Value instance
                 */
                Value.create = function create(properties) {
                    return new Value(properties);
                };

                /**
                 * Encodes the specified Value message. Does not implicitly {@link sajari.engine.v2.Value.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {sajari.engine.v2.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message["null"] != null && message.hasOwnProperty("null"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message["null"]);
                    if (message.single != null && message.hasOwnProperty("single"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.single);
                    if (message.repeated != null && message.hasOwnProperty("repeated"))
                        $root.sajari.engine.v2.Value.Repeated.encode(message.repeated, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Value message, length delimited. Does not implicitly {@link sajari.engine.v2.Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {sajari.engine.v2.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message["null"] = reader.bool();
                            break;
                        case 2:
                            message.single = reader.string();
                            break;
                        case 3:
                            message.repeated = $root.sajari.engine.v2.Value.Repeated.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Value message.
                 * @function verify
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message["null"] != null && message.hasOwnProperty("null")) {
                        properties.value = 1;
                        if (typeof message["null"] !== "boolean")
                            return "null: boolean expected";
                    }
                    if (message.single != null && message.hasOwnProperty("single")) {
                        if (properties.value === 1)
                            return "value: multiple values";
                        properties.value = 1;
                        if (!$util.isString(message.single))
                            return "single: string expected";
                    }
                    if (message.repeated != null && message.hasOwnProperty("repeated")) {
                        if (properties.value === 1)
                            return "value: multiple values";
                        properties.value = 1;
                        {
                            var error = $root.sajari.engine.v2.Value.Repeated.verify(message.repeated);
                            if (error)
                                return "repeated." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.Value} Value
                 */
                Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.Value)
                        return object;
                    var message = new $root.sajari.engine.v2.Value();
                    if (object["null"] != null)
                        message["null"] = Boolean(object["null"]);
                    if (object.single != null)
                        message.single = String(object.single);
                    if (object.repeated != null) {
                        if (typeof object.repeated !== "object")
                            throw TypeError(".sajari.engine.v2.Value.repeated: object expected");
                        message.repeated = $root.sajari.engine.v2.Value.Repeated.fromObject(object.repeated);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.Value
                 * @static
                 * @param {sajari.engine.v2.Value} message Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message["null"] != null && message.hasOwnProperty("null")) {
                        object["null"] = message["null"];
                        if (options.oneofs)
                            object.value = "null";
                    }
                    if (message.single != null && message.hasOwnProperty("single")) {
                        object.single = message.single;
                        if (options.oneofs)
                            object.value = "single";
                    }
                    if (message.repeated != null && message.hasOwnProperty("repeated")) {
                        object.repeated = $root.sajari.engine.v2.Value.Repeated.toObject(message.repeated, options);
                        if (options.oneofs)
                            object.value = "repeated";
                    }
                    return object;
                };

                /**
                 * Converts this Value to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                Value.Repeated = (function() {

                    /**
                     * Properties of a Repeated.
                     * @memberof sajari.engine.v2.Value
                     * @interface IRepeated
                     * @property {Array.<string>|null} [values] Repeated values
                     */

                    /**
                     * Constructs a new Repeated.
                     * @memberof sajari.engine.v2.Value
                     * @classdesc Represents a Repeated.
                     * @implements IRepeated
                     * @constructor
                     * @param {sajari.engine.v2.Value.IRepeated=} [properties] Properties to set
                     */
                    function Repeated(properties) {
                        this.values = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Repeated values.
                     * @member {Array.<string>} values
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @instance
                     */
                    Repeated.prototype.values = $util.emptyArray;

                    /**
                     * Creates a new Repeated instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {sajari.engine.v2.Value.IRepeated=} [properties] Properties to set
                     * @returns {sajari.engine.v2.Value.Repeated} Repeated instance
                     */
                    Repeated.create = function create(properties) {
                        return new Repeated(properties);
                    };

                    /**
                     * Encodes the specified Repeated message. Does not implicitly {@link sajari.engine.v2.Value.Repeated.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {sajari.engine.v2.Value.IRepeated} message Repeated message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Repeated.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.values != null && message.values.length)
                            for (var i = 0; i < message.values.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                        return writer;
                    };

                    /**
                     * Encodes the specified Repeated message, length delimited. Does not implicitly {@link sajari.engine.v2.Value.Repeated.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {sajari.engine.v2.Value.IRepeated} message Repeated message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Repeated.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Repeated message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.Value.Repeated} Repeated
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Repeated.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.Value.Repeated();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.values && message.values.length))
                                    message.values = [];
                                message.values.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Repeated message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.Value.Repeated} Repeated
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Repeated.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Repeated message.
                     * @function verify
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Repeated.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.values != null && message.hasOwnProperty("values")) {
                            if (!Array.isArray(message.values))
                                return "values: array expected";
                            for (var i = 0; i < message.values.length; ++i)
                                if (!$util.isString(message.values[i]))
                                    return "values: string[] expected";
                        }
                        return null;
                    };

                    /**
                     * Creates a Repeated message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.Value.Repeated} Repeated
                     */
                    Repeated.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.Value.Repeated)
                            return object;
                        var message = new $root.sajari.engine.v2.Value.Repeated();
                        if (object.values) {
                            if (!Array.isArray(object.values))
                                throw TypeError(".sajari.engine.v2.Value.Repeated.values: array expected");
                            message.values = [];
                            for (var i = 0; i < object.values.length; ++i)
                                message.values[i] = String(object.values[i]);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a Repeated message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @static
                     * @param {sajari.engine.v2.Value.Repeated} message Repeated
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Repeated.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.values = [];
                        if (message.values && message.values.length) {
                            object.values = [];
                            for (var j = 0; j < message.values.length; ++j)
                                object.values[j] = message.values[j];
                        }
                        return object;
                    };

                    /**
                     * Converts this Repeated to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.Value.Repeated
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Repeated.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Repeated;
                })();

                return Value;
            })();

            v2.Key = (function() {

                /**
                 * Properties of a Key.
                 * @memberof sajari.engine.v2
                 * @interface IKey
                 * @property {string|null} [field] Key field
                 * @property {sajari.engine.v2.IValue|null} [value] Key value
                 */

                /**
                 * Constructs a new Key.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Key.
                 * @implements IKey
                 * @constructor
                 * @param {sajari.engine.v2.IKey=} [properties] Properties to set
                 */
                function Key(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Key field.
                 * @member {string} field
                 * @memberof sajari.engine.v2.Key
                 * @instance
                 */
                Key.prototype.field = "";

                /**
                 * Key value.
                 * @member {sajari.engine.v2.IValue|null|undefined} value
                 * @memberof sajari.engine.v2.Key
                 * @instance
                 */
                Key.prototype.value = null;

                /**
                 * Creates a new Key instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {sajari.engine.v2.IKey=} [properties] Properties to set
                 * @returns {sajari.engine.v2.Key} Key instance
                 */
                Key.create = function create(properties) {
                    return new Key(properties);
                };

                /**
                 * Encodes the specified Key message. Does not implicitly {@link sajari.engine.v2.Key.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {sajari.engine.v2.IKey} message Key message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Key.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.field != null && message.hasOwnProperty("field"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.field);
                    if (message.value != null && message.hasOwnProperty("value"))
                        $root.sajari.engine.v2.Value.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Key message, length delimited. Does not implicitly {@link sajari.engine.v2.Key.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {sajari.engine.v2.IKey} message Key message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Key.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Key message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.Key} Key
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Key.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.Key();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.field = reader.string();
                            break;
                        case 2:
                            message.value = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Key message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.Key} Key
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Key.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Key message.
                 * @function verify
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Key.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.field != null && message.hasOwnProperty("field"))
                        if (!$util.isString(message.field))
                            return "field: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        var error = $root.sajari.engine.v2.Value.verify(message.value);
                        if (error)
                            return "value." + error;
                    }
                    return null;
                };

                /**
                 * Creates a Key message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.Key} Key
                 */
                Key.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.Key)
                        return object;
                    var message = new $root.sajari.engine.v2.Key();
                    if (object.field != null)
                        message.field = String(object.field);
                    if (object.value != null) {
                        if (typeof object.value !== "object")
                            throw TypeError(".sajari.engine.v2.Key.value: object expected");
                        message.value = $root.sajari.engine.v2.Value.fromObject(object.value);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Key message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.Key
                 * @static
                 * @param {sajari.engine.v2.Key} message Key
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Key.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.field = "";
                        object.value = null;
                    }
                    if (message.field != null && message.hasOwnProperty("field"))
                        object.field = message.field;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = $root.sajari.engine.v2.Value.toObject(message.value, options);
                    return object;
                };

                /**
                 * Converts this Key to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.Key
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Key.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Key;
            })();

            v2.Record = (function() {

                /**
                 * Properties of a Record.
                 * @memberof sajari.engine.v2
                 * @interface IRecord
                 * @property {Object.<string,sajari.engine.v2.IValue>|null} [values] Record values
                 */

                /**
                 * Constructs a new Record.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Record.
                 * @implements IRecord
                 * @constructor
                 * @param {sajari.engine.v2.IRecord=} [properties] Properties to set
                 */
                function Record(properties) {
                    this.values = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Record values.
                 * @member {Object.<string,sajari.engine.v2.IValue>} values
                 * @memberof sajari.engine.v2.Record
                 * @instance
                 */
                Record.prototype.values = $util.emptyObject;

                /**
                 * Creates a new Record instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {sajari.engine.v2.IRecord=} [properties] Properties to set
                 * @returns {sajari.engine.v2.Record} Record instance
                 */
                Record.create = function create(properties) {
                    return new Record(properties);
                };

                /**
                 * Encodes the specified Record message. Does not implicitly {@link sajari.engine.v2.Record.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {sajari.engine.v2.IRecord} message Record message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Record.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.hasOwnProperty("values"))
                        for (var keys = Object.keys(message.values), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.sajari.engine.v2.Value.encode(message.values[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };

                /**
                 * Encodes the specified Record message, length delimited. Does not implicitly {@link sajari.engine.v2.Record.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {sajari.engine.v2.IRecord} message Record message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Record.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Record message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.Record} Record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Record.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.Record(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            reader.skip().pos++;
                            if (message.values === $util.emptyObject)
                                message.values = {};
                            key = reader.string();
                            reader.pos++;
                            message.values[key] = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Record message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.Record} Record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Record.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Record message.
                 * @function verify
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Record.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!$util.isObject(message.values))
                            return "values: object expected";
                        var key = Object.keys(message.values);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.sajari.engine.v2.Value.verify(message.values[key[i]]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Record message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.Record} Record
                 */
                Record.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.Record)
                        return object;
                    var message = new $root.sajari.engine.v2.Record();
                    if (object.values) {
                        if (typeof object.values !== "object")
                            throw TypeError(".sajari.engine.v2.Record.values: object expected");
                        message.values = {};
                        for (var keys = Object.keys(object.values), i = 0; i < keys.length; ++i) {
                            if (typeof object.values[keys[i]] !== "object")
                                throw TypeError(".sajari.engine.v2.Record.values: object expected");
                            message.values[keys[i]] = $root.sajari.engine.v2.Value.fromObject(object.values[keys[i]]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Record message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.Record
                 * @static
                 * @param {sajari.engine.v2.Record} message Record
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Record.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.values = {};
                    var keys2;
                    if (message.values && (keys2 = Object.keys(message.values)).length) {
                        object.values = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.values[keys2[j]] = $root.sajari.engine.v2.Value.toObject(message.values[keys2[j]], options);
                    }
                    return object;
                };

                /**
                 * Converts this Record to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.Record
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Record.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return Record;
            })();

            v2.GetRecordRequest = (function() {

                /**
                 * Properties of a GetRecordRequest.
                 * @memberof sajari.engine.v2
                 * @interface IGetRecordRequest
                 * @property {sajari.engine.v2.IKey|null} [key] GetRecordRequest key
                 */

                /**
                 * Constructs a new GetRecordRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a GetRecordRequest.
                 * @implements IGetRecordRequest
                 * @constructor
                 * @param {sajari.engine.v2.IGetRecordRequest=} [properties] Properties to set
                 */
                function GetRecordRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetRecordRequest key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @instance
                 */
                GetRecordRequest.prototype.key = null;

                /**
                 * Creates a new GetRecordRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IGetRecordRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.GetRecordRequest} GetRecordRequest instance
                 */
                GetRecordRequest.create = function create(properties) {
                    return new GetRecordRequest(properties);
                };

                /**
                 * Encodes the specified GetRecordRequest message. Does not implicitly {@link sajari.engine.v2.GetRecordRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IGetRecordRequest} message GetRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetRecordRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetRecordRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.GetRecordRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IGetRecordRequest} message GetRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetRecordRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.GetRecordRequest} GetRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetRecordRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.GetRecordRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetRecordRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.GetRecordRequest} GetRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetRecordRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetRecordRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetRecordRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.GetRecordRequest} GetRecordRequest
                 */
                GetRecordRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.GetRecordRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.GetRecordRequest();
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.engine.v2.GetRecordRequest.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetRecordRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @static
                 * @param {sajari.engine.v2.GetRecordRequest} message GetRecordRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetRecordRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.key = null;
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    return object;
                };

                /**
                 * Converts this GetRecordRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.GetRecordRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetRecordRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetRecordRequest;
            })();

            v2.GetRecordResponse = (function() {

                /**
                 * Properties of a GetRecordResponse.
                 * @memberof sajari.engine.v2
                 * @interface IGetRecordResponse
                 * @property {sajari.engine.v2.IRecord|null} [record] GetRecordResponse record
                 */

                /**
                 * Constructs a new GetRecordResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a GetRecordResponse.
                 * @implements IGetRecordResponse
                 * @constructor
                 * @param {sajari.engine.v2.IGetRecordResponse=} [properties] Properties to set
                 */
                function GetRecordResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GetRecordResponse record.
                 * @member {sajari.engine.v2.IRecord|null|undefined} record
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @instance
                 */
                GetRecordResponse.prototype.record = null;

                /**
                 * Creates a new GetRecordResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IGetRecordResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.GetRecordResponse} GetRecordResponse instance
                 */
                GetRecordResponse.create = function create(properties) {
                    return new GetRecordResponse(properties);
                };

                /**
                 * Encodes the specified GetRecordResponse message. Does not implicitly {@link sajari.engine.v2.GetRecordResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IGetRecordResponse} message GetRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetRecordResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.record != null && message.hasOwnProperty("record"))
                        $root.sajari.engine.v2.Record.encode(message.record, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GetRecordResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.GetRecordResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IGetRecordResponse} message GetRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GetRecordResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.GetRecordResponse} GetRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetRecordResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.GetRecordResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.record = $root.sajari.engine.v2.Record.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a GetRecordResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.GetRecordResponse} GetRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GetRecordResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetRecordResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.record != null && message.hasOwnProperty("record")) {
                        var error = $root.sajari.engine.v2.Record.verify(message.record);
                        if (error)
                            return "record." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GetRecordResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.GetRecordResponse} GetRecordResponse
                 */
                GetRecordResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.GetRecordResponse)
                        return object;
                    var message = new $root.sajari.engine.v2.GetRecordResponse();
                    if (object.record != null) {
                        if (typeof object.record !== "object")
                            throw TypeError(".sajari.engine.v2.GetRecordResponse.record: object expected");
                        message.record = $root.sajari.engine.v2.Record.fromObject(object.record);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GetRecordResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @static
                 * @param {sajari.engine.v2.GetRecordResponse} message GetRecordResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetRecordResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.record = null;
                    if (message.record != null && message.hasOwnProperty("record"))
                        object.record = $root.sajari.engine.v2.Record.toObject(message.record, options);
                    return object;
                };

                /**
                 * Converts this GetRecordResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.GetRecordResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetRecordResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return GetRecordResponse;
            })();

            v2.DeleteRecordRequest = (function() {

                /**
                 * Properties of a DeleteRecordRequest.
                 * @memberof sajari.engine.v2
                 * @interface IDeleteRecordRequest
                 * @property {sajari.engine.v2.IKey|null} [key] DeleteRecordRequest key
                 */

                /**
                 * Constructs a new DeleteRecordRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a DeleteRecordRequest.
                 * @implements IDeleteRecordRequest
                 * @constructor
                 * @param {sajari.engine.v2.IDeleteRecordRequest=} [properties] Properties to set
                 */
                function DeleteRecordRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * DeleteRecordRequest key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @instance
                 */
                DeleteRecordRequest.prototype.key = null;

                /**
                 * Creates a new DeleteRecordRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.DeleteRecordRequest} DeleteRecordRequest instance
                 */
                DeleteRecordRequest.create = function create(properties) {
                    return new DeleteRecordRequest(properties);
                };

                /**
                 * Encodes the specified DeleteRecordRequest message. Does not implicitly {@link sajari.engine.v2.DeleteRecordRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordRequest} message DeleteRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteRecordRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified DeleteRecordRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.DeleteRecordRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordRequest} message DeleteRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DeleteRecordRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.DeleteRecordRequest} DeleteRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteRecordRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.DeleteRecordRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DeleteRecordRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.DeleteRecordRequest} DeleteRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DeleteRecordRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteRecordRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    return null;
                };

                /**
                 * Creates a DeleteRecordRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.DeleteRecordRequest} DeleteRecordRequest
                 */
                DeleteRecordRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.DeleteRecordRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.DeleteRecordRequest();
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.engine.v2.DeleteRecordRequest.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a DeleteRecordRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @static
                 * @param {sajari.engine.v2.DeleteRecordRequest} message DeleteRecordRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteRecordRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.key = null;
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    return object;
                };

                /**
                 * Converts this DeleteRecordRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.DeleteRecordRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteRecordRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DeleteRecordRequest;
            })();

            v2.DeleteRecordResponse = (function() {

                /**
                 * Properties of a DeleteRecordResponse.
                 * @memberof sajari.engine.v2
                 * @interface IDeleteRecordResponse
                 */

                /**
                 * Constructs a new DeleteRecordResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a DeleteRecordResponse.
                 * @implements IDeleteRecordResponse
                 * @constructor
                 * @param {sajari.engine.v2.IDeleteRecordResponse=} [properties] Properties to set
                 */
                function DeleteRecordResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new DeleteRecordResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.DeleteRecordResponse} DeleteRecordResponse instance
                 */
                DeleteRecordResponse.create = function create(properties) {
                    return new DeleteRecordResponse(properties);
                };

                /**
                 * Encodes the specified DeleteRecordResponse message. Does not implicitly {@link sajari.engine.v2.DeleteRecordResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordResponse} message DeleteRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteRecordResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified DeleteRecordResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.DeleteRecordResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IDeleteRecordResponse} message DeleteRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DeleteRecordResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.DeleteRecordResponse} DeleteRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteRecordResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.DeleteRecordResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DeleteRecordResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.DeleteRecordResponse} DeleteRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DeleteRecordResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteRecordResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a DeleteRecordResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.DeleteRecordResponse} DeleteRecordResponse
                 */
                DeleteRecordResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.DeleteRecordResponse)
                        return object;
                    return new $root.sajari.engine.v2.DeleteRecordResponse();
                };

                /**
                 * Creates a plain object from a DeleteRecordResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @static
                 * @param {sajari.engine.v2.DeleteRecordResponse} message DeleteRecordResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteRecordResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this DeleteRecordResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.DeleteRecordResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteRecordResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return DeleteRecordResponse;
            })();

            v2.MutateRecordRequest = (function() {

                /**
                 * Properties of a MutateRecordRequest.
                 * @memberof sajari.engine.v2
                 * @interface IMutateRecordRequest
                 * @property {sajari.engine.v2.IKey|null} [key] MutateRecordRequest key
                 * @property {Array.<sajari.engine.v2.MutateRecordRequest.IFieldMutation>|null} [fieldMutations] MutateRecordRequest fieldMutations
                 */

                /**
                 * Constructs a new MutateRecordRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a MutateRecordRequest.
                 * @implements IMutateRecordRequest
                 * @constructor
                 * @param {sajari.engine.v2.IMutateRecordRequest=} [properties] Properties to set
                 */
                function MutateRecordRequest(properties) {
                    this.fieldMutations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * MutateRecordRequest key.
                 * @member {sajari.engine.v2.IKey|null|undefined} key
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @instance
                 */
                MutateRecordRequest.prototype.key = null;

                /**
                 * MutateRecordRequest fieldMutations.
                 * @member {Array.<sajari.engine.v2.MutateRecordRequest.IFieldMutation>} fieldMutations
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @instance
                 */
                MutateRecordRequest.prototype.fieldMutations = $util.emptyArray;

                /**
                 * Creates a new MutateRecordRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.MutateRecordRequest} MutateRecordRequest instance
                 */
                MutateRecordRequest.create = function create(properties) {
                    return new MutateRecordRequest(properties);
                };

                /**
                 * Encodes the specified MutateRecordRequest message. Does not implicitly {@link sajari.engine.v2.MutateRecordRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordRequest} message MutateRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateRecordRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.key != null && message.hasOwnProperty("key"))
                        $root.sajari.engine.v2.Key.encode(message.key, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fieldMutations != null && message.fieldMutations.length)
                        for (var i = 0; i < message.fieldMutations.length; ++i)
                            $root.sajari.engine.v2.MutateRecordRequest.FieldMutation.encode(message.fieldMutations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified MutateRecordRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateRecordRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordRequest} message MutateRecordRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a MutateRecordRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.MutateRecordRequest} MutateRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateRecordRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateRecordRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.key = $root.sajari.engine.v2.Key.decode(reader, reader.uint32());
                            break;
                        case 2:
                            if (!(message.fieldMutations && message.fieldMutations.length))
                                message.fieldMutations = [];
                            message.fieldMutations.push($root.sajari.engine.v2.MutateRecordRequest.FieldMutation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a MutateRecordRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.MutateRecordRequest} MutateRecordRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a MutateRecordRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MutateRecordRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.key != null && message.hasOwnProperty("key")) {
                        var error = $root.sajari.engine.v2.Key.verify(message.key);
                        if (error)
                            return "key." + error;
                    }
                    if (message.fieldMutations != null && message.hasOwnProperty("fieldMutations")) {
                        if (!Array.isArray(message.fieldMutations))
                            return "fieldMutations: array expected";
                        for (var i = 0; i < message.fieldMutations.length; ++i) {
                            var error = $root.sajari.engine.v2.MutateRecordRequest.FieldMutation.verify(message.fieldMutations[i]);
                            if (error)
                                return "fieldMutations." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a MutateRecordRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.MutateRecordRequest} MutateRecordRequest
                 */
                MutateRecordRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.MutateRecordRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.MutateRecordRequest();
                    if (object.key != null) {
                        if (typeof object.key !== "object")
                            throw TypeError(".sajari.engine.v2.MutateRecordRequest.key: object expected");
                        message.key = $root.sajari.engine.v2.Key.fromObject(object.key);
                    }
                    if (object.fieldMutations) {
                        if (!Array.isArray(object.fieldMutations))
                            throw TypeError(".sajari.engine.v2.MutateRecordRequest.fieldMutations: array expected");
                        message.fieldMutations = [];
                        for (var i = 0; i < object.fieldMutations.length; ++i) {
                            if (typeof object.fieldMutations[i] !== "object")
                                throw TypeError(".sajari.engine.v2.MutateRecordRequest.fieldMutations: object expected");
                            message.fieldMutations[i] = $root.sajari.engine.v2.MutateRecordRequest.FieldMutation.fromObject(object.fieldMutations[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a MutateRecordRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @static
                 * @param {sajari.engine.v2.MutateRecordRequest} message MutateRecordRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MutateRecordRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.fieldMutations = [];
                    if (options.defaults)
                        object.key = null;
                    if (message.key != null && message.hasOwnProperty("key"))
                        object.key = $root.sajari.engine.v2.Key.toObject(message.key, options);
                    if (message.fieldMutations && message.fieldMutations.length) {
                        object.fieldMutations = [];
                        for (var j = 0; j < message.fieldMutations.length; ++j)
                            object.fieldMutations[j] = $root.sajari.engine.v2.MutateRecordRequest.FieldMutation.toObject(message.fieldMutations[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this MutateRecordRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.MutateRecordRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MutateRecordRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                MutateRecordRequest.FieldMutation = (function() {

                    /**
                     * Properties of a FieldMutation.
                     * @memberof sajari.engine.v2.MutateRecordRequest
                     * @interface IFieldMutation
                     * @property {string|null} [field] FieldMutation field
                     * @property {sajari.engine.v2.IValue|null} [set] FieldMutation set
                     * @property {sajari.engine.v2.IValue|null} [increment] FieldMutation increment
                     * @property {sajari.engine.v2.IValue|null} [append] FieldMutation append
                     */

                    /**
                     * Constructs a new FieldMutation.
                     * @memberof sajari.engine.v2.MutateRecordRequest
                     * @classdesc Represents a FieldMutation.
                     * @implements IFieldMutation
                     * @constructor
                     * @param {sajari.engine.v2.MutateRecordRequest.IFieldMutation=} [properties] Properties to set
                     */
                    function FieldMutation(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * FieldMutation field.
                     * @member {string} field
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     */
                    FieldMutation.prototype.field = "";

                    /**
                     * FieldMutation set.
                     * @member {sajari.engine.v2.IValue|null|undefined} set
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     */
                    FieldMutation.prototype.set = null;

                    /**
                     * FieldMutation increment.
                     * @member {sajari.engine.v2.IValue|null|undefined} increment
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     */
                    FieldMutation.prototype.increment = null;

                    /**
                     * FieldMutation append.
                     * @member {sajari.engine.v2.IValue|null|undefined} append
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     */
                    FieldMutation.prototype.append = null;

                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;

                    /**
                     * FieldMutation mutation.
                     * @member {"set"|"increment"|"append"|undefined} mutation
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     */
                    Object.defineProperty(FieldMutation.prototype, "mutation", {
                        get: $util.oneOfGetter($oneOfFields = ["set", "increment", "append"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * Creates a new FieldMutation instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {sajari.engine.v2.MutateRecordRequest.IFieldMutation=} [properties] Properties to set
                     * @returns {sajari.engine.v2.MutateRecordRequest.FieldMutation} FieldMutation instance
                     */
                    FieldMutation.create = function create(properties) {
                        return new FieldMutation(properties);
                    };

                    /**
                     * Encodes the specified FieldMutation message. Does not implicitly {@link sajari.engine.v2.MutateRecordRequest.FieldMutation.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {sajari.engine.v2.MutateRecordRequest.IFieldMutation} message FieldMutation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FieldMutation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.field != null && message.hasOwnProperty("field"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.field);
                        if (message.set != null && message.hasOwnProperty("set"))
                            $root.sajari.engine.v2.Value.encode(message.set, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.increment != null && message.hasOwnProperty("increment"))
                            $root.sajari.engine.v2.Value.encode(message.increment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.append != null && message.hasOwnProperty("append"))
                            $root.sajari.engine.v2.Value.encode(message.append, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified FieldMutation message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateRecordRequest.FieldMutation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {sajari.engine.v2.MutateRecordRequest.IFieldMutation} message FieldMutation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FieldMutation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a FieldMutation message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.MutateRecordRequest.FieldMutation} FieldMutation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FieldMutation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateRecordRequest.FieldMutation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.field = reader.string();
                                break;
                            case 2:
                                message.set = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                                break;
                            case 3:
                                message.increment = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                                break;
                            case 4:
                                message.append = $root.sajari.engine.v2.Value.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a FieldMutation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.MutateRecordRequest.FieldMutation} FieldMutation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FieldMutation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a FieldMutation message.
                     * @function verify
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    FieldMutation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.field != null && message.hasOwnProperty("field"))
                            if (!$util.isString(message.field))
                                return "field: string expected";
                        if (message.set != null && message.hasOwnProperty("set")) {
                            properties.mutation = 1;
                            {
                                var error = $root.sajari.engine.v2.Value.verify(message.set);
                                if (error)
                                    return "set." + error;
                            }
                        }
                        if (message.increment != null && message.hasOwnProperty("increment")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            {
                                var error = $root.sajari.engine.v2.Value.verify(message.increment);
                                if (error)
                                    return "increment." + error;
                            }
                        }
                        if (message.append != null && message.hasOwnProperty("append")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            {
                                var error = $root.sajari.engine.v2.Value.verify(message.append);
                                if (error)
                                    return "append." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a FieldMutation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.MutateRecordRequest.FieldMutation} FieldMutation
                     */
                    FieldMutation.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.MutateRecordRequest.FieldMutation)
                            return object;
                        var message = new $root.sajari.engine.v2.MutateRecordRequest.FieldMutation();
                        if (object.field != null)
                            message.field = String(object.field);
                        if (object.set != null) {
                            if (typeof object.set !== "object")
                                throw TypeError(".sajari.engine.v2.MutateRecordRequest.FieldMutation.set: object expected");
                            message.set = $root.sajari.engine.v2.Value.fromObject(object.set);
                        }
                        if (object.increment != null) {
                            if (typeof object.increment !== "object")
                                throw TypeError(".sajari.engine.v2.MutateRecordRequest.FieldMutation.increment: object expected");
                            message.increment = $root.sajari.engine.v2.Value.fromObject(object.increment);
                        }
                        if (object.append != null) {
                            if (typeof object.append !== "object")
                                throw TypeError(".sajari.engine.v2.MutateRecordRequest.FieldMutation.append: object expected");
                            message.append = $root.sajari.engine.v2.Value.fromObject(object.append);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a FieldMutation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @static
                     * @param {sajari.engine.v2.MutateRecordRequest.FieldMutation} message FieldMutation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    FieldMutation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.field = "";
                        if (message.field != null && message.hasOwnProperty("field"))
                            object.field = message.field;
                        if (message.set != null && message.hasOwnProperty("set")) {
                            object.set = $root.sajari.engine.v2.Value.toObject(message.set, options);
                            if (options.oneofs)
                                object.mutation = "set";
                        }
                        if (message.increment != null && message.hasOwnProperty("increment")) {
                            object.increment = $root.sajari.engine.v2.Value.toObject(message.increment, options);
                            if (options.oneofs)
                                object.mutation = "increment";
                        }
                        if (message.append != null && message.hasOwnProperty("append")) {
                            object.append = $root.sajari.engine.v2.Value.toObject(message.append, options);
                            if (options.oneofs)
                                object.mutation = "append";
                        }
                        return object;
                    };

                    /**
                     * Converts this FieldMutation to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.MutateRecordRequest.FieldMutation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    FieldMutation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return FieldMutation;
                })();

                return MutateRecordRequest;
            })();

            v2.MutateRecordResponse = (function() {

                /**
                 * Properties of a MutateRecordResponse.
                 * @memberof sajari.engine.v2
                 * @interface IMutateRecordResponse
                 */

                /**
                 * Constructs a new MutateRecordResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a MutateRecordResponse.
                 * @implements IMutateRecordResponse
                 * @constructor
                 * @param {sajari.engine.v2.IMutateRecordResponse=} [properties] Properties to set
                 */
                function MutateRecordResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new MutateRecordResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.MutateRecordResponse} MutateRecordResponse instance
                 */
                MutateRecordResponse.create = function create(properties) {
                    return new MutateRecordResponse(properties);
                };

                /**
                 * Encodes the specified MutateRecordResponse message. Does not implicitly {@link sajari.engine.v2.MutateRecordResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordResponse} message MutateRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateRecordResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified MutateRecordResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateRecordResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateRecordResponse} message MutateRecordResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a MutateRecordResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.MutateRecordResponse} MutateRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateRecordResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateRecordResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a MutateRecordResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.MutateRecordResponse} MutateRecordResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a MutateRecordResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MutateRecordResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a MutateRecordResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.MutateRecordResponse} MutateRecordResponse
                 */
                MutateRecordResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.MutateRecordResponse)
                        return object;
                    return new $root.sajari.engine.v2.MutateRecordResponse();
                };

                /**
                 * Creates a plain object from a MutateRecordResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @static
                 * @param {sajari.engine.v2.MutateRecordResponse} message MutateRecordResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MutateRecordResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this MutateRecordResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.MutateRecordResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MutateRecordResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return MutateRecordResponse;
            })();

            v2.Schema = (function() {

                /**
                 * Constructs a new Schema service.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Schema
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Schema(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Schema.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Schema;

                /**
                 * Creates new Schema service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.engine.v2.Schema
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Schema} RPC service. Useful where requests and/or responses are streamed.
                 */
                Schema.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.engine.v2.Schema#listFields}.
                 * @memberof sajari.engine.v2.Schema
                 * @typedef ListFieldsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.ListFieldsResponse} [response] ListFieldsResponse
                 */

                /**
                 * Calls ListFields.
                 * @function listFields
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.IListFieldsRequest} request ListFieldsRequest message or plain object
                 * @param {sajari.engine.v2.Schema.ListFieldsCallback} callback Node-style callback called with the error, if any, and ListFieldsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Schema.prototype.listFields = function listFields(request, callback) {
                    return this.rpcCall(listFields, $root.sajari.engine.v2.ListFieldsRequest, $root.sajari.engine.v2.ListFieldsResponse, request, callback);
                }, "name", { value: "ListFields" });

                /**
                 * Calls ListFields.
                 * @function listFields
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.IListFieldsRequest} request ListFieldsRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.ListFieldsResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.engine.v2.Schema#createField}.
                 * @memberof sajari.engine.v2.Schema
                 * @typedef CreateFieldCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.CreateFieldResponse} [response] CreateFieldResponse
                 */

                /**
                 * Calls CreateField.
                 * @function createField
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.ICreateFieldRequest} request CreateFieldRequest message or plain object
                 * @param {sajari.engine.v2.Schema.CreateFieldCallback} callback Node-style callback called with the error, if any, and CreateFieldResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Schema.prototype.createField = function createField(request, callback) {
                    return this.rpcCall(createField, $root.sajari.engine.v2.CreateFieldRequest, $root.sajari.engine.v2.CreateFieldResponse, request, callback);
                }, "name", { value: "CreateField" });

                /**
                 * Calls CreateField.
                 * @function createField
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.ICreateFieldRequest} request CreateFieldRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.CreateFieldResponse>} Promise
                 * @variation 2
                 */

                /**
                 * Callback as used by {@link sajari.engine.v2.Schema#mutateField}.
                 * @memberof sajari.engine.v2.Schema
                 * @typedef MutateFieldCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.engine.v2.MutateFieldResponse} [response] MutateFieldResponse
                 */

                /**
                 * Calls MutateField.
                 * @function mutateField
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.IMutateFieldRequest} request MutateFieldRequest message or plain object
                 * @param {sajari.engine.v2.Schema.MutateFieldCallback} callback Node-style callback called with the error, if any, and MutateFieldResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Schema.prototype.mutateField = function mutateField(request, callback) {
                    return this.rpcCall(mutateField, $root.sajari.engine.v2.MutateFieldRequest, $root.sajari.engine.v2.MutateFieldResponse, request, callback);
                }, "name", { value: "MutateField" });

                /**
                 * Calls MutateField.
                 * @function mutateField
                 * @memberof sajari.engine.v2.Schema
                 * @instance
                 * @param {sajari.engine.v2.IMutateFieldRequest} request MutateFieldRequest message or plain object
                 * @returns {Promise<sajari.engine.v2.MutateFieldResponse>} Promise
                 * @variation 2
                 */

                return Schema;
            })();

            v2.ListFieldsRequest = (function() {

                /**
                 * Properties of a ListFieldsRequest.
                 * @memberof sajari.engine.v2
                 * @interface IListFieldsRequest
                 * @property {number|null} [pageSize] ListFieldsRequest pageSize
                 * @property {string|null} [pageToken] ListFieldsRequest pageToken
                 */

                /**
                 * Constructs a new ListFieldsRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a ListFieldsRequest.
                 * @implements IListFieldsRequest
                 * @constructor
                 * @param {sajari.engine.v2.IListFieldsRequest=} [properties] Properties to set
                 */
                function ListFieldsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListFieldsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @instance
                 */
                ListFieldsRequest.prototype.pageSize = 0;

                /**
                 * ListFieldsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @instance
                 */
                ListFieldsRequest.prototype.pageToken = "";

                /**
                 * Creates a new ListFieldsRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {sajari.engine.v2.IListFieldsRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.ListFieldsRequest} ListFieldsRequest instance
                 */
                ListFieldsRequest.create = function create(properties) {
                    return new ListFieldsRequest(properties);
                };

                /**
                 * Encodes the specified ListFieldsRequest message. Does not implicitly {@link sajari.engine.v2.ListFieldsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {sajari.engine.v2.IListFieldsRequest} message ListFieldsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListFieldsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pageSize);
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.pageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListFieldsRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.ListFieldsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {sajari.engine.v2.IListFieldsRequest} message ListFieldsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListFieldsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListFieldsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.ListFieldsRequest} ListFieldsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListFieldsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.ListFieldsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.pageSize = reader.int32();
                            break;
                        case 2:
                            message.pageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListFieldsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.ListFieldsRequest} ListFieldsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListFieldsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListFieldsRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListFieldsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListFieldsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.ListFieldsRequest} ListFieldsRequest
                 */
                ListFieldsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.ListFieldsRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.ListFieldsRequest();
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListFieldsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @static
                 * @param {sajari.engine.v2.ListFieldsRequest} message ListFieldsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListFieldsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.pageSize = 0;
                        object.pageToken = "";
                    }
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    return object;
                };

                /**
                 * Converts this ListFieldsRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.ListFieldsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListFieldsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ListFieldsRequest;
            })();

            v2.ListFieldsResponse = (function() {

                /**
                 * Properties of a ListFieldsResponse.
                 * @memberof sajari.engine.v2
                 * @interface IListFieldsResponse
                 * @property {Array.<sajari.engine.v2.IField>|null} [fields] ListFieldsResponse fields
                 * @property {number|null} [totalSize] ListFieldsResponse totalSize
                 * @property {string|null} [nextPageToken] ListFieldsResponse nextPageToken
                 */

                /**
                 * Constructs a new ListFieldsResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a ListFieldsResponse.
                 * @implements IListFieldsResponse
                 * @constructor
                 * @param {sajari.engine.v2.IListFieldsResponse=} [properties] Properties to set
                 */
                function ListFieldsResponse(properties) {
                    this.fields = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListFieldsResponse fields.
                 * @member {Array.<sajari.engine.v2.IField>} fields
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @instance
                 */
                ListFieldsResponse.prototype.fields = $util.emptyArray;

                /**
                 * ListFieldsResponse totalSize.
                 * @member {number} totalSize
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @instance
                 */
                ListFieldsResponse.prototype.totalSize = 0;

                /**
                 * ListFieldsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @instance
                 */
                ListFieldsResponse.prototype.nextPageToken = "";

                /**
                 * Creates a new ListFieldsResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {sajari.engine.v2.IListFieldsResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.ListFieldsResponse} ListFieldsResponse instance
                 */
                ListFieldsResponse.create = function create(properties) {
                    return new ListFieldsResponse(properties);
                };

                /**
                 * Encodes the specified ListFieldsResponse message. Does not implicitly {@link sajari.engine.v2.ListFieldsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {sajari.engine.v2.IListFieldsResponse} message ListFieldsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListFieldsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fields != null && message.fields.length)
                        for (var i = 0; i < message.fields.length; ++i)
                            $root.sajari.engine.v2.Field.encode(message.fields[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.totalSize);
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                    return writer;
                };

                /**
                 * Encodes the specified ListFieldsResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.ListFieldsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {sajari.engine.v2.IListFieldsResponse} message ListFieldsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListFieldsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListFieldsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.ListFieldsResponse} ListFieldsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListFieldsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.ListFieldsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.fields && message.fields.length))
                                message.fields = [];
                            message.fields.push($root.sajari.engine.v2.Field.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.totalSize = reader.int32();
                            break;
                        case 3:
                            message.nextPageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ListFieldsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.ListFieldsResponse} ListFieldsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListFieldsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListFieldsResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListFieldsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fields != null && message.hasOwnProperty("fields")) {
                        if (!Array.isArray(message.fields))
                            return "fields: array expected";
                        for (var i = 0; i < message.fields.length; ++i) {
                            var error = $root.sajari.engine.v2.Field.verify(message.fields[i]);
                            if (error)
                                return "fields." + error;
                        }
                    }
                    if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                        if (!$util.isInteger(message.totalSize))
                            return "totalSize: integer expected";
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };

                /**
                 * Creates a ListFieldsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.ListFieldsResponse} ListFieldsResponse
                 */
                ListFieldsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.ListFieldsResponse)
                        return object;
                    var message = new $root.sajari.engine.v2.ListFieldsResponse();
                    if (object.fields) {
                        if (!Array.isArray(object.fields))
                            throw TypeError(".sajari.engine.v2.ListFieldsResponse.fields: array expected");
                        message.fields = [];
                        for (var i = 0; i < object.fields.length; ++i) {
                            if (typeof object.fields[i] !== "object")
                                throw TypeError(".sajari.engine.v2.ListFieldsResponse.fields: object expected");
                            message.fields[i] = $root.sajari.engine.v2.Field.fromObject(object.fields[i]);
                        }
                    }
                    if (object.totalSize != null)
                        message.totalSize = object.totalSize | 0;
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };

                /**
                 * Creates a plain object from a ListFieldsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @static
                 * @param {sajari.engine.v2.ListFieldsResponse} message ListFieldsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListFieldsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.fields = [];
                    if (options.defaults) {
                        object.totalSize = 0;
                        object.nextPageToken = "";
                    }
                    if (message.fields && message.fields.length) {
                        object.fields = [];
                        for (var j = 0; j < message.fields.length; ++j)
                            object.fields[j] = $root.sajari.engine.v2.Field.toObject(message.fields[j], options);
                    }
                    if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                        object.totalSize = message.totalSize;
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };

                /**
                 * Converts this ListFieldsResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.ListFieldsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListFieldsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ListFieldsResponse;
            })();

            v2.CreateFieldRequest = (function() {

                /**
                 * Properties of a CreateFieldRequest.
                 * @memberof sajari.engine.v2
                 * @interface ICreateFieldRequest
                 * @property {sajari.engine.v2.IField|null} [field] CreateFieldRequest field
                 */

                /**
                 * Constructs a new CreateFieldRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a CreateFieldRequest.
                 * @implements ICreateFieldRequest
                 * @constructor
                 * @param {sajari.engine.v2.ICreateFieldRequest=} [properties] Properties to set
                 */
                function CreateFieldRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CreateFieldRequest field.
                 * @member {sajari.engine.v2.IField|null|undefined} field
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @instance
                 */
                CreateFieldRequest.prototype.field = null;

                /**
                 * Creates a new CreateFieldRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.CreateFieldRequest} CreateFieldRequest instance
                 */
                CreateFieldRequest.create = function create(properties) {
                    return new CreateFieldRequest(properties);
                };

                /**
                 * Encodes the specified CreateFieldRequest message. Does not implicitly {@link sajari.engine.v2.CreateFieldRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldRequest} message CreateFieldRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateFieldRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.field != null && message.hasOwnProperty("field"))
                        $root.sajari.engine.v2.Field.encode(message.field, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CreateFieldRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.CreateFieldRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldRequest} message CreateFieldRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateFieldRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreateFieldRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.CreateFieldRequest} CreateFieldRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateFieldRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.CreateFieldRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.field = $root.sajari.engine.v2.Field.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreateFieldRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.CreateFieldRequest} CreateFieldRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateFieldRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreateFieldRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreateFieldRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        var error = $root.sajari.engine.v2.Field.verify(message.field);
                        if (error)
                            return "field." + error;
                    }
                    return null;
                };

                /**
                 * Creates a CreateFieldRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.CreateFieldRequest} CreateFieldRequest
                 */
                CreateFieldRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.CreateFieldRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.CreateFieldRequest();
                    if (object.field != null) {
                        if (typeof object.field !== "object")
                            throw TypeError(".sajari.engine.v2.CreateFieldRequest.field: object expected");
                        message.field = $root.sajari.engine.v2.Field.fromObject(object.field);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CreateFieldRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.CreateFieldRequest} message CreateFieldRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreateFieldRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.field = null;
                    if (message.field != null && message.hasOwnProperty("field"))
                        object.field = $root.sajari.engine.v2.Field.toObject(message.field, options);
                    return object;
                };

                /**
                 * Converts this CreateFieldRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.CreateFieldRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreateFieldRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreateFieldRequest;
            })();

            v2.CreateFieldResponse = (function() {

                /**
                 * Properties of a CreateFieldResponse.
                 * @memberof sajari.engine.v2
                 * @interface ICreateFieldResponse
                 */

                /**
                 * Constructs a new CreateFieldResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a CreateFieldResponse.
                 * @implements ICreateFieldResponse
                 * @constructor
                 * @param {sajari.engine.v2.ICreateFieldResponse=} [properties] Properties to set
                 */
                function CreateFieldResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new CreateFieldResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.CreateFieldResponse} CreateFieldResponse instance
                 */
                CreateFieldResponse.create = function create(properties) {
                    return new CreateFieldResponse(properties);
                };

                /**
                 * Encodes the specified CreateFieldResponse message. Does not implicitly {@link sajari.engine.v2.CreateFieldResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldResponse} message CreateFieldResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateFieldResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified CreateFieldResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.CreateFieldResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.ICreateFieldResponse} message CreateFieldResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreateFieldResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreateFieldResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.CreateFieldResponse} CreateFieldResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateFieldResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.CreateFieldResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a CreateFieldResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.CreateFieldResponse} CreateFieldResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreateFieldResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreateFieldResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreateFieldResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a CreateFieldResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.CreateFieldResponse} CreateFieldResponse
                 */
                CreateFieldResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.CreateFieldResponse)
                        return object;
                    return new $root.sajari.engine.v2.CreateFieldResponse();
                };

                /**
                 * Creates a plain object from a CreateFieldResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.CreateFieldResponse} message CreateFieldResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreateFieldResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this CreateFieldResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.CreateFieldResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreateFieldResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return CreateFieldResponse;
            })();

            v2.Field = (function() {

                /**
                 * Properties of a Field.
                 * @memberof sajari.engine.v2
                 * @interface IField
                 * @property {string|null} [name] Field name
                 * @property {string|null} [description] Field description
                 * @property {sajari.engine.v2.Field.Type|null} [type] Field type
                 * @property {sajari.engine.v2.Field.Mode|null} [mode] Field mode
                 * @property {boolean|null} [repeated] Field repeated
                 * @property {number|null} [repeatedLen] Field repeatedLen
                 * @property {Array.<sajari.engine.v2.IFieldIndex>|null} [indexes] Field indexes
                 */

                /**
                 * Constructs a new Field.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a Field.
                 * @implements IField
                 * @constructor
                 * @param {sajari.engine.v2.IField=} [properties] Properties to set
                 */
                function Field(properties) {
                    this.indexes = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Field name.
                 * @member {string} name
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.name = "";

                /**
                 * Field description.
                 * @member {string} description
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.description = "";

                /**
                 * Field type.
                 * @member {sajari.engine.v2.Field.Type} type
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.type = 0;

                /**
                 * Field mode.
                 * @member {sajari.engine.v2.Field.Mode} mode
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.mode = 0;

                /**
                 * Field repeated.
                 * @member {boolean} repeated
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.repeated = false;

                /**
                 * Field repeatedLen.
                 * @member {number} repeatedLen
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.repeatedLen = 0;

                /**
                 * Field indexes.
                 * @member {Array.<sajari.engine.v2.IFieldIndex>} indexes
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 */
                Field.prototype.indexes = $util.emptyArray;

                /**
                 * Creates a new Field instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {sajari.engine.v2.IField=} [properties] Properties to set
                 * @returns {sajari.engine.v2.Field} Field instance
                 */
                Field.create = function create(properties) {
                    return new Field(properties);
                };

                /**
                 * Encodes the specified Field message. Does not implicitly {@link sajari.engine.v2.Field.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {sajari.engine.v2.IField} message Field message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Field.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                    if (message.mode != null && message.hasOwnProperty("mode"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.mode);
                    if (message.repeated != null && message.hasOwnProperty("repeated"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.repeated);
                    if (message.repeatedLen != null && message.hasOwnProperty("repeatedLen"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.repeatedLen);
                    if (message.indexes != null && message.indexes.length)
                        for (var i = 0; i < message.indexes.length; ++i)
                            $root.sajari.engine.v2.FieldIndex.encode(message.indexes[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Field message, length delimited. Does not implicitly {@link sajari.engine.v2.Field.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {sajari.engine.v2.IField} message Field message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Field.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Field message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.Field} Field
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Field.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.Field();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.description = reader.string();
                            break;
                        case 3:
                            message.type = reader.int32();
                            break;
                        case 4:
                            message.mode = reader.int32();
                            break;
                        case 5:
                            message.repeated = reader.bool();
                            break;
                        case 6:
                            message.repeatedLen = reader.int32();
                            break;
                        case 7:
                            if (!(message.indexes && message.indexes.length))
                                message.indexes = [];
                            message.indexes.push($root.sajari.engine.v2.FieldIndex.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Field message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.Field} Field
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Field.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Field message.
                 * @function verify
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Field.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.mode != null && message.hasOwnProperty("mode"))
                        switch (message.mode) {
                        default:
                            return "mode: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.repeated != null && message.hasOwnProperty("repeated"))
                        if (typeof message.repeated !== "boolean")
                            return "repeated: boolean expected";
                    if (message.repeatedLen != null && message.hasOwnProperty("repeatedLen"))
                        if (!$util.isInteger(message.repeatedLen))
                            return "repeatedLen: integer expected";
                    if (message.indexes != null && message.hasOwnProperty("indexes")) {
                        if (!Array.isArray(message.indexes))
                            return "indexes: array expected";
                        for (var i = 0; i < message.indexes.length; ++i) {
                            var error = $root.sajari.engine.v2.FieldIndex.verify(message.indexes[i]);
                            if (error)
                                return "indexes." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a Field message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.Field} Field
                 */
                Field.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.Field)
                        return object;
                    var message = new $root.sajari.engine.v2.Field();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.description != null)
                        message.description = String(object.description);
                    switch (object.type) {
                    case "STRING":
                    case 0:
                        message.type = 0;
                        break;
                    case "INTEGER":
                    case 1:
                        message.type = 1;
                        break;
                    case "FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "DOUBLE":
                    case 3:
                        message.type = 3;
                        break;
                    case "BOOLEAN":
                    case 4:
                        message.type = 4;
                        break;
                    case "TIMESTAMP":
                    case 5:
                        message.type = 5;
                        break;
                    }
                    switch (object.mode) {
                    case "NULLABLE":
                    case 0:
                        message.mode = 0;
                        break;
                    case "REQUIRED":
                    case 1:
                        message.mode = 1;
                        break;
                    case "UNIQUE":
                    case 2:
                        message.mode = 2;
                        break;
                    }
                    if (object.repeated != null)
                        message.repeated = Boolean(object.repeated);
                    if (object.repeatedLen != null)
                        message.repeatedLen = object.repeatedLen | 0;
                    if (object.indexes) {
                        if (!Array.isArray(object.indexes))
                            throw TypeError(".sajari.engine.v2.Field.indexes: array expected");
                        message.indexes = [];
                        for (var i = 0; i < object.indexes.length; ++i) {
                            if (typeof object.indexes[i] !== "object")
                                throw TypeError(".sajari.engine.v2.Field.indexes: object expected");
                            message.indexes[i] = $root.sajari.engine.v2.FieldIndex.fromObject(object.indexes[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Field message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.Field
                 * @static
                 * @param {sajari.engine.v2.Field} message Field
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Field.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.indexes = [];
                    if (options.defaults) {
                        object.name = "";
                        object.description = "";
                        object.type = options.enums === String ? "STRING" : 0;
                        object.mode = options.enums === String ? "NULLABLE" : 0;
                        object.repeated = false;
                        object.repeatedLen = 0;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.sajari.engine.v2.Field.Type[message.type] : message.type;
                    if (message.mode != null && message.hasOwnProperty("mode"))
                        object.mode = options.enums === String ? $root.sajari.engine.v2.Field.Mode[message.mode] : message.mode;
                    if (message.repeated != null && message.hasOwnProperty("repeated"))
                        object.repeated = message.repeated;
                    if (message.repeatedLen != null && message.hasOwnProperty("repeatedLen"))
                        object.repeatedLen = message.repeatedLen;
                    if (message.indexes && message.indexes.length) {
                        object.indexes = [];
                        for (var j = 0; j < message.indexes.length; ++j)
                            object.indexes[j] = $root.sajari.engine.v2.FieldIndex.toObject(message.indexes[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this Field to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.Field
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Field.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Type enum.
                 * @name sajari.engine.v2.Field.Type
                 * @enum {string}
                 * @property {number} STRING=0 STRING value
                 * @property {number} INTEGER=1 INTEGER value
                 * @property {number} FLOAT=2 FLOAT value
                 * @property {number} DOUBLE=3 DOUBLE value
                 * @property {number} BOOLEAN=4 BOOLEAN value
                 * @property {number} TIMESTAMP=5 TIMESTAMP value
                 */
                Field.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "INTEGER"] = 1;
                    values[valuesById[2] = "FLOAT"] = 2;
                    values[valuesById[3] = "DOUBLE"] = 3;
                    values[valuesById[4] = "BOOLEAN"] = 4;
                    values[valuesById[5] = "TIMESTAMP"] = 5;
                    return values;
                })();

                /**
                 * Mode enum.
                 * @name sajari.engine.v2.Field.Mode
                 * @enum {string}
                 * @property {number} NULLABLE=0 NULLABLE value
                 * @property {number} REQUIRED=1 REQUIRED value
                 * @property {number} UNIQUE=2 UNIQUE value
                 */
                Field.Mode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "NULLABLE"] = 0;
                    values[valuesById[1] = "REQUIRED"] = 1;
                    values[valuesById[2] = "UNIQUE"] = 2;
                    return values;
                })();

                return Field;
            })();

            v2.FieldIndex = (function() {

                /**
                 * Properties of a FieldIndex.
                 * @memberof sajari.engine.v2
                 * @interface IFieldIndex
                 * @property {string|null} [spec] FieldIndex spec
                 * @property {string|null} [description] FieldIndex description
                 */

                /**
                 * Constructs a new FieldIndex.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a FieldIndex.
                 * @implements IFieldIndex
                 * @constructor
                 * @param {sajari.engine.v2.IFieldIndex=} [properties] Properties to set
                 */
                function FieldIndex(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * FieldIndex spec.
                 * @member {string} spec
                 * @memberof sajari.engine.v2.FieldIndex
                 * @instance
                 */
                FieldIndex.prototype.spec = "";

                /**
                 * FieldIndex description.
                 * @member {string} description
                 * @memberof sajari.engine.v2.FieldIndex
                 * @instance
                 */
                FieldIndex.prototype.description = "";

                /**
                 * Creates a new FieldIndex instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {sajari.engine.v2.IFieldIndex=} [properties] Properties to set
                 * @returns {sajari.engine.v2.FieldIndex} FieldIndex instance
                 */
                FieldIndex.create = function create(properties) {
                    return new FieldIndex(properties);
                };

                /**
                 * Encodes the specified FieldIndex message. Does not implicitly {@link sajari.engine.v2.FieldIndex.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {sajari.engine.v2.IFieldIndex} message FieldIndex message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldIndex.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.spec != null && message.hasOwnProperty("spec"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.spec);
                    if (message.description != null && message.hasOwnProperty("description"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                    return writer;
                };

                /**
                 * Encodes the specified FieldIndex message, length delimited. Does not implicitly {@link sajari.engine.v2.FieldIndex.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {sajari.engine.v2.IFieldIndex} message FieldIndex message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldIndex.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a FieldIndex message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.FieldIndex} FieldIndex
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldIndex.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.FieldIndex();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.spec = reader.string();
                            break;
                        case 2:
                            message.description = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a FieldIndex message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.FieldIndex} FieldIndex
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldIndex.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a FieldIndex message.
                 * @function verify
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldIndex.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.spec != null && message.hasOwnProperty("spec"))
                        if (!$util.isString(message.spec))
                            return "spec: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    return null;
                };

                /**
                 * Creates a FieldIndex message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.FieldIndex} FieldIndex
                 */
                FieldIndex.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.FieldIndex)
                        return object;
                    var message = new $root.sajari.engine.v2.FieldIndex();
                    if (object.spec != null)
                        message.spec = String(object.spec);
                    if (object.description != null)
                        message.description = String(object.description);
                    return message;
                };

                /**
                 * Creates a plain object from a FieldIndex message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.FieldIndex
                 * @static
                 * @param {sajari.engine.v2.FieldIndex} message FieldIndex
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldIndex.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.spec = "";
                        object.description = "";
                    }
                    if (message.spec != null && message.hasOwnProperty("spec"))
                        object.spec = message.spec;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    return object;
                };

                /**
                 * Converts this FieldIndex to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.FieldIndex
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldIndex.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return FieldIndex;
            })();

            v2.MutateFieldRequest = (function() {

                /**
                 * Properties of a MutateFieldRequest.
                 * @memberof sajari.engine.v2
                 * @interface IMutateFieldRequest
                 * @property {string|null} [name] MutateFieldRequest name
                 * @property {sajari.engine.v2.MutateFieldRequest.IMutation|null} [mutation] MutateFieldRequest mutation
                 */

                /**
                 * Constructs a new MutateFieldRequest.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a MutateFieldRequest.
                 * @implements IMutateFieldRequest
                 * @constructor
                 * @param {sajari.engine.v2.IMutateFieldRequest=} [properties] Properties to set
                 */
                function MutateFieldRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * MutateFieldRequest name.
                 * @member {string} name
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @instance
                 */
                MutateFieldRequest.prototype.name = "";

                /**
                 * MutateFieldRequest mutation.
                 * @member {sajari.engine.v2.MutateFieldRequest.IMutation|null|undefined} mutation
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @instance
                 */
                MutateFieldRequest.prototype.mutation = null;

                /**
                 * Creates a new MutateFieldRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldRequest=} [properties] Properties to set
                 * @returns {sajari.engine.v2.MutateFieldRequest} MutateFieldRequest instance
                 */
                MutateFieldRequest.create = function create(properties) {
                    return new MutateFieldRequest(properties);
                };

                /**
                 * Encodes the specified MutateFieldRequest message. Does not implicitly {@link sajari.engine.v2.MutateFieldRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldRequest} message MutateFieldRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateFieldRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.mutation != null && message.hasOwnProperty("mutation"))
                        $root.sajari.engine.v2.MutateFieldRequest.Mutation.encode(message.mutation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified MutateFieldRequest message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateFieldRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldRequest} message MutateFieldRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateFieldRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a MutateFieldRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.MutateFieldRequest} MutateFieldRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateFieldRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateFieldRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.mutation = $root.sajari.engine.v2.MutateFieldRequest.Mutation.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a MutateFieldRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.MutateFieldRequest} MutateFieldRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateFieldRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a MutateFieldRequest message.
                 * @function verify
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MutateFieldRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.mutation != null && message.hasOwnProperty("mutation")) {
                        var error = $root.sajari.engine.v2.MutateFieldRequest.Mutation.verify(message.mutation);
                        if (error)
                            return "mutation." + error;
                    }
                    return null;
                };

                /**
                 * Creates a MutateFieldRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.MutateFieldRequest} MutateFieldRequest
                 */
                MutateFieldRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.MutateFieldRequest)
                        return object;
                    var message = new $root.sajari.engine.v2.MutateFieldRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.mutation != null) {
                        if (typeof object.mutation !== "object")
                            throw TypeError(".sajari.engine.v2.MutateFieldRequest.mutation: object expected");
                        message.mutation = $root.sajari.engine.v2.MutateFieldRequest.Mutation.fromObject(object.mutation);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a MutateFieldRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @static
                 * @param {sajari.engine.v2.MutateFieldRequest} message MutateFieldRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MutateFieldRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.mutation = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.mutation != null && message.hasOwnProperty("mutation"))
                        object.mutation = $root.sajari.engine.v2.MutateFieldRequest.Mutation.toObject(message.mutation, options);
                    return object;
                };

                /**
                 * Converts this MutateFieldRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.MutateFieldRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MutateFieldRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                MutateFieldRequest.Mutation = (function() {

                    /**
                     * Properties of a Mutation.
                     * @memberof sajari.engine.v2.MutateFieldRequest
                     * @interface IMutation
                     * @property {string|null} [name] Mutation name
                     * @property {string|null} [description] Mutation description
                     * @property {sajari.engine.v2.Field.Type|null} [type] Mutation type
                     * @property {boolean|null} [repeated] Mutation repeated
                     * @property {sajari.engine.v2.Field.Mode|null} [mode] Mutation mode
                     * @property {sajari.engine.v2.IFieldIndex|null} [addIndex] Mutation addIndex
                     */

                    /**
                     * Constructs a new Mutation.
                     * @memberof sajari.engine.v2.MutateFieldRequest
                     * @classdesc Represents a Mutation.
                     * @implements IMutation
                     * @constructor
                     * @param {sajari.engine.v2.MutateFieldRequest.IMutation=} [properties] Properties to set
                     */
                    function Mutation(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * Mutation name.
                     * @member {string} name
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.name = "";

                    /**
                     * Mutation description.
                     * @member {string} description
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.description = "";

                    /**
                     * Mutation type.
                     * @member {sajari.engine.v2.Field.Type} type
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.type = 0;

                    /**
                     * Mutation repeated.
                     * @member {boolean} repeated
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.repeated = false;

                    /**
                     * Mutation mode.
                     * @member {sajari.engine.v2.Field.Mode} mode
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.mode = 0;

                    /**
                     * Mutation addIndex.
                     * @member {sajari.engine.v2.IFieldIndex|null|undefined} addIndex
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Mutation.prototype.addIndex = null;

                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;

                    /**
                     * Mutation mutation.
                     * @member {"name"|"description"|"type"|"repeated"|"mode"|"addIndex"|undefined} mutation
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     */
                    Object.defineProperty(Mutation.prototype, "mutation", {
                        get: $util.oneOfGetter($oneOfFields = ["name", "description", "type", "repeated", "mode", "addIndex"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * Creates a new Mutation instance using the specified properties.
                     * @function create
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {sajari.engine.v2.MutateFieldRequest.IMutation=} [properties] Properties to set
                     * @returns {sajari.engine.v2.MutateFieldRequest.Mutation} Mutation instance
                     */
                    Mutation.create = function create(properties) {
                        return new Mutation(properties);
                    };

                    /**
                     * Encodes the specified Mutation message. Does not implicitly {@link sajari.engine.v2.MutateFieldRequest.Mutation.verify|verify} messages.
                     * @function encode
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {sajari.engine.v2.MutateFieldRequest.IMutation} message Mutation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Mutation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && message.hasOwnProperty("name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.description != null && message.hasOwnProperty("description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.type != null && message.hasOwnProperty("type"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.repeated);
                        if (message.mode != null && message.hasOwnProperty("mode"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.mode);
                        if (message.addIndex != null && message.hasOwnProperty("addIndex"))
                            $root.sajari.engine.v2.FieldIndex.encode(message.addIndex, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified Mutation message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateFieldRequest.Mutation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {sajari.engine.v2.MutateFieldRequest.IMutation} message Mutation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Mutation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a Mutation message from the specified reader or buffer.
                     * @function decode
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {sajari.engine.v2.MutateFieldRequest.Mutation} Mutation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Mutation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateFieldRequest.Mutation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.name = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.type = reader.int32();
                                break;
                            case 4:
                                message.repeated = reader.bool();
                                break;
                            case 5:
                                message.mode = reader.int32();
                                break;
                            case 6:
                                message.addIndex = $root.sajari.engine.v2.FieldIndex.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a Mutation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {sajari.engine.v2.MutateFieldRequest.Mutation} Mutation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Mutation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a Mutation message.
                     * @function verify
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Mutation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.name != null && message.hasOwnProperty("name")) {
                            properties.mutation = 1;
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        }
                        if (message.description != null && message.hasOwnProperty("description")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        }
                        if (message.type != null && message.hasOwnProperty("type")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            switch (message.type) {
                            default:
                                return "type: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            }
                        }
                        if (message.repeated != null && message.hasOwnProperty("repeated")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            if (typeof message.repeated !== "boolean")
                                return "repeated: boolean expected";
                        }
                        if (message.mode != null && message.hasOwnProperty("mode")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            switch (message.mode) {
                            default:
                                return "mode: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        }
                        if (message.addIndex != null && message.hasOwnProperty("addIndex")) {
                            if (properties.mutation === 1)
                                return "mutation: multiple values";
                            properties.mutation = 1;
                            {
                                var error = $root.sajari.engine.v2.FieldIndex.verify(message.addIndex);
                                if (error)
                                    return "addIndex." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a Mutation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {sajari.engine.v2.MutateFieldRequest.Mutation} Mutation
                     */
                    Mutation.fromObject = function fromObject(object) {
                        if (object instanceof $root.sajari.engine.v2.MutateFieldRequest.Mutation)
                            return object;
                        var message = new $root.sajari.engine.v2.MutateFieldRequest.Mutation();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.description != null)
                            message.description = String(object.description);
                        switch (object.type) {
                        case "STRING":
                        case 0:
                            message.type = 0;
                            break;
                        case "INTEGER":
                        case 1:
                            message.type = 1;
                            break;
                        case "FLOAT":
                        case 2:
                            message.type = 2;
                            break;
                        case "DOUBLE":
                        case 3:
                            message.type = 3;
                            break;
                        case "BOOLEAN":
                        case 4:
                            message.type = 4;
                            break;
                        case "TIMESTAMP":
                        case 5:
                            message.type = 5;
                            break;
                        }
                        if (object.repeated != null)
                            message.repeated = Boolean(object.repeated);
                        switch (object.mode) {
                        case "NULLABLE":
                        case 0:
                            message.mode = 0;
                            break;
                        case "REQUIRED":
                        case 1:
                            message.mode = 1;
                            break;
                        case "UNIQUE":
                        case 2:
                            message.mode = 2;
                            break;
                        }
                        if (object.addIndex != null) {
                            if (typeof object.addIndex !== "object")
                                throw TypeError(".sajari.engine.v2.MutateFieldRequest.Mutation.addIndex: object expected");
                            message.addIndex = $root.sajari.engine.v2.FieldIndex.fromObject(object.addIndex);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a Mutation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @static
                     * @param {sajari.engine.v2.MutateFieldRequest.Mutation} message Mutation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Mutation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.name != null && message.hasOwnProperty("name")) {
                            object.name = message.name;
                            if (options.oneofs)
                                object.mutation = "name";
                        }
                        if (message.description != null && message.hasOwnProperty("description")) {
                            object.description = message.description;
                            if (options.oneofs)
                                object.mutation = "description";
                        }
                        if (message.type != null && message.hasOwnProperty("type")) {
                            object.type = options.enums === String ? $root.sajari.engine.v2.Field.Type[message.type] : message.type;
                            if (options.oneofs)
                                object.mutation = "type";
                        }
                        if (message.repeated != null && message.hasOwnProperty("repeated")) {
                            object.repeated = message.repeated;
                            if (options.oneofs)
                                object.mutation = "repeated";
                        }
                        if (message.mode != null && message.hasOwnProperty("mode")) {
                            object.mode = options.enums === String ? $root.sajari.engine.v2.Field.Mode[message.mode] : message.mode;
                            if (options.oneofs)
                                object.mutation = "mode";
                        }
                        if (message.addIndex != null && message.hasOwnProperty("addIndex")) {
                            object.addIndex = $root.sajari.engine.v2.FieldIndex.toObject(message.addIndex, options);
                            if (options.oneofs)
                                object.mutation = "addIndex";
                        }
                        return object;
                    };

                    /**
                     * Converts this Mutation to JSON.
                     * @function toJSON
                     * @memberof sajari.engine.v2.MutateFieldRequest.Mutation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Mutation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    return Mutation;
                })();

                return MutateFieldRequest;
            })();

            v2.MutateFieldResponse = (function() {

                /**
                 * Properties of a MutateFieldResponse.
                 * @memberof sajari.engine.v2
                 * @interface IMutateFieldResponse
                 */

                /**
                 * Constructs a new MutateFieldResponse.
                 * @memberof sajari.engine.v2
                 * @classdesc Represents a MutateFieldResponse.
                 * @implements IMutateFieldResponse
                 * @constructor
                 * @param {sajari.engine.v2.IMutateFieldResponse=} [properties] Properties to set
                 */
                function MutateFieldResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new MutateFieldResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldResponse=} [properties] Properties to set
                 * @returns {sajari.engine.v2.MutateFieldResponse} MutateFieldResponse instance
                 */
                MutateFieldResponse.create = function create(properties) {
                    return new MutateFieldResponse(properties);
                };

                /**
                 * Encodes the specified MutateFieldResponse message. Does not implicitly {@link sajari.engine.v2.MutateFieldResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldResponse} message MutateFieldResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateFieldResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified MutateFieldResponse message, length delimited. Does not implicitly {@link sajari.engine.v2.MutateFieldResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.IMutateFieldResponse} message MutateFieldResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MutateFieldResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a MutateFieldResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.engine.v2.MutateFieldResponse} MutateFieldResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateFieldResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.engine.v2.MutateFieldResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a MutateFieldResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.engine.v2.MutateFieldResponse} MutateFieldResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MutateFieldResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a MutateFieldResponse message.
                 * @function verify
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MutateFieldResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a MutateFieldResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.engine.v2.MutateFieldResponse} MutateFieldResponse
                 */
                MutateFieldResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.engine.v2.MutateFieldResponse)
                        return object;
                    return new $root.sajari.engine.v2.MutateFieldResponse();
                };

                /**
                 * Creates a plain object from a MutateFieldResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @static
                 * @param {sajari.engine.v2.MutateFieldResponse} message MutateFieldResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MutateFieldResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this MutateFieldResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.engine.v2.MutateFieldResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MutateFieldResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return MutateFieldResponse;
            })();

            return v2;
        })();

        return engine;
    })();

    sajari.interaction = (function() {

        /**
         * Namespace interaction.
         * @memberof sajari
         * @namespace
         */
        var interaction = {};

        interaction.v2 = (function() {

            /**
             * Namespace v2.
             * @memberof sajari.interaction
             * @namespace
             */
            var v2 = {};

            v2.Interaction = (function() {

                /**
                 * Constructs a new Interaction service.
                 * @memberof sajari.interaction.v2
                 * @classdesc Represents an Interaction
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Interaction(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }

                (Interaction.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Interaction;

                /**
                 * Creates new Interaction service using the specified rpc implementation.
                 * @function create
                 * @memberof sajari.interaction.v2.Interaction
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Interaction} RPC service. Useful where requests and/or responses are streamed.
                 */
                Interaction.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };

                /**
                 * Callback as used by {@link sajari.interaction.v2.Interaction#consumeToken}.
                 * @memberof sajari.interaction.v2.Interaction
                 * @typedef ConsumeTokenCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {sajari.interaction.v2.ConsumeTokenResponse} [response] ConsumeTokenResponse
                 */

                /**
                 * Calls ConsumeToken.
                 * @function consumeToken
                 * @memberof sajari.interaction.v2.Interaction
                 * @instance
                 * @param {sajari.interaction.v2.IConsumeTokenRequest} request ConsumeTokenRequest message or plain object
                 * @param {sajari.interaction.v2.Interaction.ConsumeTokenCallback} callback Node-style callback called with the error, if any, and ConsumeTokenResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Interaction.prototype.consumeToken = function consumeToken(request, callback) {
                    return this.rpcCall(consumeToken, $root.sajari.interaction.v2.ConsumeTokenRequest, $root.sajari.interaction.v2.ConsumeTokenResponse, request, callback);
                }, "name", { value: "ConsumeToken" });

                /**
                 * Calls ConsumeToken.
                 * @function consumeToken
                 * @memberof sajari.interaction.v2.Interaction
                 * @instance
                 * @param {sajari.interaction.v2.IConsumeTokenRequest} request ConsumeTokenRequest message or plain object
                 * @returns {Promise<sajari.interaction.v2.ConsumeTokenResponse>} Promise
                 * @variation 2
                 */

                return Interaction;
            })();

            v2.ConsumeTokenRequest = (function() {

                /**
                 * Properties of a ConsumeTokenRequest.
                 * @memberof sajari.interaction.v2
                 * @interface IConsumeTokenRequest
                 * @property {string|null} [token] ConsumeTokenRequest token
                 * @property {string|null} [identifier] ConsumeTokenRequest identifier
                 * @property {number|null} [weight] ConsumeTokenRequest weight
                 * @property {Object.<string,string>|null} [data] ConsumeTokenRequest data
                 */

                /**
                 * Constructs a new ConsumeTokenRequest.
                 * @memberof sajari.interaction.v2
                 * @classdesc Represents a ConsumeTokenRequest.
                 * @implements IConsumeTokenRequest
                 * @constructor
                 * @param {sajari.interaction.v2.IConsumeTokenRequest=} [properties] Properties to set
                 */
                function ConsumeTokenRequest(properties) {
                    this.data = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ConsumeTokenRequest token.
                 * @member {string} token
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @instance
                 */
                ConsumeTokenRequest.prototype.token = "";

                /**
                 * ConsumeTokenRequest identifier.
                 * @member {string} identifier
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @instance
                 */
                ConsumeTokenRequest.prototype.identifier = "";

                /**
                 * ConsumeTokenRequest weight.
                 * @member {number} weight
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @instance
                 */
                ConsumeTokenRequest.prototype.weight = 0;

                /**
                 * ConsumeTokenRequest data.
                 * @member {Object.<string,string>} data
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @instance
                 */
                ConsumeTokenRequest.prototype.data = $util.emptyObject;

                /**
                 * Creates a new ConsumeTokenRequest instance using the specified properties.
                 * @function create
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenRequest=} [properties] Properties to set
                 * @returns {sajari.interaction.v2.ConsumeTokenRequest} ConsumeTokenRequest instance
                 */
                ConsumeTokenRequest.create = function create(properties) {
                    return new ConsumeTokenRequest(properties);
                };

                /**
                 * Encodes the specified ConsumeTokenRequest message. Does not implicitly {@link sajari.interaction.v2.ConsumeTokenRequest.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenRequest} message ConsumeTokenRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ConsumeTokenRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.token != null && message.hasOwnProperty("token"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.token);
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.identifier);
                    if (message.weight != null && message.hasOwnProperty("weight"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.weight);
                    if (message.data != null && message.hasOwnProperty("data"))
                        for (var keys = Object.keys(message.data), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.data[keys[i]]).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified ConsumeTokenRequest message, length delimited. Does not implicitly {@link sajari.interaction.v2.ConsumeTokenRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenRequest} message ConsumeTokenRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ConsumeTokenRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ConsumeTokenRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.interaction.v2.ConsumeTokenRequest} ConsumeTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ConsumeTokenRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.interaction.v2.ConsumeTokenRequest(), key;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.token = reader.string();
                            break;
                        case 2:
                            message.identifier = reader.string();
                            break;
                        case 3:
                            message.weight = reader.int32();
                            break;
                        case 4:
                            reader.skip().pos++;
                            if (message.data === $util.emptyObject)
                                message.data = {};
                            key = reader.string();
                            reader.pos++;
                            message.data[key] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ConsumeTokenRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.interaction.v2.ConsumeTokenRequest} ConsumeTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ConsumeTokenRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ConsumeTokenRequest message.
                 * @function verify
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ConsumeTokenRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.token != null && message.hasOwnProperty("token"))
                        if (!$util.isString(message.token))
                            return "token: string expected";
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        if (!$util.isString(message.identifier))
                            return "identifier: string expected";
                    if (message.weight != null && message.hasOwnProperty("weight"))
                        if (!$util.isInteger(message.weight))
                            return "weight: integer expected";
                    if (message.data != null && message.hasOwnProperty("data")) {
                        if (!$util.isObject(message.data))
                            return "data: object expected";
                        var key = Object.keys(message.data);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.data[key[i]]))
                                return "data: string{k:string} expected";
                    }
                    return null;
                };

                /**
                 * Creates a ConsumeTokenRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.interaction.v2.ConsumeTokenRequest} ConsumeTokenRequest
                 */
                ConsumeTokenRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.interaction.v2.ConsumeTokenRequest)
                        return object;
                    var message = new $root.sajari.interaction.v2.ConsumeTokenRequest();
                    if (object.token != null)
                        message.token = String(object.token);
                    if (object.identifier != null)
                        message.identifier = String(object.identifier);
                    if (object.weight != null)
                        message.weight = object.weight | 0;
                    if (object.data) {
                        if (typeof object.data !== "object")
                            throw TypeError(".sajari.interaction.v2.ConsumeTokenRequest.data: object expected");
                        message.data = {};
                        for (var keys = Object.keys(object.data), i = 0; i < keys.length; ++i)
                            message.data[keys[i]] = String(object.data[keys[i]]);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a ConsumeTokenRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @static
                 * @param {sajari.interaction.v2.ConsumeTokenRequest} message ConsumeTokenRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ConsumeTokenRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.data = {};
                    if (options.defaults) {
                        object.token = "";
                        object.identifier = "";
                        object.weight = 0;
                    }
                    if (message.token != null && message.hasOwnProperty("token"))
                        object.token = message.token;
                    if (message.identifier != null && message.hasOwnProperty("identifier"))
                        object.identifier = message.identifier;
                    if (message.weight != null && message.hasOwnProperty("weight"))
                        object.weight = message.weight;
                    var keys2;
                    if (message.data && (keys2 = Object.keys(message.data)).length) {
                        object.data = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.data[keys2[j]] = message.data[keys2[j]];
                    }
                    return object;
                };

                /**
                 * Converts this ConsumeTokenRequest to JSON.
                 * @function toJSON
                 * @memberof sajari.interaction.v2.ConsumeTokenRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ConsumeTokenRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ConsumeTokenRequest;
            })();

            v2.ConsumeTokenResponse = (function() {

                /**
                 * Properties of a ConsumeTokenResponse.
                 * @memberof sajari.interaction.v2
                 * @interface IConsumeTokenResponse
                 */

                /**
                 * Constructs a new ConsumeTokenResponse.
                 * @memberof sajari.interaction.v2
                 * @classdesc Represents a ConsumeTokenResponse.
                 * @implements IConsumeTokenResponse
                 * @constructor
                 * @param {sajari.interaction.v2.IConsumeTokenResponse=} [properties] Properties to set
                 */
                function ConsumeTokenResponse(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new ConsumeTokenResponse instance using the specified properties.
                 * @function create
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenResponse=} [properties] Properties to set
                 * @returns {sajari.interaction.v2.ConsumeTokenResponse} ConsumeTokenResponse instance
                 */
                ConsumeTokenResponse.create = function create(properties) {
                    return new ConsumeTokenResponse(properties);
                };

                /**
                 * Encodes the specified ConsumeTokenResponse message. Does not implicitly {@link sajari.interaction.v2.ConsumeTokenResponse.verify|verify} messages.
                 * @function encode
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenResponse} message ConsumeTokenResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ConsumeTokenResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified ConsumeTokenResponse message, length delimited. Does not implicitly {@link sajari.interaction.v2.ConsumeTokenResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {sajari.interaction.v2.IConsumeTokenResponse} message ConsumeTokenResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ConsumeTokenResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ConsumeTokenResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {sajari.interaction.v2.ConsumeTokenResponse} ConsumeTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ConsumeTokenResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sajari.interaction.v2.ConsumeTokenResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ConsumeTokenResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {sajari.interaction.v2.ConsumeTokenResponse} ConsumeTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ConsumeTokenResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ConsumeTokenResponse message.
                 * @function verify
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ConsumeTokenResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a ConsumeTokenResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {sajari.interaction.v2.ConsumeTokenResponse} ConsumeTokenResponse
                 */
                ConsumeTokenResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.sajari.interaction.v2.ConsumeTokenResponse)
                        return object;
                    return new $root.sajari.interaction.v2.ConsumeTokenResponse();
                };

                /**
                 * Creates a plain object from a ConsumeTokenResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @static
                 * @param {sajari.interaction.v2.ConsumeTokenResponse} message ConsumeTokenResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ConsumeTokenResponse.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this ConsumeTokenResponse to JSON.
                 * @function toJSON
                 * @memberof sajari.interaction.v2.ConsumeTokenResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ConsumeTokenResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                return ConsumeTokenResponse;
            })();

            return v2;
        })();

        return interaction;
    })();

    return sajari;
})();

$root.google = (function() {

    /**
     * Namespace google.
     * @exports google
     * @namespace
     */
    var google = {};

    google.protobuf = (function() {

        /**
         * Namespace protobuf.
         * @memberof google
         * @namespace
         */
        var protobuf = {};

        protobuf.Timestamp = (function() {

            /**
             * Properties of a Timestamp.
             * @memberof google.protobuf
             * @interface ITimestamp
             * @property {number|Long|null} [seconds] Timestamp seconds
             * @property {number|null} [nanos] Timestamp nanos
             */

            /**
             * Constructs a new Timestamp.
             * @memberof google.protobuf
             * @classdesc Represents a Timestamp.
             * @implements ITimestamp
             * @constructor
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             */
            function Timestamp(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Timestamp seconds.
             * @member {number|Long} seconds
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Timestamp nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.nanos = 0;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             * @returns {google.protobuf.Timestamp} Timestamp instance
             */
            Timestamp.create = function create(properties) {
                return new Timestamp(properties);
            };

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.seconds = reader.int64();
                        break;
                    case 2:
                        message.nanos = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Timestamp message.
             * @function verify
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Timestamp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Timestamp} Timestamp
             */
            Timestamp.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Timestamp)
                    return object;
                var message = new $root.google.protobuf.Timestamp();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.Timestamp} message Timestamp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Timestamp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Timestamp to JSON.
             * @function toJSON
             * @memberof google.protobuf.Timestamp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Timestamp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Timestamp;
        })();

        protobuf.Struct = (function() {

            /**
             * Properties of a Struct.
             * @memberof google.protobuf
             * @interface IStruct
             * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields
             */

            /**
             * Constructs a new Struct.
             * @memberof google.protobuf
             * @classdesc Represents a Struct.
             * @implements IStruct
             * @constructor
             * @param {google.protobuf.IStruct=} [properties] Properties to set
             */
            function Struct(properties) {
                this.fields = {};
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Struct fields.
             * @member {Object.<string,google.protobuf.IValue>} fields
             * @memberof google.protobuf.Struct
             * @instance
             */
            Struct.prototype.fields = $util.emptyObject;

            /**
             * Creates a new Struct instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Struct
             * @static
             * @param {google.protobuf.IStruct=} [properties] Properties to set
             * @returns {google.protobuf.Struct} Struct instance
             */
            Struct.create = function create(properties) {
                return new Struct(properties);
            };

            /**
             * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Struct
             * @static
             * @param {google.protobuf.IStruct} message Struct message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Struct.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.fields != null && message.hasOwnProperty("fields"))
                    for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                        writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                        $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                    }
                return writer;
            };

            /**
             * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Struct
             * @static
             * @param {google.protobuf.IStruct} message Struct message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Struct.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Struct message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Struct
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Struct} Struct
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Struct.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key;
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        reader.skip().pos++;
                        if (message.fields === $util.emptyObject)
                            message.fields = {};
                        key = reader.string();
                        reader.pos++;
                        message.fields[key] = $root.google.protobuf.Value.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Struct message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Struct
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Struct} Struct
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Struct.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Struct message.
             * @function verify
             * @memberof google.protobuf.Struct
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Struct.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.fields != null && message.hasOwnProperty("fields")) {
                    if (!$util.isObject(message.fields))
                        return "fields: object expected";
                    var key = Object.keys(message.fields);
                    for (var i = 0; i < key.length; ++i) {
                        var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);
                        if (error)
                            return "fields." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a Struct message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Struct
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Struct} Struct
             */
            Struct.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Struct)
                    return object;
                var message = new $root.google.protobuf.Struct();
                if (object.fields) {
                    if (typeof object.fields !== "object")
                        throw TypeError(".google.protobuf.Struct.fields: object expected");
                    message.fields = {};
                    for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                        if (typeof object.fields[keys[i]] !== "object")
                            throw TypeError(".google.protobuf.Struct.fields: object expected");
                        message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a Struct message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Struct
             * @static
             * @param {google.protobuf.Struct} message Struct
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Struct.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.objects || options.defaults)
                    object.fields = {};
                var keys2;
                if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                    object.fields = {};
                    for (var j = 0; j < keys2.length; ++j)
                        object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);
                }
                return object;
            };

            /**
             * Converts this Struct to JSON.
             * @function toJSON
             * @memberof google.protobuf.Struct
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Struct.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Struct;
        })();

        protobuf.Value = (function() {

            /**
             * Properties of a Value.
             * @memberof google.protobuf
             * @interface IValue
             * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue
             * @property {number|null} [numberValue] Value numberValue
             * @property {string|null} [stringValue] Value stringValue
             * @property {boolean|null} [boolValue] Value boolValue
             * @property {google.protobuf.IStruct|null} [structValue] Value structValue
             * @property {google.protobuf.IListValue|null} [listValue] Value listValue
             */

            /**
             * Constructs a new Value.
             * @memberof google.protobuf
             * @classdesc Represents a Value.
             * @implements IValue
             * @constructor
             * @param {google.protobuf.IValue=} [properties] Properties to set
             */
            function Value(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Value nullValue.
             * @member {google.protobuf.NullValue} nullValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.nullValue = 0;

            /**
             * Value numberValue.
             * @member {number} numberValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.numberValue = 0;

            /**
             * Value stringValue.
             * @member {string} stringValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.stringValue = "";

            /**
             * Value boolValue.
             * @member {boolean} boolValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.boolValue = false;

            /**
             * Value structValue.
             * @member {google.protobuf.IStruct|null|undefined} structValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.structValue = null;

            /**
             * Value listValue.
             * @member {google.protobuf.IListValue|null|undefined} listValue
             * @memberof google.protobuf.Value
             * @instance
             */
            Value.prototype.listValue = null;

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * Value kind.
             * @member {"nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue"|undefined} kind
             * @memberof google.protobuf.Value
             * @instance
             */
            Object.defineProperty(Value.prototype, "kind", {
                get: $util.oneOfGetter($oneOfFields = ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new Value instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Value
             * @static
             * @param {google.protobuf.IValue=} [properties] Properties to set
             * @returns {google.protobuf.Value} Value instance
             */
            Value.create = function create(properties) {
                return new Value(properties);
            };

            /**
             * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Value
             * @static
             * @param {google.protobuf.IValue} message Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Value.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.nullValue != null && message.hasOwnProperty("nullValue"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);
                if (message.numberValue != null && message.hasOwnProperty("numberValue"))
                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);
                if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                if (message.boolValue != null && message.hasOwnProperty("boolValue"))
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                if (message.structValue != null && message.hasOwnProperty("structValue"))
                    $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.listValue != null && message.hasOwnProperty("listValue"))
                    $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Value
             * @static
             * @param {google.protobuf.IValue} message Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Value.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Value message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Value} Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Value.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.nullValue = reader.int32();
                        break;
                    case 2:
                        message.numberValue = reader.double();
                        break;
                    case 3:
                        message.stringValue = reader.string();
                        break;
                    case 4:
                        message.boolValue = reader.bool();
                        break;
                    case 5:
                        message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                        break;
                    case 6:
                        message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Value message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Value} Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Value.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Value message.
             * @function verify
             * @memberof google.protobuf.Value
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Value.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                    properties.kind = 1;
                    switch (message.nullValue) {
                    default:
                        return "nullValue: enum value expected";
                    case 0:
                        break;
                    }
                }
                if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                    if (properties.kind === 1)
                        return "kind: multiple values";
                    properties.kind = 1;
                    if (typeof message.numberValue !== "number")
                        return "numberValue: number expected";
                }
                if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                    if (properties.kind === 1)
                        return "kind: multiple values";
                    properties.kind = 1;
                    if (!$util.isString(message.stringValue))
                        return "stringValue: string expected";
                }
                if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                    if (properties.kind === 1)
                        return "kind: multiple values";
                    properties.kind = 1;
                    if (typeof message.boolValue !== "boolean")
                        return "boolValue: boolean expected";
                }
                if (message.structValue != null && message.hasOwnProperty("structValue")) {
                    if (properties.kind === 1)
                        return "kind: multiple values";
                    properties.kind = 1;
                    {
                        var error = $root.google.protobuf.Struct.verify(message.structValue);
                        if (error)
                            return "structValue." + error;
                    }
                }
                if (message.listValue != null && message.hasOwnProperty("listValue")) {
                    if (properties.kind === 1)
                        return "kind: multiple values";
                    properties.kind = 1;
                    {
                        var error = $root.google.protobuf.ListValue.verify(message.listValue);
                        if (error)
                            return "listValue." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a Value message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Value
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Value} Value
             */
            Value.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Value)
                    return object;
                var message = new $root.google.protobuf.Value();
                switch (object.nullValue) {
                case "NULL_VALUE":
                case 0:
                    message.nullValue = 0;
                    break;
                }
                if (object.numberValue != null)
                    message.numberValue = Number(object.numberValue);
                if (object.stringValue != null)
                    message.stringValue = String(object.stringValue);
                if (object.boolValue != null)
                    message.boolValue = Boolean(object.boolValue);
                if (object.structValue != null) {
                    if (typeof object.structValue !== "object")
                        throw TypeError(".google.protobuf.Value.structValue: object expected");
                    message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);
                }
                if (object.listValue != null) {
                    if (typeof object.listValue !== "object")
                        throw TypeError(".google.protobuf.Value.listValue: object expected");
                    message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);
                }
                return message;
            };

            /**
             * Creates a plain object from a Value message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Value
             * @static
             * @param {google.protobuf.Value} message Value
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Value.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                    object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;
                    if (options.oneofs)
                        object.kind = "nullValue";
                }
                if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                    object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                    if (options.oneofs)
                        object.kind = "numberValue";
                }
                if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                    object.stringValue = message.stringValue;
                    if (options.oneofs)
                        object.kind = "stringValue";
                }
                if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                    object.boolValue = message.boolValue;
                    if (options.oneofs)
                        object.kind = "boolValue";
                }
                if (message.structValue != null && message.hasOwnProperty("structValue")) {
                    object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);
                    if (options.oneofs)
                        object.kind = "structValue";
                }
                if (message.listValue != null && message.hasOwnProperty("listValue")) {
                    object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);
                    if (options.oneofs)
                        object.kind = "listValue";
                }
                return object;
            };

            /**
             * Converts this Value to JSON.
             * @function toJSON
             * @memberof google.protobuf.Value
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Value.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Value;
        })();

        /**
         * NullValue enum.
         * @name google.protobuf.NullValue
         * @enum {string}
         * @property {number} NULL_VALUE=0 NULL_VALUE value
         */
        protobuf.NullValue = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "NULL_VALUE"] = 0;
            return values;
        })();

        protobuf.ListValue = (function() {

            /**
             * Properties of a ListValue.
             * @memberof google.protobuf
             * @interface IListValue
             * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values
             */

            /**
             * Constructs a new ListValue.
             * @memberof google.protobuf
             * @classdesc Represents a ListValue.
             * @implements IListValue
             * @constructor
             * @param {google.protobuf.IListValue=} [properties] Properties to set
             */
            function ListValue(properties) {
                this.values = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ListValue values.
             * @member {Array.<google.protobuf.IValue>} values
             * @memberof google.protobuf.ListValue
             * @instance
             */
            ListValue.prototype.values = $util.emptyArray;

            /**
             * Creates a new ListValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.ListValue
             * @static
             * @param {google.protobuf.IListValue=} [properties] Properties to set
             * @returns {google.protobuf.ListValue} ListValue instance
             */
            ListValue.create = function create(properties) {
                return new ListValue(properties);
            };

            /**
             * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.ListValue
             * @static
             * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.values != null && message.values.length)
                    for (var i = 0; i < message.values.length; ++i)
                        $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.ListValue
             * @static
             * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ListValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.ListValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.ListValue} ListValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        if (!(message.values && message.values.length))
                            message.values = [];
                        message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ListValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.ListValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.ListValue} ListValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ListValue message.
             * @function verify
             * @memberof google.protobuf.ListValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.values != null && message.hasOwnProperty("values")) {
                    if (!Array.isArray(message.values))
                        return "values: array expected";
                    for (var i = 0; i < message.values.length; ++i) {
                        var error = $root.google.protobuf.Value.verify(message.values[i]);
                        if (error)
                            return "values." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.ListValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.ListValue} ListValue
             */
            ListValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.ListValue)
                    return object;
                var message = new $root.google.protobuf.ListValue();
                if (object.values) {
                    if (!Array.isArray(object.values))
                        throw TypeError(".google.protobuf.ListValue.values: array expected");
                    message.values = [];
                    for (var i = 0; i < object.values.length; ++i) {
                        if (typeof object.values[i] !== "object")
                            throw TypeError(".google.protobuf.ListValue.values: object expected");
                        message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ListValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.ListValue
             * @static
             * @param {google.protobuf.ListValue} message ListValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.values = [];
                if (message.values && message.values.length) {
                    object.values = [];
                    for (var j = 0; j < message.values.length; ++j)
                        object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);
                }
                return object;
            };

            /**
             * Converts this ListValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.ListValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return ListValue;
        })();

        protobuf.Duration = (function() {

            /**
             * Properties of a Duration.
             * @memberof google.protobuf
             * @interface IDuration
             * @property {number|Long|null} [seconds] Duration seconds
             * @property {number|null} [nanos] Duration nanos
             */

            /**
             * Constructs a new Duration.
             * @memberof google.protobuf
             * @classdesc Represents a Duration.
             * @implements IDuration
             * @constructor
             * @param {google.protobuf.IDuration=} [properties] Properties to set
             */
            function Duration(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Duration seconds.
             * @member {number|Long} seconds
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Duration nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.nanos = 0;

            /**
             * Creates a new Duration instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration=} [properties] Properties to set
             * @returns {google.protobuf.Duration} Duration instance
             */
            Duration.create = function create(properties) {
                return new Duration(properties);
            };

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.seconds = reader.int64();
                        break;
                    case 2:
                        message.nanos = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Duration message.
             * @function verify
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Duration.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Duration} Duration
             */
            Duration.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Duration)
                    return object;
                var message = new $root.google.protobuf.Duration();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.Duration} message Duration
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Duration.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Duration to JSON.
             * @function toJSON
             * @memberof google.protobuf.Duration
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Duration.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            return Duration;
        })();

        return protobuf;
    })();

    return google;
})();

module.exports = $root;
