/**
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world\'s first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { TextPosition } from "./textPosition";

/**
 * A synthetic search result that renders as an image. It takes a user to a pre-determined location when clicked.
 */
export class Banner {
  /**
   * The description of the banner, displayed in sub-head font.
   */
  "description"?: string;
  /**
   * The height the banner occupies in grid cells.
   */
  "height"?: number;
  /**
   * The ID of the banner, used to identify clicked banners.
   */
  "id"?: string;
  /**
   * The URL of the image used for the banner.
   */
  "imageUrl"?: string;
  /**
   * The 1-based index indicating where the banner appears in search results.
   */
  "position"?: number;
  /**
   * The URL to redirect the user to when the banner is clicked.
   */
  "targetUrl"?: string;
  /**
   * The color of the text as a hex code with a # prefix, e.g. #FFCC00 or #FC0.
   */
  "textColor"?: string;
  "textPosition"?: TextPosition;
  /**
   * The title of the banner, displayed in header font.
   */
  "title"?: string;
  /**
   * The width the banner occupies in grid cells.
   */
  "width"?: number;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "description",
      baseName: "description",
      type: "string",
    },
    {
      name: "height",
      baseName: "height",
      type: "number",
    },
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "imageUrl",
      baseName: "image_url",
      type: "string",
    },
    {
      name: "position",
      baseName: "position",
      type: "number",
    },
    {
      name: "targetUrl",
      baseName: "target_url",
      type: "string",
    },
    {
      name: "textColor",
      baseName: "text_color",
      type: "string",
    },
    {
      name: "textPosition",
      baseName: "text_position",
      type: "TextPosition",
    },
    {
      name: "title",
      baseName: "title",
      type: "string",
    },
    {
      name: "width",
      baseName: "width",
      type: "number",
    },
  ];

  static getAttributeTypeMap() {
    return Banner.attributeTypeMap;
  }
}
