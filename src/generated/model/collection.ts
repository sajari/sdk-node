/**
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world\'s first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";

export class Collection {
  /**
   * Output only. The ID of the account that owns this collection.
   */
  "accountId"?: string;
  /**
   * The list of authorized query domains for the collection.  Client-side / browser requests to the [QueryCollection](/docs/api#operation/QueryCollection) call can be made by any authorized query domain or any of its subdomains. This allows your interface to make search requests without having to provide an API key in the client-side request.
   */
  "authorizedQueryDomains"?: Array<string>;
  /**
   * Output only. Time the collection was created.
   */
  "createTime"?: Date;
  /**
   * The collection\'s display name. You can change this at any time.
   */
  "displayName": string;
  /**
   * Output only. The collection\'s ID.
   */
  "id"?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "accountId",
      baseName: "account_id",
      type: "string",
    },
    {
      name: "authorizedQueryDomains",
      baseName: "authorized_query_domains",
      type: "Array<string>",
    },
    {
      name: "createTime",
      baseName: "create_time",
      type: "Date",
    },
    {
      name: "displayName",
      baseName: "display_name",
      type: "string",
    },
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
  ];

  static getAttributeTypeMap() {
    return Collection.attributeTypeMap;
  }
}
