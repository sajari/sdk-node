/**
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world\'s first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { PipelineStepParamBinding } from "./pipelineStepParamBinding";

/**
 * Step creates a pipeline step.
 */
export class PipelineStep {
  /**
   * Annotations added to the request when the step is run.
   */
  "annotations"?: Array<string>;
  /**
   * A condition expression to determine if the step should be run.  This is a filter expression much like the query filter expression, but it acts upon the pipeline variables.  For example, to only run the step if the pipeline `q` variable is not empty, set this to `q != \'\'`.
   */
  "condition"?: string;
  /**
   * Description for the step. Overrides the default description.
   */
  "description"?: string;
  /**
   * ID of the step template.
   */
  "id": string;
  /**
   * Bindings for the step parameters.
   */
  "params"?: { [key: string]: PipelineStepParamBinding };
  /**
   * Title for the step. Overrides the default title.
   */
  "title"?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "annotations",
      baseName: "annotations",
      type: "Array<string>",
    },
    {
      name: "condition",
      baseName: "condition",
      type: "string",
    },
    {
      name: "description",
      baseName: "description",
      type: "string",
    },
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "params",
      baseName: "params",
      type: "{ [key: string]: PipelineStepParamBinding; }",
    },
    {
      name: "title",
      baseName: "title",
      type: "string",
    },
  ];

  static getAttributeTypeMap() {
    return PipelineStep.attributeTypeMap;
  }
}
