/**
 * Search.io API
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world\'s first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { PromotionExclusion } from "./promotionExclusion";
import { PromotionFilterBoost } from "./promotionFilterBoost";
import { PromotionFilterCondition } from "./promotionFilterCondition";
import { PromotionPin } from "./promotionPin";
import { PromotionRangeBoost } from "./promotionRangeBoost";

/**
 * Promotion contains a trigger, determining which searches it should be active for, and a list of alterations that should be made to search results when it is active.
 */
export class Promotion {
  /**
   * Output only. The ID of the collection that owns this promotion.
   */
  "collectionId"?: string;
  /**
   * A condition expression applied to a search request that determines which searches the promotion is active for.  For example, to apply the promotion\'s pins and boosts whenever a user searches for \'shoes\' set condition to `q = \'shoes\'`.
   */
  "condition": string;
  /**
   * Output only. Time the promotion was created.
   */
  "createTime"?: Date;
  /**
   * If disabled, the promotion is never triggered.
   */
  "disabled"?: boolean;
  /**
   * The promotion\'s display name.
   */
  "displayName": string;
  /**
   * If specified, the promotion is considered disabled after this time.
   */
  "endTime"?: Date;
  /**
   * The records to exclude from search results, if the promotion is enabled.
   */
  "exclusions"?: Array<PromotionExclusion>;
  /**
   * The filter boosts to apply to searches, if the promotion is enabled.
   */
  "filterBoosts"?: Array<PromotionFilterBoost>;
  /**
   * The conditions applied to the filters passed from the user. A query must match at least one of these in order to trigger the promotion.
   */
  "filterConditions"?: Array<PromotionFilterCondition>;
  /**
   * The promotion\'s ID.
   */
  "id"?: string;
  /**
   * The items to fix to specific positions in the search results.
   */
  "pins"?: Array<PromotionPin>;
  /**
   * The range boosts to apply to searches, if the promotion is enabled.
   */
  "rangeBoosts"?: Array<PromotionRangeBoost>;
  /**
   * If specified, the promotion is considered disabled before this time.
   */
  "startTime"?: Date;
  /**
   * Output only. Time the promotion was last updated.
   */
  "updateTime"?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "collectionId",
      baseName: "collection_id",
      type: "string",
    },
    {
      name: "condition",
      baseName: "condition",
      type: "string",
    },
    {
      name: "createTime",
      baseName: "create_time",
      type: "Date",
    },
    {
      name: "disabled",
      baseName: "disabled",
      type: "boolean",
    },
    {
      name: "displayName",
      baseName: "display_name",
      type: "string",
    },
    {
      name: "endTime",
      baseName: "end_time",
      type: "Date",
    },
    {
      name: "exclusions",
      baseName: "exclusions",
      type: "Array<PromotionExclusion>",
    },
    {
      name: "filterBoosts",
      baseName: "filter_boosts",
      type: "Array<PromotionFilterBoost>",
    },
    {
      name: "filterConditions",
      baseName: "filter_conditions",
      type: "Array<PromotionFilterCondition>",
    },
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "pins",
      baseName: "pins",
      type: "Array<PromotionPin>",
    },
    {
      name: "rangeBoosts",
      baseName: "range_boosts",
      type: "Array<PromotionRangeBoost>",
    },
    {
      name: "startTime",
      baseName: "start_time",
      type: "Date",
    },
    {
      name: "updateTime",
      baseName: "update_time",
      type: "Date",
    },
  ];

  static getAttributeTypeMap() {
    return Promotion.attributeTypeMap;
  }
}
