/**
 * Sajari API
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4alpha1
 * Contact: support@sajari.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { StepConfigConstantConfigs1 } from "./stepConfigConstantConfigs1";
import { StepConfigParameterConfigs1 } from "./stepConfigParameterConfigs1";

/**
 * StepConfig creates a pipeline step.
 */
export class V4alpha1StepConfig1 {
  /**
   * ID of the step template.
   */
  "id": string;
  /**
   * Title for the step. Overrides the default title.
   */
  "title"?: string;
  /**
   * Description for the step. Overrides the default description.
   */
  "description"?: string;
  /**
   * Mapping of identifier to list of changes to apply.
   */
  "params"?: { [key: string]: StepConfigParameterConfigs1 };
  /**
   * Mapping of identifier to list of changes to apply.
   */
  "consts"?: { [key: string]: StepConfigConstantConfigs1 };
  /**
   * Condition expression to determine if the step should be run.  This is a filter expression much like the query filter expression, but it acts upon the pipeline values.  For example, to only run the step if the pipeline `q` value is not empty, set condition to `q != \'\'`.
   */
  "condition"?: string;
  /**
   * Annotations added to the request when the step is run.
   */
  "annotations"?: Array<string>;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "title",
      baseName: "title",
      type: "string",
    },
    {
      name: "description",
      baseName: "description",
      type: "string",
    },
    {
      name: "params",
      baseName: "params",
      type: "{ [key: string]: StepConfigParameterConfigs1; }",
    },
    {
      name: "consts",
      baseName: "consts",
      type: "{ [key: string]: StepConfigConstantConfigs1; }",
    },
    {
      name: "condition",
      baseName: "condition",
      type: "string",
    },
    {
      name: "annotations",
      baseName: "annotations",
      type: "Array<string>",
    },
  ];

  static getAttributeTypeMap() {
    return V4alpha1StepConfig1.attributeTypeMap;
  }
}
